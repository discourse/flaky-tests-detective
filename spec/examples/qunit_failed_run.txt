HEAD is now at 6003133 DEV: skip creating multisite db when running JS tests only
remote: Enumerating objects: 536, done.[K
remote: Counting objects:   0% (1/536)   [K
remote: Counting objects:   1% (6/536)   [K
remote: Counting objects:   2% (11/536)   [K
remote: Counting objects:   3% (17/536)   [K
remote: Counting objects:   4% (22/536)   [K
remote: Counting objects:   5% (27/536)   [K
remote: Counting objects:   6% (33/536)   [K
remote: Counting objects:   7% (38/536)   [K
remote: Counting objects:   8% (43/536)   [K
remote: Counting objects:   9% (49/536)   [K
remote: Counting objects:  10% (54/536)   [K
remote: Counting objects:  11% (59/536)   [K
remote: Counting objects:  12% (65/536)   [K
remote: Counting objects:  13% (70/536)   [K
remote: Counting objects:  14% (76/536)   [K
remote: Counting objects:  15% (81/536)   [K
remote: Counting objects:  16% (86/536)   [K
remote: Counting objects:  17% (92/536)   [K
remote: Counting objects:  18% (97/536)   [K
remote: Counting objects:  19% (102/536)   [K
remote: Counting objects:  20% (108/536)   [K
remote: Counting objects:  21% (113/536)   [K
remote: Counting objects:  22% (118/536)   [K
remote: Counting objects:  23% (124/536)   [K
remote: Counting objects:  24% (129/536)   [K
remote: Counting objects:  25% (134/536)   [K
remote: Counting objects:  26% (140/536)   [K
remote: Counting objects:  27% (145/536)   [K
remote: Counting objects:  28% (151/536)   [K
remote: Counting objects:  29% (156/536)   [K
remote: Counting objects:  30% (161/536)   [K
remote: Counting objects:  31% (167/536)   [K
remote: Counting objects:  32% (172/536)   [K
remote: Counting objects:  33% (177/536)   [K
remote: Counting objects:  34% (183/536)   [K
remote: Counting objects:  35% (188/536)   [K
remote: Counting objects:  36% (193/536)   [K
remote: Counting objects:  37% (199/536)   [K
remote: Counting objects:  38% (204/536)   [K
remote: Counting objects:  39% (210/536)   [K
remote: Counting objects:  40% (215/536)   [K
remote: Counting objects:  41% (220/536)   [K
remote: Counting objects:  42% (226/536)   [K
remote: Counting objects:  43% (231/536)   [K
remote: Counting objects:  44% (236/536)   [K
remote: Counting objects:  45% (242/536)   [K
remote: Counting objects:  46% (247/536)   [K
remote: Counting objects:  47% (252/536)   [K
remote: Counting objects:  48% (258/536)   [K
remote: Counting objects:  49% (263/536)   [K
remote: Counting objects:  50% (268/536)   [K
remote: Counting objects:  51% (274/536)   [K
remote: Counting objects:  52% (279/536)   [K
remote: Counting objects:  53% (285/536)   [K
remote: Counting objects:  54% (290/536)   [K
remote: Counting objects:  55% (295/536)   [K
remote: Counting objects:  56% (301/536)   [K
remote: Counting objects:  57% (306/536)   [K
remote: Counting objects:  58% (311/536)   [K
remote: Counting objects:  59% (317/536)   [K
remote: Counting objects:  60% (322/536)   [K
remote: Counting objects:  61% (327/536)   [K
remote: Counting objects:  62% (333/536)   [K
remote: Counting objects:  63% (338/536)   [K
remote: Counting objects:  64% (344/536)   [K
remote: Counting objects:  65% (349/536)   [K
remote: Counting objects:  66% (354/536)   [K
remote: Counting objects:  67% (360/536)   [K
remote: Counting objects:  68% (365/536)   [K
remote: Counting objects:  69% (370/536)   [K
remote: Counting objects:  70% (376/536)   [K
remote: Counting objects:  71% (381/536)   [K
remote: Counting objects:  72% (386/536)   [K
remote: Counting objects:  73% (392/536)   [K
remote: Counting objects:  74% (397/536)   [K
remote: Counting objects:  75% (402/536)   [K
remote: Counting objects:  76% (408/536)   [K
remote: Counting objects:  77% (413/536)   [K
remote: Counting objects:  78% (419/536)   [K
remote: Counting objects:  79% (424/536)   [K
remote: Counting objects:  80% (429/536)   [K
remote: Counting objects:  81% (435/536)   [K
remote: Counting objects:  82% (440/536)   [K
remote: Counting objects:  83% (445/536)   [K
remote: Counting objects:  84% (451/536)   [K
remote: Counting objects:  85% (456/536)   [K
remote: Counting objects:  86% (461/536)   [K
remote: Counting objects:  87% (467/536)   [K
remote: Counting objects:  88% (472/536)   [K
remote: Counting objects:  89% (478/536)   [K
remote: Counting objects:  90% (483/536)   [K
remote: Counting objects:  91% (488/536)   [K
remote: Counting objects:  92% (494/536)   [K
remote: Counting objects:  93% (499/536)   [K
remote: Counting objects:  94% (504/536)   [K
remote: Counting objects:  95% (510/536)   [K
remote: Counting objects:  96% (515/536)   [K
remote: Counting objects:  97% (520/536)   [K
remote: Counting objects:  98% (526/536)   [K
remote: Counting objects:  99% (531/536)   [K
remote: Counting objects: 100% (536/536)   [K
remote: Counting objects: 100% (536/536), done.[K
remote: Compressing objects:   1% (1/54)   [K
remote: Compressing objects:   3% (2/54)   [K
remote: Compressing objects:   5% (3/54)   [K
remote: Compressing objects:   7% (4/54)   [K
remote: Compressing objects:   9% (5/54)   [K
remote: Compressing objects:  11% (6/54)   [K
remote: Compressing objects:  12% (7/54)   [K
remote: Compressing objects:  14% (8/54)   [K
remote: Compressing objects:  16% (9/54)   [K
remote: Compressing objects:  18% (10/54)   [K
remote: Compressing objects:  20% (11/54)   [K
remote: Compressing objects:  22% (12/54)   [K
remote: Compressing objects:  24% (13/54)   [K
remote: Compressing objects:  25% (14/54)   [K
remote: Compressing objects:  27% (15/54)   [K
remote: Compressing objects:  29% (16/54)   [K
remote: Compressing objects:  31% (17/54)   [K
remote: Compressing objects:  33% (18/54)   [K
remote: Compressing objects:  35% (19/54)   [K
remote: Compressing objects:  37% (20/54)   [K
remote: Compressing objects:  38% (21/54)   [K
remote: Compressing objects:  40% (22/54)   [K
remote: Compressing objects:  42% (23/54)   [K
remote: Compressing objects:  44% (24/54)   [K
remote: Compressing objects:  46% (25/54)   [K
remote: Compressing objects:  48% (26/54)   [K
remote: Compressing objects:  50% (27/54)   [K
remote: Compressing objects:  51% (28/54)   [K
remote: Compressing objects:  53% (29/54)   [K
remote: Compressing objects:  55% (30/54)   [K
remote: Compressing objects:  57% (31/54)   [K
remote: Compressing objects:  59% (32/54)   [K
remote: Compressing objects:  61% (33/54)   [K
remote: Compressing objects:  62% (34/54)   [K
remote: Compressing objects:  64% (35/54)   [K
remote: Compressing objects:  66% (36/54)   [K
remote: Compressing objects:  68% (37/54)   [K
remote: Compressing objects:  70% (38/54)   [K
remote: Compressing objects:  72% (39/54)   [K
remote: Compressing objects:  74% (40/54)   [K
remote: Compressing objects:  75% (41/54)   [K
remote: Compressing objects:  77% (42/54)   [K
remote: Compressing objects:  79% (43/54)   [K
remote: Compressing objects:  81% (44/54)   [K
remote: Compressing objects:  83% (45/54)   [K
remote: Compressing objects:  85% (46/54)   [K
remote: Compressing objects:  87% (47/54)   [K
remote: Compressing objects:  88% (48/54)   [K
remote: Compressing objects:  90% (49/54)   [K
remote: Compressing objects:  92% (50/54)   [K
remote: Compressing objects:  94% (51/54)   [K
remote: Compressing objects:  96% (52/54)   [K
remote: Compressing objects:  98% (53/54)   [K
remote: Compressing objects: 100% (54/54)   [K
remote: Compressing objects: 100% (54/54), done.[K
Receiving objects:   0% (1/649)   
Receiving objects:   1% (7/649)   
Receiving objects:   2% (13/649)   
Receiving objects:   3% (20/649)   
Receiving objects:   4% (26/649)   
Receiving objects:   5% (33/649)   
Receiving objects:   6% (39/649)   
Receiving objects:   7% (46/649)   
Receiving objects:   8% (52/649)   
Receiving objects:   9% (59/649)   
Receiving objects:  10% (65/649)   
Receiving objects:  11% (72/649)   
Receiving objects:  12% (78/649)   
Receiving objects:  13% (85/649)   
Receiving objects:  14% (91/649)   
Receiving objects:  15% (98/649)   
Receiving objects:  16% (104/649)   
Receiving objects:  17% (111/649)   
Receiving objects:  18% (117/649)   
Receiving objects:  19% (124/649)   
Receiving objects:  20% (130/649)   
Receiving objects:  21% (137/649)   
Receiving objects:  22% (143/649)   
Receiving objects:  23% (150/649)   
Receiving objects:  24% (156/649)   
Receiving objects:  25% (163/649)   
Receiving objects:  26% (169/649)   
Receiving objects:  27% (176/649)   
Receiving objects:  28% (182/649)   
Receiving objects:  29% (189/649)   
Receiving objects:  30% (195/649)   
Receiving objects:  31% (202/649)   
Receiving objects:  32% (208/649)   
Receiving objects:  33% (215/649)   
Receiving objects:  34% (221/649)   
Receiving objects:  35% (228/649)   
Receiving objects:  36% (234/649)   
Receiving objects:  37% (241/649)   
Receiving objects:  38% (247/649)   
Receiving objects:  39% (254/649)   
Receiving objects:  40% (260/649)   
Receiving objects:  41% (267/649)   
Receiving objects:  42% (273/649)   
Receiving objects:  43% (280/649)   
Receiving objects:  44% (286/649)   
Receiving objects:  45% (293/649)   
Receiving objects:  46% (299/649)   
Receiving objects:  47% (306/649)   
Receiving objects:  48% (312/649)   
Receiving objects:  49% (319/649)   
Receiving objects:  50% (325/649)   
Receiving objects:  51% (331/649)   
Receiving objects:  52% (338/649)   
Receiving objects:  53% (344/649)   
Receiving objects:  54% (351/649)   
Receiving objects:  55% (357/649)   
Receiving objects:  56% (364/649)   
Receiving objects:  57% (370/649)   
Receiving objects:  58% (377/649)   
Receiving objects:  59% (383/649)   
Receiving objects:  60% (390/649)   
Receiving objects:  61% (396/649)   
Receiving objects:  62% (403/649)   
Receiving objects:  63% (409/649)   
Receiving objects:  64% (416/649)   
Receiving objects:  65% (422/649)   
Receiving objects:  66% (429/649)   
Receiving objects:  67% (435/649)   
Receiving objects:  68% (442/649)   
Receiving objects:  69% (448/649)   
Receiving objects:  70% (455/649)   
Receiving objects:  71% (461/649)   
Receiving objects:  72% (468/649)   
Receiving objects:  73% (474/649)   
Receiving objects:  74% (481/649)   
Receiving objects:  75% (487/649)   
Receiving objects:  76% (494/649)   
Receiving objects:  77% (500/649)   
Receiving objects:  78% (507/649)   
Receiving objects:  79% (513/649)   
Receiving objects:  80% (520/649)   
Receiving objects:  81% (526/649)   
Receiving objects:  82% (533/649)   
Receiving objects:  83% (539/649)   
Receiving objects:  84% (546/649)   
Receiving objects:  85% (552/649)   
Receiving objects:  86% (559/649)   
Receiving objects:  87% (565/649)   
Receiving objects:  88% (572/649)   
Receiving objects:  89% (578/649)   
Receiving objects:  90% (585/649)   
Receiving objects:  91% (591/649)   
Receiving objects:  92% (598/649)   
Receiving objects:  93% (604/649)   
remote: Total 649 (delta 491), reused 520 (delta 482), pack-reused 113[K
Receiving objects:  94% (611/649)   
Receiving objects:  95% (617/649)   
Receiving objects:  96% (624/649)   
Receiving objects:  97% (630/649)   
Receiving objects:  98% (637/649)   
Receiving objects:  99% (643/649)   
Receiving objects: 100% (649/649)   
Receiving objects: 100% (649/649), 252.33 KiB | 0 bytes/s, done.
Resolving deltas:   0% (0/521)   
Resolving deltas:   2% (12/521)   
Resolving deltas:   3% (18/521)   
Resolving deltas:   4% (21/521)   
Resolving deltas:   5% (27/521)   
Resolving deltas:   6% (32/521)   
Resolving deltas:   8% (42/521)   
Resolving deltas:   9% (47/521)   
Resolving deltas:  10% (57/521)   
Resolving deltas:  11% (59/521)   
Resolving deltas:  12% (67/521)   
Resolving deltas:  13% (69/521)   
Resolving deltas:  14% (74/521)   
Resolving deltas:  15% (79/521)   
Resolving deltas:  16% (84/521)   
Resolving deltas:  17% (90/521)   
Resolving deltas:  18% (95/521)   
Resolving deltas:  19% (101/521)   
Resolving deltas:  20% (106/521)   
Resolving deltas:  21% (111/521)   
Resolving deltas:  22% (117/521)   
Resolving deltas:  23% (122/521)   
Resolving deltas:  24% (127/521)   
Resolving deltas:  25% (132/521)   
Resolving deltas:  26% (139/521)   
Resolving deltas:  27% (144/521)   
Resolving deltas:  28% (149/521)   
Resolving deltas:  29% (154/521)   
Resolving deltas:  30% (157/521)   
Resolving deltas:  31% (164/521)   
Resolving deltas:  32% (170/521)   
Resolving deltas:  33% (172/521)   
Resolving deltas:  34% (179/521)   
Resolving deltas:  35% (184/521)   
Resolving deltas:  36% (190/521)   
Resolving deltas:  37% (197/521)   
Resolving deltas:  38% (200/521)   
Resolving deltas:  40% (212/521)   
Resolving deltas:  41% (214/521)   
Resolving deltas:  42% (219/521)   
Resolving deltas:  43% (225/521)   
Resolving deltas:  44% (234/521)   
Resolving deltas:  45% (235/521)   
Resolving deltas:  46% (243/521)   
Resolving deltas:  47% (246/521)   
Resolving deltas:  48% (252/521)   
Resolving deltas:  49% (257/521)   
Resolving deltas:  50% (263/521)   
Resolving deltas:  51% (267/521)   
Resolving deltas:  52% (271/521)   
Resolving deltas:  59% (308/521)   
Resolving deltas:  60% (314/521)   
Resolving deltas:  61% (320/521)   
Resolving deltas:  62% (324/521)   
Resolving deltas:  63% (329/521)   
Resolving deltas:  64% (337/521)   
Resolving deltas:  65% (343/521)   
Resolving deltas:  67% (351/521)   
Resolving deltas:  68% (355/521)   
Resolving deltas:  69% (360/521)   
Resolving deltas:  70% (367/521)   
Resolving deltas:  71% (371/521)   
Resolving deltas:  72% (376/521)   
Resolving deltas:  73% (381/521)   
Resolving deltas:  74% (386/521)   
Resolving deltas:  75% (391/521)   
Resolving deltas:  76% (396/521)   
Resolving deltas:  77% (403/521)   
Resolving deltas:  78% (407/521)   
Resolving deltas:  79% (412/521)   
Resolving deltas:  80% (420/521)   
Resolving deltas:  81% (423/521)   
Resolving deltas:  82% (428/521)   
Resolving deltas:  83% (433/521)   
Resolving deltas:  84% (441/521)   
Resolving deltas:  85% (443/521)   
Resolving deltas:  86% (449/521)   
Resolving deltas:  87% (454/521)   
Resolving deltas:  88% (460/521)   
Resolving deltas:  89% (465/521)   
Resolving deltas:  90% (470/521)   
Resolving deltas:  91% (475/521)   
Resolving deltas:  92% (480/521)   
Resolving deltas:  93% (485/521)   
Resolving deltas:  94% (490/521)   
Resolving deltas:  95% (495/521)   
Resolving deltas:  96% (502/521)   
Resolving deltas:  97% (506/521)   
Resolving deltas:  98% (511/521)   
Resolving deltas:  99% (516/521)   
Resolving deltas: 100% (521/521)   
Resolving deltas: 100% (521/521), completed with 209 local objects.
From https://github.com/discourse/discourse
   6003133..4c23083  master     -> origin/master
 + be678c8...c1d5f4b reviewable -> origin/reviewable  (forced update)
   896204b..4c23083  tests-passed -> origin/tests-passed
Updating 6003133..4c23083
Fast-forward
 Gemfile                                            |  1 [32m+[m
 Gemfile.lock                                       |  7 [32m+++[m
 .../admin/components/admin-web-hook-status.js.es6  |  4 [32m+[m[31m-[m
 .../admin/controllers/admin-users-list-show.js.es6 |  4 [32m+[m[31m-[m
 .../admin/routes/admin-user-index.js.es6           |  1 [32m+[m
 .../admin/routes/admin-users-list-show.js.es6      |  1 [31m-[m
 .../admin/templates/modal/admin-reseed.hbs         |  2 [32m+[m[31m-[m
 .../admin/templates/users-list-show.hbs            | 14 [32m+++[m[31m--[m
 ...lass.js.es6 => add-category-tag-classes.js.es6} | 14 [32m+++[m[31m--[m
 .../discourse/components/discourse-topic.js.es6    |  3 [32m+[m[31m-[m
 .../discourse/controllers/edit-category.js.es6     | 30 [32m++++[m[31m-----[m
 app/assets/javascripts/discourse/lib/url.js.es6    |  3 [32m+[m[31m-[m
 .../javascripts/discourse/models/topic.js.es6      |  5 [32m++[m
 .../discourse/templates/group-index.hbs            |  1 [32m+[m
 .../discourse/templates/mobile/group-index.hbs     |  1 [32m+[m
 .../discourse/templates/navigation/category.hbs    |  2 [32m+[m[31m-[m
 .../discourse/templates/preferences/account.hbs    |  2 [32m+[m[31m-[m
 .../javascripts/discourse/templates/topic.hbs      |  2 [32m+[m[31m-[m
 .../discourse/widgets/user-notifications.js.es6    |  7 [32m++[m[31m-[m
 app/assets/javascripts/pretty-text/emoji.js.es6    | 58 [32m++++++++++++[m[31m------[m
 .../javascripts/pretty-text/emoji/data.js.es6.erb  |  1 [32m+[m
 .../stylesheets/common/admin/admin_base.scss       |  3 [32m+[m[31m-[m
 app/assets/stylesheets/common/base/lightbox.scss   | 32 [32m+++++++[m[31m---[m
 app/assets/stylesheets/desktop/topic-post.scss     |  3 [32m+[m
 app/assets/stylesheets/mobile/lightbox.scss        | 10 [32m++[m[31m-[m
 app/controllers/admin/email_controller.rb          | 10 [32m++[m[31m-[m
 app/controllers/admin/watched_words_controller.rb  |  2 [32m+[m[31m-[m
 app/controllers/admin/web_hooks_controller.rb      |  3 [32m+[m
 app/jobs/regular/emit_web_hook_event.rb            | 18 [32m+++[m[31m---[m
 .../regular/notify_mailing_list_subscribers.rb     |  5 [32m++[m
 app/jobs/regular/test_email.rb                     | 20 [31m------[m
 app/jobs/regular/user_email.rb                     | 11 [32m++[m[31m--[m
 app/models/emoji.rb                                |  8 [32m+[m[31m--[m
 app/models/optimized_image.rb                      |  2 [32m+[m[31m-[m
 app/models/report.rb                               | 52 [32m++++++++++++[m[31m----[m
 app/models/user_history.rb                         | 10 [32m++[m[31m-[m
 app/models/web_hook.rb                             |  3 [32m+[m[31m-[m
 app/serializers/admin_web_hook_serializer.rb       |  4 [32m++[m
 app/services/post_alerter.rb                       |  6 [32m++[m
 app/services/staff_action_logger.rb                | 24 [32m++++++++[m
 config/database.yml                                |  2 [32m+[m[31m-[m
 config/discourse_defaults.conf                     |  3 [32m+[m
 config/initializers/100-logster.rb                 |  2 [32m+[m
 config/locales/client.en.yml                       | 16 [32m+++[m[31m--[m
 config/locales/server.en.yml                       |  8 [32m++[m[31m-[m
 ..._index_method_enabled_on_user_second_factors.rb |  5 [32m++[m
 ...152347_force_rebake_on_posts_with_lightboxes.rb | 13 [32m++++[m
 docs/DEVELOPER-ADVANCED.md                         |  4 [32m+[m[31m-[m
 lib/composer_messages_finder.rb                    |  2 [32m+[m[31m-[m
 lib/cooked_post_processor.rb                       |  3 [32m+[m[31m-[m
 lib/db_helper.rb                                   |  2 [31m-[m
 lib/email/sender.rb                                | 12 [32m++[m[31m--[m
 lib/post_creator.rb                                |  4 [32m+[m[31m-[m
 lib/pretty_text.rb                                 | 12 [32m+++[m[31m-[m
 lib/pretty_text/shims.js                           |  1 [32m+[m
 lib/tasks/db.rake                                  | 36 [32m++++++[m[31m-----[m
 lib/tasks/docker.rake                              |  7 [32m+[m[31m--[m
 lib/tasks/javascript.rake                          |  3 [32m+[m
 lib/tasks/uploads.rake                             | 39 [32m++++++++++++[m
 package.json                                       |  1 [32m+[m
 spec/components/cooked_post_processor_spec.rb      | 10 [32m+[m[31m--[m
 spec/components/email/sender_spec.rb               | 25 [32m+++++[m[31m---[m
 spec/components/post_creator_spec.rb               | 42 [32m+++++++++++++[m
 spec/fabricators/muted_user.rb                     |  3 [32m+[m
 spec/fixtures/csv/words.csv                        |  6 [32m++[m
 spec/integration/watched_words_spec.rb             | 21 [32m+++++++[m
 spec/jobs/notify_mailing_list_subscribers_spec.rb  |  5 [32m++[m
 spec/jobs/test_email_spec.rb                       | 25 [31m--------[m
 spec/jobs/user_email_spec.rb                       | 51 [32m++++++++++[m[31m------[m
 spec/lib/db_helper_spec.rb                         | 10 [32m+++[m
 spec/models/optimized_image_spec.rb                | 12 [32m++++[m
 spec/models/report_spec.rb                         | 22 [32m+++++[m[31m--[m
 spec/models/topic_spec.rb                          |  5 [32m++[m
 spec/requests/admin/email_controller_spec.rb       | 26 [32m+++++[m[31m---[m
 spec/requests/admin/web_hooks_controller_spec.rb   | 25 [32m++++++++[m
 spec/services/post_alerter_spec.rb                 |  9 [32m+++[m
 spec/services/search_indexer_spec.rb               |  3 [32m+[m[31m-[m
 .../acceptance/admin-user-index-test.js.es6        | 71 [32m+++++++++++++++++++++[m[31m-[m
 .../acceptance/admin-users-list-test.js.es6        | 58 [32m++++++++++++++++[m[31m--[m
 .../acceptance/category-chooser-test.js.es6        | 20 [32m+++[m[31m---[m
 .../acceptance/category-edit-test.js.es6           | 28 [32m+++[m[31m------[m
 test/javascripts/acceptance/topic-test.js.es6      | 17 [32m++++++[m
 test/javascripts/helpers/create-pretender.js.es6   | 43 [32m++++++++++++[m[31m-[m
 test/javascripts/helpers/select-kit-helper.js      |  6 [32m+[m[31m-[m
 vendor/assets/javascripts/bootstrap-modal.js       | 68 [32m+++++++++++++[m[31m--------[m
 yarn.lock                                          |  5 [32m++[m
 86 files changed, 871 insertions(+), 309 deletions(-)
 rename app/assets/javascripts/discourse/components/{add-category-class.js.es6 => add-category-tag-classes.js.es6} (65%)
 delete mode 100644 app/jobs/regular/test_email.rb
 create mode 100644 db/migrate/20190321072029_add_index_method_enabled_on_user_second_factors.rb
 create mode 100644 db/migrate/20190322152347_force_rebake_on_posts_with_lightboxes.rb
 create mode 100644 spec/fabricators/muted_user.rb
 create mode 100644 spec/fixtures/csv/words.csv
 delete mode 100644 spec/jobs/test_email_spec.rb
Note: checking out 'origin/tests-passed'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

HEAD is now at 4c23083... FIX: Set text for titles in custom push notifications
[33mWarning: the running version of Bundler (1.17.2) is older than the version that created the lockfile (1.17.3). We suggest you upgrade to the latest version of Bundler by running `gem install bundler`.
[0mFetching gem metadata from https://rubygems.org/...........
Using rake 12.3.2
Using concurrent-ruby 1.1.4
Using i18n 1.5.3
Using minitest 5.11.3
Using thread_safe 0.3.6
Using tzinfo 1.2.5
Using activesupport 5.2.2.1
Using builder 3.2.3
Using erubi 1.8.0
Using mini_portile2 2.4.0
Using nokogiri 1.10.1
Using rails-dom-testing 2.0.3
Using crass 1.0.4
Using loofah 2.2.3
Using rails-html-sanitizer 1.0.4
Using actionview 5.2.2.1
Using rack 2.0.6
Using rack-test 1.1.0
Using actionpack 5.2.2.1
Using globalid 0.4.1
Using activejob 5.2.2.1
Using mini_mime 1.0.1
Using mail 2.7.1
Using actionmailer 5.2.2.1
Using activemodel 5.2.2.1
Using active_model_serializers 0.8.4
Using arel 9.0.0
Using activerecord 5.2.2.1
Using public_suffix 3.0.3
Using addressable 2.5.2
Using annotate 2.7.4
Using ast 2.4.0
Using aws-eventstream 1.0.1
Using aws-partitions 1.138.0
Using aws-sigv4 1.0.3
Using jmespath 1.4.0
Using aws-sdk-core 3.46.1
Using aws-sdk-kms 1.13.0
Using aws-sdk-s3 1.30.1
Using aws-sdk-sns 1.9.0
Using ember-source 2.18.2
Using execjs 2.7.0
Using barber 0.12.0
Using coderay 1.1.2
Using better_errors 2.5.0
Using debug_inspector 0.0.3
Using binding_of_caller 0.8.0
Using msgpack 1.2.6
Using bootsnap 1.3.2
Using uniform_notifier 1.12.1
Using bullet 5.9.0
Using bundler 1.17.2
Using byebug 10.0.2
Using certified 1.0.0
Using chunky_png 1.3.11
Using claide 1.0.2
Using colored2 3.1.2
Using cork 0.3.0
Using nap 1.1.0
Using open4 1.3.4
Using claide-plugins 0.9.2
Using connection_pool 2.2.2
Using cppjieba_rb 0.3.3
Using safe_yaml 1.0.4
Using crack 0.4.3
Using multipart-post 2.0.0
Using faraday 0.15.4
Using faraday-http-cache 1.3.1
Using git 1.5.0
Using kramdown 1.17.0
Using no_proxy_fix 0.1.2
Using sawyer 0.8.1
Using octokit 4.13.0
Using unicode-display_width 1.4.1
Using terminal-table 1.8.0
Using danger 5.13.0
Using diff-lcs 1.3
Using discourse-ember-source 3.7.0.2
Using exifr 1.3.5
Using fspath 3.1.0
Using image_size 1.5.0
Using in_threads 1.5.0
Using progress 3.5.0
Using discourse_image_optim 0.26.2
Using email_reply_trimmer 0.1.12
Using ember-data-source 3.0.2
Using sprockets 3.7.2
Using ember-handlebars-template 0.8.0
Using method_source 0.8.2
Using thor 0.20.3
Using railties 5.2.2.1
Using jquery-rails 4.3.3
Using ember-rails 0.18.5
Using excon 0.62.0
Using fabrication 2.20.1
Using fakeweb 1.3.0
Using fast_blank 1.0.0
Using rake-compiler 1.0.4
Using fast_xor 1.1.3
Using fast_xs 0.8.0
Using fastimage 2.1.5
Using ffi 1.10.0
Using flamegraph 0.9.5
Using gc_tracer 1.5.1
Using guess_html_encoding 0.0.11
Using hashdiff 0.3.7
Using hashie 3.6.0
Using highline 1.7.10
Using hiredis 0.6.3
Using hkdf 0.3.0
Using htmlentities 4.3.4
Using http_accept_language 2.0.5
Using jaro_winkler 1.5.2
Using jwt 2.1.0
Using kgio 2.11.2
Using libv8 6.7.288.46.1 (x86_64-linux)
Using rb-fsevent 0.10.3
Using rb-inotify 0.10.0
Using ruby_dep 1.5.0
Using listen 3.1.5
Using request_store 1.4.1
Using lograge 0.10.0
Using logstash-event 1.2.02
Using logstash-logger 0.26.1
Using logster 2.2.0
Using lru_redux 1.1.0
Using maxminddb 0.1.22
Using memory_profiler 0.9.12
Using message_bus 2.2.0
Using metaclass 0.0.4
Using mini_racer 0.2.4
Using rack-protection 2.0.5
Using redis 4.0.1
Using sidekiq 5.2.5
Using mini_scheduler 0.9.1
Using mini_sql 0.2.1
Using mini_suffix 0.3.0
Using mocha 1.5.0
Using mock_redis 0.18.0
Using moneta 1.0.0
Using multi_json 1.13.1
Using multi_xml 0.6.0
Using mustache 1.1.0
Using nokogumbo 2.0.1
Using oauth 0.5.4
Using oauth2 1.4.1
Using oj 3.7.8
Using omniauth 1.9.0
Using omniauth-oauth2 1.6.0
Using omniauth-facebook 5.0.0
Using omniauth-github 1.3.0
Using omniauth-google-oauth2 0.6.0
Using omniauth-instagram 1.3.0
Using omniauth-oauth 1.1.0
Using ruby-openid 2.7.0
Using rack-openid 1.3.1
Using omniauth-openid 1.0.1
Using omniauth-twitter 1.4.0
Using sanitize 5.0.0
Using onebox 1.8.82
Using openid-redis-store 0.0.2
Using optimist 3.0.0
Using parallel 1.13.0
Using parser 2.6.0.0
Using pg 1.1.4
Using powerpack 0.1.2
Using slop 3.6.0
Using pry 0.10.4
Using pry-nav 0.2.4
Using pry-rails 0.3.6
Using puma 3.12.0
Using r2 0.2.7
Using rack-mini-profiler 1.0.2
Using rails_multisite 2.0.6
Using rainbow 3.0.0
Using raindrops 0.19.0
Using rbtrace 0.4.11
Using rchardet 1.8.0
Using redis-namespace 1.6.0
Using rinku 2.0.4
Using rotp 3.3.1
Using rqrcode 0.10.1
Using rspec-support 3.7.1
Using rspec-core 3.7.1
Using rspec-expectations 3.7.0
Using rspec-mocks 3.7.0
Using rspec 3.7.0
Using rspec-html-matchers 0.9.1
Using rspec-rails 3.7.2
Using rtlit 0.0.5
Using ruby-progressbar 1.10.0
Using rubocop 0.63.1
Using ruby-prof 0.17.0
Using ruby-readability 0.7.0
Using sassc 2.0.1
Using sprockets-rails 3.2.1
Using tilt 2.0.8
[32mFetching sassc-rails 2.1.0[0m
[32mInstalling sassc-rails 2.1.0[0m
Using seed-fu 2.3.9
Using shoulda-context 1.2.2
Using shoulda-matchers 2.8.0
Using shoulda 3.5.0
Using sshkey 1.9.0
Using stackprof 0.2.12
Using uglifier 4.1.20
Using unf_ext 0.0.7.5
Using unf 0.1.4
Using unicorn 5.4.1
Using webmock 3.4.2
Using webpush 0.3.6
[32mBundle complete! 113 Gemfile dependencies, 210 gems now installed.[0m
[32mBundled gems are installed into `./bundle`[0m
Cleaning up old test tmp data in tmp/test_data
Starting background redis
109:C 22 Mar 2019 19:06:17.721 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
109:C 22 Mar 2019 19:06:17.721 # Redis version=5.0.4, bits=64, commit=00000000, modified=0, pid=109, just started
109:C 22 Mar 2019 19:06:17.721 # Configuration loaded
                _._
           _.-``__ ''-._
      _.-``    `.  `_.  ''-._           Redis 5.0.4 (00000000/0) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._
 (    '      ,       .-`  | `,    )     Running in standalone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379
 |    `-._   `._    /     _.-'    |     PID: 109
  `-._    `-._  `-./  _.-'    _.-'
 |`-._`-._    `-.__.-'    _.-'_.-'|
 |    `-._`-._        _.-'_.-'    |           http://redis.io
  `-._    `-._`-.__.-'_.-'    _.-'
 |`-._`-._    `-.__.-'    _.-'_.-'|
 |    `-._`-._        _.-'_.-'    |
  `-._    `-._`-.__.-'_.-'    _.-'
      `-._    `-.__.-'    _.-'
          `-._        _.-'
              `-.__.-'

109:M 22 Mar 2019 19:06:17.722 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
109:M 22 Mar 2019 19:06:17.722 # Server initialized
109:M 22 Mar 2019 19:06:17.722 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
109:M 22 Mar 2019 19:06:17.722 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
109:M 22 Mar 2019 19:06:17.722 * Ready to accept connections

WARNING: enabling "trust" authentication for local connections
You can change this by editing pg_hba.conf or using the option -A, or
--auth-local and --auth-host, the next time you run initdb.
Starting postgres
2019-03-22 19:06:19.276 UTC [129] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2019-03-22 19:06:19.276 UTC [129] LOG:  could not bind IPv6 address "::1": Cannot assign requested address
2019-03-22 19:06:19.276 UTC [129] HINT:  Is another postmaster already running on port 5432? If not, wait a few seconds and retry.
2019-03-22 19:06:19.276 UTC [129] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2019-03-22 19:06:19.288 UTC [131] LOG:  database system was shut down at 2019-03-22 19:06:18 UTC
2019-03-22 19:06:19.291 UTC [129] LOG:  database system is ready to accept connections
2019-03-22 19:06:21.944 UTC [144] FATAL:  database "discourse_test" does not exist
No connection to db, unable to retrieve site settings! (normal when running db:create)
2019-03-22 19:06:21.953 UTC [151] FATAL:  database "discourse_test" does not exist
No connection to db, unable to retrieve site settings! (normal when running db:create)
2019-03-22 19:06:21.955 UTC [152] FATAL:  database "discourse_test" does not exist
No connection to db, unable to retrieve site settings! (normal when running db:create)
2019-03-22 19:06:21.957 UTC [153] FATAL:  database "discourse_test" does not exist
2019-03-22 19:06:22.005 UTC [154] FATAL:  database "discourse_test" does not exist
No connection to db, unable to retrieve site settings! (normal when running db:create)
2019-03-22 19:06:22.007 UTC [155] FATAL:  database "discourse_test" does not exist
No connection to db, unable to retrieve site settings! (normal when running db:create)
2019-03-22 19:06:22.008 UTC [156] FATAL:  database "discourse_test" does not exist
No connection to db, unable to retrieve site settings! (normal when running db:create)
2019-03-22 19:06:23.068 UTC [158] FATAL:  database "discourse_test" does not exist
No connection to db, unable to retrieve site settings! (normal when running db:create)
Created database 'discourse_test'
2019-03-22 19:06:24.986 UTC [168] FATAL:  database "discourse_test_multisite" does not exist
No connection to db, unable to retrieve site settings! (normal when running db:create)
2019-03-22 19:06:24.994 UTC [175] FATAL:  database "discourse_test_multisite" does not exist
No connection to db, unable to retrieve site settings! (normal when running db:create)
2019-03-22 19:06:24.996 UTC [176] FATAL:  database "discourse_test_multisite" does not exist
No connection to db, unable to retrieve site settings! (normal when running db:create)
2019-03-22 19:06:24.997 UTC [177] FATAL:  database "discourse_test_multisite" does not exist
2019-03-22 19:06:25.004 UTC [178] FATAL:  database "discourse_test_multisite" does not exist
No connection to db, unable to retrieve site settings! (normal when running db:create)
2019-03-22 19:06:25.006 UTC [179] FATAL:  database "discourse_test_multisite" does not exist
No connection to db, unable to retrieve site settings! (normal when running db:create)
2019-03-22 19:06:25.007 UTC [180] FATAL:  database "discourse_test_multisite" does not exist
No connection to db, unable to retrieve site settings! (normal when running db:create)
2019-03-22 19:06:25.391 UTC [182] FATAL:  database "discourse_test_multisite" does not exist
No connection to db, unable to retrieve site settings! (normal when running db:create)
Created database 'discourse_test_multisite'
== 20000225050318 AddSchemaMigrationDetails: migrating ========================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:schema_migration_details, {:id=>:integer})
   -> 0.0017s
-- add_index(:schema_migration_details, [:version])
   -> 0.0013s
-- execute("INSERT INTO schema_migration_details(version, created_at)\n             SELECT version, current_timestamp\n             FROM schema_migrations\n             ORDER BY version\n            ")
   -> 0.0002s
== 20000225050318 AddSchemaMigrationDetails: migrated (0.0042s) ===============

== 20120311163914 CreateForumThreads: migrating ===============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:forum_threads, {:id=>:integer})
   -> 0.0017s
== 20120311163914 CreateForumThreads: migrated (0.0027s) ======================

== 20120311164326 CreatePosts: migrating ======================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:posts, {:id=>:integer})
   -> 0.0014s
-- add_index(:posts, [:forum_thread_id, :created_at])
   -> 0.0011s
== 20120311164326 CreatePosts: migrated (0.0034s) =============================

== 20120311170118 CreateUsers: migrating ======================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:users, {:id=>:integer})
   -> 0.0013s
== 20120311170118 CreateUsers: migrated (0.0021s) =============================

== 20120311201341 CreateForums: migrating =====================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:forums, {:id=>:integer})
   -> 0.0010s
== 20120311201341 CreateForums: migrated (0.0018s) ============================

== 20120311210245 CreateSites: migrating ======================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:sites, {:id=>:integer})
   -> 0.0010s
== 20120311210245 CreateSites: migrated (0.0018s) =============================

== 20120416201606 AddReplyToToPosts: migrating ================================
-- add_column(:posts, :reply_to_post_number, :integer, {:null=>true})
   -> 0.0003s
-- add_index(:posts, :reply_to_post_number)
   -> 0.0011s
== 20120416201606 AddReplyToToPosts: migrated (0.0022s) =======================

== 20120420183447 AddViewsToForumThreads: migrating ===========================
-- add_column(:forum_threads, :views, :integer, {:default=>0, :null=>false})
   -> 0.0018s
== 20120420183447 AddViewsToForumThreads: migrated (0.0026s) ==================

== 20120423140906 AddPostsCountToForumThreads: migrating ======================
-- add_column(:forum_threads, :posts_count, :integer, {:default=>0, :null=>false})
   -> 0.0014s
-- execute("UPDATE forum_threads SET posts_count = (SELECT count(*) FROM posts WHERE posts.forum_thread_id = forum_threads.id)")
   -> 0.0005s
== 20120423140906 AddPostsCountToForumThreads: migrated (0.0027s) =============

== 20120423142820 FixPostIndices: migrating ===================================
-- index_name(:posts, {:column=>[:forum_thread_id, :created_at]})
   -> 0.0000s
-- index_name_exists?(:posts, "index_posts_on_forum_thread_id_and_created_at")
   -> 0.0007s
-- remove_index(:posts, {:column=>[:forum_thread_id, :created_at], :name=>"index_posts_on_forum_thread_id_and_created_at"})
   -> 0.0020s
-- add_index(:posts, [:forum_thread_id, :post_number])
   -> 0.0011s
== 20120423142820 FixPostIndices: migrated (0.0047s) ==========================

== 20120423151548 RemoveLastPostId: migrating =================================
-- remove_column(:forum_threads, :last_post_id)
   -> 0.0003s
== 20120423151548 RemoveLastPostId: migrated (0.0013s) ========================

== 20120425145456 AddDisplayUsernameToUsers: migrating ========================
-- add_column(:users, :display_username, :string, {})
   -> 0.0003s
-- execute("UPDATE users SET display_username = username")
   -> 0.0002s
-- execute("UPDATE users SET username = REPLACE(username, ' ', '')")
   -> 0.0002s
-- add_index(:users, :username, {:unique=>true})
   -> 0.0012s
== 20120425145456 AddDisplayUsernameToUsers: migrated (0.0027s) ===============

== 20120427150624 AddUserIdIndexToPosts: migrating ============================
-- add_index(:posts, :user_id)
   -> 0.0010s
== 20120427150624 AddUserIdIndexToPosts: migrated (0.0017s) ===================

== 20120427151452 CookedMigration: migrating ==================================
-- rename_column(:posts, :content, :raw)
   -> 0.0016s
-- rename_column(:posts, :formatted_content, :cooked)
   -> 0.0013s
== 20120427151452 CookedMigration: migrated (0.0037s) =========================

== 20120427154330 CreateVestalVersions: migrating =============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:versions, {:id=>:integer})
   -> 0.0015s
-- change_table(:versions, {})
   -> 0.0061s
== 20120427154330 CreateVestalVersions: migrated (0.0086s) ====================

== 20120427172031 AddVersionToPosts: migrating ================================
-- add_column(:posts, :cached_version, :integer, {:null=>false, :default=>1})
   -> 0.0017s
== 20120427172031 AddVersionToPosts: migrated (0.0024s) =======================

== 20120502183240 AddCreatedByToForumThreads: migrating =======================
-- add_column(:forum_threads, :user_id, :integer, {})
   -> 0.0002s
-- execute("update forum_threads t\n    set user_id = (select user_id from posts where forum_thread_id = t.Id order by post_number asc limit 1)")
   -> 0.0004s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:forum_threads)
   -> 0.0000s
-- execute("ALTER TABLE \"forum_threads\" ALTER COLUMN \"user_id\" TYPE integer")
   -> 0.0002s
-- change_column_null(:forum_threads, :user_id, false, nil)
   -> 0.0001s
== 20120502183240 AddCreatedByToForumThreads: migrated (0.0018s) ==============

== 20120502192121 AddLastPostUserIdToForumThreads: migrating ==================
-- add_column(:forum_threads, :last_post_user_id, :integer, {})
   -> 0.0002s
-- execute("update forum_threads t\n    set last_post_user_id = (select user_id from posts where forum_thread_id = t.Id order by post_number desc limit 1)")
   -> 0.0002s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:forum_threads)
   -> 0.0000s
-- execute("ALTER TABLE \"forum_threads\" ALTER COLUMN \"last_post_user_id\" TYPE integer")
   -> 0.0001s
-- change_column_null(:forum_threads, :last_post_user_id, false, nil)
   -> 0.0001s
== 20120502192121 AddLastPostUserIdToForumThreads: migrated (0.0017s) =========

== 20120503205521 AddSiteIdToUsers: migrating =================================
-- add_column(:users, :site_id, :integer, {})
   -> 0.0002s
-- add_column(:users, :bio, :text, {})
   -> 0.0002s
-- add_index(:users, :site_id)
   -> 0.0010s
-- execute("UPDATE users SET site_id = 1")
   -> 0.0002s
== 20120503205521 AddSiteIdToUsers: migrated (0.0024s) ========================

== 20120507144132 CreateExpressions: migrating ================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:expressions, {:id=>false, :force=>true})
   -> 0.0006s
-- add_index(:expressions, [:parent_id, :parent_type, :expression_type_id, :user_id], {:unique=>true, :name=>"expressions_pk"})
   -> 0.0012s
== 20120507144132 CreateExpressions: migrated (0.0028s) =======================

== 20120507144222 CreateExpressionTypes: migrating ============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:expression_types, {:id=>:integer})
   -> 0.0011s
-- add_index(:expression_types, [:site_id, :name], {:unique=>true})
   -> 0.0010s
== 20120507144222 CreateExpressionTypes: migrated (0.0030s) ===================

== 20120514144549 AddReplyCountToPosts: migrating =============================
-- add_column(:posts, :reply_count, :integer, {:null=>false, :default=>0})
   -> 0.0016s
-- execute("UPDATE posts\n             SET reply_count = (SELECT count(*) FROM posts AS p2 WHERE p2.reply_to_post_number = posts.post_number)")
   -> 0.0003s
== 20120514144549 AddReplyCountToPosts: migrated (0.0027s) ====================

== 20120514173920 AddFlagToExpressionTypes: migrating =========================
-- add_column(:expression_types, :flag, :boolean, {:default=>false})
   -> 0.0012s
== 20120514173920 AddFlagToExpressionTypes: migrated (0.0020s) ================

== 20120514204934 AddDescriptionToExpressionTypes: migrating ==================
-- add_column(:expression_types, :description, :text, {:null=>true})
   -> 0.0006s
== 20120514204934 AddDescriptionToExpressionTypes: migrated (0.0014s) =========

== 20120517200130 AddQuotelessToPost: migrating ===============================
-- add_column(:posts, :quoteless, :boolean, {:default=>false})
   -> 0.0018s
== 20120517200130 AddQuotelessToPost: migrated (0.0027s) ======================

== 20120518200115 CreateReadPosts: migrating ==================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:read_posts, {:id=>false})
   -> 0.0005s
-- add_index(:read_posts, [:forum_thread_id, :user_id, :page], {:unique=>true})
   -> 0.0011s
== 20120518200115 CreateReadPosts: migrated (0.0025s) =========================

== 20120519182212 CreateLastReadPosts: migrating ==============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:last_read_posts, {:id=>:integer})
   -> 0.0010s
-- add_index(:last_read_posts, [:user_id, :forum_thread_id], {:unique=>true})
   -> 0.0012s
== 20120519182212 CreateLastReadPosts: migrated (0.0032s) =====================

== 20120523180723 CreateViews: migrating ======================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:views, {:id=>false})
   -> 0.0004s
-- add_index(:views, [:parent_id, :parent_type])
   -> 0.0010s
-- add_index(:views, [:parent_id, :parent_type, :ip, :viewed_at], {:unique=>true, :name=>"unique_views"})
   -> 0.0010s
== 20120523180723 CreateViews: migrated (0.0033s) =============================

== 20120523184307 AddRepliesToForumThreads: migrating =========================
-- add_column(:forum_threads, :reply_count, :integer, {:default=>0, :null=>false})
   -> 0.0020s
-- execute("UPDATE forum_threads SET reply_count = (SELECT COUNT(*) FROM posts WHERE posts.reply_to_post_number IS NOT NULL AND posts.forum_thread_id = forum_threads.id)")
   -> 0.0004s
== 20120523184307 AddRepliesToForumThreads: migrated (0.0034s) ================

== 20120523201329 AddFeaturedToForumThreads: migrating ========================
-- add_column(:forum_threads, :featured_user1_id, :integer, {:null=>true})
   -> 0.0003s
-- add_column(:forum_threads, :featured_user2_id, :integer, {:null=>true})
   -> 0.0002s
-- add_column(:forum_threads, :featured_user3_id, :integer, {:null=>true})
   -> 0.0002s
== 20120523201329 AddFeaturedToForumThreads: migrated (0.0015s) ===============

== 20120525194845 AddAvgTimeToForumThreads: migrating =========================
-- add_column(:forum_threads, :avg_time, :integer, {})
   -> 0.0002s
-- execute("update forum_threads SET avg_time = abs(random() * 1200)")
   -> 0.0003s
== 20120525194845 AddAvgTimeToForumThreads: migrated (0.0015s) ================

== 20120529175956 CreateUploads: migrating ====================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:uploads, {:id=>:integer})
   -> 0.0015s
-- add_index(:uploads, :forum_thread_id)
   -> 0.0011s
-- add_index(:uploads, :user_id)
   -> 0.0012s
== 20120529175956 CreateUploads: migrated (0.0046s) ===========================

== 20120529202707 CreateStars: migrating ======================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:stars, {:id=>false})
   -> 0.0005s
-- add_index(:stars, [:parent_id, :parent_type, :user_id])
   -> 0.0013s
== 20120529202707 CreateStars: migrated (0.0027s) =============================

== 20120530150726 CreateForumThreadUser: migrating ============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:forum_thread_users, {:id=>false})
   -> 0.0009s
-- execute("DELETE FROM read_posts")
   -> 0.0003s
-- add_index(:forum_thread_users, [:forum_thread_id, :user_id], {:unique=>true})
   -> 0.0011s
-- drop_table(:stars)
   -> 0.0002s
-- drop_table(:last_read_posts)
   -> 0.0004s
== 20120530150726 CreateForumThreadUser: migrated (0.0038s) ===================

== 20120530160745 MigratePosted: migrating ====================================
== 20120530160745 MigratePosted: migrated (0.0008s) ===========================

== 20120530200724 AddIndexToForumThreads: migrating ===========================
-- add_index(:forum_threads, :last_posted_at)
   -> 0.0010s
== 20120530200724 AddIndexToForumThreads: migrated (0.0017s) ==================

== 20120530212912 CreateForumThreadLinks: migrating ===========================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:forum_thread_links, {:id=>:integer})
   -> 0.0015s
-- add_index(:forum_thread_links, :forum_thread_id)
   -> 0.0011s
== 20120530212912 CreateForumThreadLinks: migrated (0.0035s) ==================

== 20120614190726 AddTagsToForumThreads: migrating ============================
-- add_column(:forum_threads, :tag, :string, {:null=>true, :limit=>25})
   -> 0.0002s
== 20120614190726 AddTagsToForumThreads: migrated (0.0017s) ===================

== 20120614202024 AddQuoteCountToPosts: migrating =============================
-- add_column(:posts, :quote_count, :integer, {:default=>0, :null=>false})
   -> 0.0017s
-- execute("UPDATE posts SET quote_count = 1 WHERE quoteless = 'f'")
   -> 0.0002s
-- remove_column(:posts, :quoteless)
   -> 0.0002s
== 20120614202024 AddQuoteCountToPosts: migrated (0.0028s) ====================

== 20120615180517 CreateBookmarks: migrating ==================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:bookmarks, {:id=>:integer})
   -> 0.0011s
-- add_index(:bookmarks, [:user_id, :post_id], {:unique=>true})
   -> 0.0010s
== 20120615180517 CreateBookmarks: migrated (0.0030s) =========================

== 20120618152946 AddReplyBelowToPosts: migrating =============================
-- add_column(:posts, :reply_below_post_number, :integer, {:null=>true})
   -> 0.0002s
== 20120618152946 AddReplyBelowToPosts: migrated (0.0009s) ====================

== 20120618212349 CreatePostTimings: migrating ================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:post_timings, {:id=>:integer})
   -> 0.0010s
-- add_index(:post_timings, [:thread_id, :post_number])
   -> 0.0010s
-- add_index(:post_timings, [:thread_id, :post_number, :user_id], {:unique=>true})
   -> 0.0011s
== 20120618212349 CreatePostTimings: migrated (0.0041s) =======================

== 20120618214856 CreateMessageBus: migrating =================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:message_bus, {:id=>:integer})
   -> 0.0019s
-- add_index(:message_bus, [:created_at])
   -> 0.0012s
== 20120618214856 CreateMessageBus: migrated (0.0041s) ========================

== 20120619150807 FixPostTimings: migrating ===================================
-- index_name(:post_timings, {:column=>[:thread_id, :post_number]})
   -> 0.0000s
-- index_name_exists?(:post_timings, "index_post_timings_on_thread_id_and_post_number")
   -> 0.0005s
-- remove_index(:post_timings, {:column=>[:thread_id, :post_number], :name=>"index_post_timings_on_thread_id_and_post_number"})
   -> 0.0013s
-- index_name(:post_timings, {:column=>[:thread_id, :post_number, :user_id]})
   -> 0.0000s
-- index_name_exists?(:post_timings, "index_post_timings_on_thread_id_and_post_number_and_user_id")
   -> 0.0004s
-- remove_index(:post_timings, {:column=>[:thread_id, :post_number, :user_id], :name=>"index_post_timings_on_thread_id_and_post_number_and_user_id"})
   -> 0.0010s
-- rename_column(:post_timings, :thread_id, :forum_thread_id)
   -> 0.0007s
-- add_index(:post_timings, [:forum_thread_id, :post_number], {:name=>"post_timings_summary"})
   -> 0.0010s
-- add_index(:post_timings, [:forum_thread_id, :post_number, :user_id], {:unique=>true, :name=>"post_timings_unique"})
   -> 0.0010s
== 20120619150807 FixPostTimings: migrated (0.0070s) ==========================

== 20120619153349 DropReadPosts: migrating ====================================
-- drop_table(:read_posts)
   -> 0.0003s
== 20120619153349 DropReadPosts: migrated (0.0010s) ===========================

== 20120619172714 AddPostNumberToBookmarks: migrating =========================
-- drop_table(:bookmarks)
   -> 0.0004s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:bookmarks, {:id=>:integer})
   -> 0.0010s
-- add_index(:bookmarks, [:user_id, :forum_thread_id, :post_number], {:unique=>true})
   -> 0.0011s
== 20120619172714 AddPostNumberToBookmarks: migrated (0.0035s) ================

== 20120621155351 AddSeenPostCountToForumThreadUsers: migrating ===============
-- remove_column(:post_timings, :id)
   -> 0.0004s
-- remove_column(:forum_thread_users, :created_at)
   -> 0.0002s
-- remove_column(:forum_thread_users, :updated_at)
   -> 0.0001s
-- add_column(:forum_thread_users, :seen_post_count, :integer, {})
   -> 0.0002s
== 20120621155351 AddSeenPostCountToForumThreadUsers: migrated (0.0017s) ======

== 20120621190310 AddDeletedAtToForumThreads: migrating =======================
-- add_column(:forum_threads, :deleted_at, :datetime, {})
   -> 0.0002s
== 20120621190310 AddDeletedAtToForumThreads: migrated (0.0009s) ==============

== 20120622200242 CreateNotifications: migrating ==============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:notifications, {:id=>:integer})
   -> 0.0014s
-- add_index(:notifications, [:user_id, :created_at])
   -> 0.0010s
== 20120622200242 CreateNotifications: migrated (0.0035s) =====================

== 20120625145714 AddSeenNotificationIdToUsers: migrating =====================
-- execute("TRUNCATE TABLE notifications")
   -> 0.0006s
-- add_column(:users, :seen_notificaiton_id, :integer, {:default=>0, :null=>false})
   -> 0.0015s
-- add_column(:notifications, :forum_thread_id, :integer, {:null=>true})
   -> 0.0002s
-- add_column(:notifications, :post_number, :integer, {:null=>true})
   -> 0.0002s
== 20120625145714 AddSeenNotificationIdToUsers: migrated (0.0033s) ============

== 20120625162318 AddDeletedAtToPosts: migrating ==============================
-- add_column(:posts, :deleted_at, :datetime, {})
   -> 0.0003s
== 20120625162318 AddDeletedAtToPosts: migrated (0.0010s) =====================

== 20120625174544 AddHighestPostNumberToForumThreads: migrating ===============
-- add_column(:forum_threads, :highest_post_number, :integer, {:default=>0, :null=>false})
   -> 0.0020s
-- execute("UPDATE forum_threads SET highest_post_number = (SELECT MAX(post_number) FROM posts WHERE posts.forum_thread_id = forum_threads.id)")
   -> 0.0005s
== 20120625174544 AddHighestPostNumberToForumThreads: migrated (0.0034s) ======

== 20120625195326 AddImageUrlToForumThreads: migrating ========================
-- add_column(:forum_threads, :image_url, :string, {})
   -> 0.0002s
== 20120625195326 AddImageUrlToForumThreads: migrated (0.0010s) ===============

== 20120629143908 RenameExpressionTypeId: migrating ===========================
-- add_column(:expression_types, :expression_index, :integer, {})
   -> 0.0002s
-- execute("UPDATE expression_types SET expression_index = id")
   -> 0.0002s
-- remove_column(:expression_types, :id)
   -> 0.0004s
-- add_index(:expression_types, [:site_id, :expression_index], {:unique=>true})
   -> 0.0010s
== 20120629143908 RenameExpressionTypeId: migrated (0.0027s) ==================

== 20120629150253 DenormalizeExpressions: migrating ===========================
-- add_column(:posts, :expression1_count, :integer, {:null=>false, :default=>0})
   -> 0.0017s
-- add_column(:posts, :expression2_count, :integer, {:null=>false, :default=>0})
   -> 0.0018s
-- add_column(:posts, :expression3_count, :integer, {:null=>false, :default=>0})
   -> 0.0019s
-- add_column(:posts, :expression4_count, :integer, {:null=>false, :default=>0})
   -> 0.0016s
-- add_column(:posts, :expression5_count, :integer, {:null=>false, :default=>0})
   -> 0.0017s
-- add_column(:forum_threads, :expression1_count, :integer, {:null=>false, :default=>0})
   -> 0.0017s
-- add_column(:forum_threads, :expression2_count, :integer, {:null=>false, :default=>0})
   -> 0.0016s
-- add_column(:forum_threads, :expression3_count, :integer, {:null=>false, :default=>0})
   -> 0.0015s
-- add_column(:forum_threads, :expression4_count, :integer, {:null=>false, :default=>0})
   -> 0.0015s
-- add_column(:forum_threads, :expression5_count, :integer, {:null=>false, :default=>0})
   -> 0.0016s
-- execute("update posts set expression1_count = (select count(*) from expressions where parent_id = posts.id and expression_type_id = 1)")
   -> 0.0004s
-- execute("update forum_threads set expression1_count = (select sum(expression1_count) from posts where forum_thread_id = forum_threads.id)")
   -> 0.0003s
-- execute("update posts set expression2_count = (select count(*) from expressions where parent_id = posts.id and expression_type_id = 2)")
   -> 0.0002s
-- execute("update forum_threads set expression2_count = (select sum(expression2_count) from posts where forum_thread_id = forum_threads.id)")
   -> 0.0002s
-- execute("update posts set expression3_count = (select count(*) from expressions where parent_id = posts.id and expression_type_id = 3)")
   -> 0.0002s
-- execute("update forum_threads set expression3_count = (select sum(expression3_count) from posts where forum_thread_id = forum_threads.id)")
   -> 0.0002s
-- execute("update posts set expression4_count = (select count(*) from expressions where parent_id = posts.id and expression_type_id = 4)")
   -> 0.0002s
-- execute("update forum_threads set expression4_count = (select sum(expression4_count) from posts where forum_thread_id = forum_threads.id)")
   -> 0.0002s
-- execute("update posts set expression5_count = (select count(*) from expressions where parent_id = posts.id and expression_type_id = 5)")
   -> 0.0002s
-- execute("update forum_threads set expression5_count = (select sum(expression5_count) from posts where forum_thread_id = forum_threads.id)")
   -> 0.0002s
== 20120629150253 DenormalizeExpressions: migrated (0.0202s) ==================

== 20120629151243 MakeExpressionsLessGeneric: migrating =======================
-- rename_column(:expressions, :parent_id, :post_id)
   -> 0.0012s
-- rename_column(:expressions, :expression_type_id, :expression_index)
   -> 0.0010s
-- remove_column(:expressions, :parent_type)
   -> 0.0002s
-- add_index(:expressions, [:post_id, :expression_index, :user_id], {:unique=>true, :name=>"unique_by_user"})
   -> 0.0010s
== 20120629151243 MakeExpressionsLessGeneric: migrated (0.0042s) ==============

== 20120629182637 CreateIncomingLinks: migrating ==============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:incoming_links, {:id=>:integer})
   -> 0.0015s
-- add_index(:incoming_links, [:site_id, :forum_thread_id, :post_number], {:name=>"incoming_index"})
   -> 0.0011s
== 20120629182637 CreateIncomingLinks: migrated (0.0035s) =====================

== 20120702211427 CreateReplies: migrating ====================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:post_replies, {:id=>false})
   -> 0.0005s
-- add_index(:post_replies, [:post_id, :reply_id], {:unique=>true})
   -> 0.0011s
-- execute("INSERT INTO post_replies (post_id, reply_id, created_at, updated_at)\n             SELECT p2.id, p.id, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP\n             FROM posts AS p\n             INNER JOIN posts AS p2 on p2.post_number = p.reply_to_post_number AND p2.forum_thread_id = P.forum_thread_id\n             WHERE p.forum_thread_id IS NOT NULL")
   -> 0.0004s
== 20120702211427 CreateReplies: migrated (0.0029s) ===========================

== 20120703184734 AddReflectionToForumThreadLinks: migrating ==================
-- add_column(:forum_thread_links, :reflection, :boolean, {:default=>false})
   -> 0.0017s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:forum_thread_links)
   -> 0.0000s
-- execute("ALTER TABLE \"forum_thread_links\" ALTER COLUMN \"post_id\" TYPE integer")
   -> 0.0002s
-- change_column_null(:forum_thread_links, :post_id, true, nil)
   -> 0.0001s
== 20120703184734 AddReflectionToForumThreadLinks: migrated (0.0030s) =========

== 20120703201312 AddIncomingLinkCountToPosts: migrating ======================
-- add_column(:posts, :incoming_link_count, :integer, {:default=>0, :null=>false})
   -> 0.0019s
== 20120703201312 AddIncomingLinkCountToPosts: migrated (0.0026s) =============

== 20120703203623 AddIncomingLinkCountToForumThreads: migrating ===============
-- add_column(:forum_threads, :incoming_link_count, :integer, {:default=>0, :null=>false})
   -> 0.0017s
== 20120703203623 AddIncomingLinkCountToForumThreads: migrated (0.0024s) ======

== 20120703210004 AddBookmarkCountToPosts: migrating ==========================
-- add_column(:posts, :bookmark_count, :integer, {:default=>0, :null=>false})
   -> 0.0019s
-- add_column(:forum_threads, :bookmark_count, :integer, {:default=>0, :null=>false})
   -> 0.0017s
-- add_column(:forum_threads, :star_count, :integer, {:default=>0, :null=>false})
   -> 0.0017s
-- execute("UPDATE posts SET bookmark_count = (SELECT COUNT(*)\n                                                FROM bookmarks\n                                                WHERE post_number = posts.post_number AND forum_thread_id = posts.forum_thread_id)")
   -> 0.0004s
-- execute("UPDATE forum_threads SET bookmark_count = (SELECT COUNT(*)\n                                                        FROM bookmarks\n                                                        WHERE forum_thread_id = forum_threads.id)")
   -> 0.0002s
-- execute("UPDATE forum_threads SET star_count = (SELECT COUNT(*)\n                                                        FROM forum_thread_users\n                                                        WHERE forum_thread_id = forum_threads.id AND starred = true)")
   -> 0.0003s
== 20120703210004 AddBookmarkCountToPosts: migrated (0.0072s) =================

== 20120704160659 AddAvgTimeToPosts: migrating ================================
-- add_column(:posts, :avg_time, :integer, {:null=>true})
   -> 0.0003s
-- add_column(:posts, :score, :float, {:null=>true})
   -> 0.0002s
== 20120704160659 AddAvgTimeToPosts: migrated (0.0013s) =======================

== 20120704201743 AddViewCountToPosts: migrating ==============================
-- add_column(:posts, :views, :integer, {:default=>0, :null=>false})
   -> 0.0018s
-- execute("UPDATE posts SET views =\n              (SELECT COUNT(*) FROM post_timings WHERE forum_thread_id = posts.forum_thread_id AND post_number = posts.post_number)")
   -> 0.0003s
== 20120704201743 AddViewCountToPosts: migrated (0.0030s) =====================

== 20120705181724 AddUserToVersions: migrating ================================
-- execute("UPDATE versions SET user_type = 'User', user_id = posts.user_id\n             FROM posts\n             WHERE posts.id = versions.versioned_id")
   -> 0.0006s
== 20120705181724 AddUserToVersions: migrated (0.0012s) =======================

== 20120708210305 AddLastPostedAtToUsers: migrating ===========================
-- add_column(:users, :last_posted_at, :datetime, {:null=>true})
   -> 0.0003s
-- add_index(:users, :last_posted_at)
   -> 0.0011s
-- execute("UPDATE users\n             SET last_posted_at = (SELECT MAX(posts.created_at)\n                                   FROM posts\n                                   WHERE posts.user_id = users.id)")
   -> 0.0005s
== 20120708210305 AddLastPostedAtToUsers: migrated (0.0028s) ==================

== 20120712150500 CreateCategories: migrating =================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:categories, {:id=>:integer})
   -> 0.0015s
-- add_index(:categories, :name, {:unique=>true})
   -> 0.0010s
-- add_index(:categories, :forum_thread_count)
   -> 0.0009s
-- execute("INSERT INTO categories (name, forum_thread_count, created_at, updated_At)\n             SELECT tag, count(*), CURRENT_TIMESTAMP, CURRENT_TIMESTAMP from forum_threads\n             WHERE tag IS NOT NULL AND tag <> 'null'\n             GROUP BY tag")
   -> 0.0003s
== 20120712150500 CreateCategories: migrated (0.0046s) ========================

== 20120712151934 AddCategoryIdToForumThreads: migrating ======================
-- add_column(:forum_threads, :category_id, :integer, {})
   -> 0.0002s
-- execute("UPDATE forum_threads SET category_id =\n             (SELECT id\n              FROM categories\n              WHERE name = forum_threads.tag)")
   -> 0.0005s
-- remove_column(:forum_threads, :tag)
   -> 0.0002s
== 20120712151934 AddCategoryIdToForumThreads: migrated (0.0017s) =============

== 20120713201324 CreateCategoryFeaturedThreads: migrating ====================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:category_featured_threads, {:id=>false})
   -> 0.0004s
-- add_index(:category_featured_threads, [:category_id, :forum_thread_id], {:unique=>true, :name=>"cat_featured_threads"})
   -> 0.0011s
== 20120713201324 CreateCategoryFeaturedThreads: migrated (0.0024s) ===========

== 20120716020835 CreateSiteSettings: migrating ===============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:site_settings, {:id=>:integer})
   -> 0.0013s
== 20120716020835 CreateSiteSettings: migrated (0.0021s) ======================

== 20120716173544 AddStatsToCategories: migrating =============================
-- add_column(:categories, :posts_year, :integer, {})
   -> 0.0002s
-- add_column(:categories, :posts_month, :integer, {})
   -> 0.0002s
-- add_column(:categories, :posts_week, :integer, {})
   -> 0.0002s
== 20120716173544 AddStatsToCategories: migrated (0.0024s) ====================

== 20120718044955 CreateUserOpenIds: migrating ================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:user_open_ids, {:id=>:integer})
   -> 0.0014s
-- add_index(:user_open_ids, [:url])
   -> 0.0012s
== 20120718044955 CreateUserOpenIds: migrated (0.0035s) =======================

== 20120719004636 AddEmailHashedPasswordNameSaltToUsers: migrating ============
-- add_column(:users, :email, :string, {:limit=>256})
   -> 0.0002s
-- execute("update users set email= md5(random()::text) || 'domain.com'")
   -> 0.0003s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:users)
   -> 0.0000s
-- execute("ALTER TABLE \"users\" ALTER COLUMN \"email\" TYPE character varying(256)")
   -> 0.0001s
-- change_column_null(:users, :email, false, nil)
   -> 0.0001s
-- add_index(:users, [:email], {:unique=>true})
   -> 0.0011s
-- rename_column(:users, :display_username, :name)
   -> 0.0015s
-- add_column(:users, :password_hash, :string, {:limit=>64})
   -> 0.0002s
-- add_column(:users, :salt, :string, {:limit=>32})
   -> 0.0002s
-- add_column(:users, :active, :boolean, {})
   -> 0.0001s
-- add_column(:users, :activation_key, :string, {:limit=>32})
   -> 0.0001s
-- add_column(:user_open_ids, :active, :boolean, {:null=>false})
   -> 0.0002s
== 20120719004636 AddEmailHashedPasswordNameSaltToUsers: migrated (0.0052s) ===

== 20120720013733 AddUsernameLowerToUsers: migrating ==========================
-- add_column(:users, :username_lower, :string, {:limit=>20})
   -> 0.0002s
-- execute("update users set username_lower = lower(username)")
   -> 0.0003s
-- add_index(:users, [:username_lower], {:unique=>true})
   -> 0.0012s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:users)
   -> 0.0000s
-- execute("ALTER TABLE \"users\" ALTER COLUMN \"username_lower\" TYPE character varying(20)")
   -> 0.0005s
-- change_column_null(:users, :username_lower, false, nil)
   -> 0.0001s
== 20120720013733 AddUsernameLowerToUsers: migrated (0.0033s) =================

== 20120720044246 AddAuthTokenToUsers: migrating ==============================
-- add_column(:users, :auth_token, :string, {:limit=>32})
   -> 0.0003s
-- add_index(:users, [:auth_token])
   -> 0.0011s
== 20120720044246 AddAuthTokenToUsers: migrated (0.0023s) =====================

== 20120720162422 AddForumIdToCategories: migrating ===========================
-- add_column(:categories, :forum_id, :integer, {})
   -> 0.0003s
-- execute("UPDATE categories SET forum_id = (SELECT MIN(id) FROM forums)")
   -> 0.0004s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:categories)
   -> 0.0000s
-- execute("ALTER TABLE \"categories\" ALTER COLUMN \"forum_id\" TYPE integer")
   -> 0.0002s
-- change_column_null(:categories, :forum_id, false, nil)
   -> 0.0001s
== 20120720162422 AddForumIdToCategories: migrated (0.0019s) ==================

== 20120723051512 AddNotNullsToUserOpenIds: migrating =========================
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:user_open_ids)
   -> 0.0000s
-- execute("ALTER TABLE \"user_open_ids\" ALTER COLUMN \"user_id\" TYPE integer")
   -> 0.0002s
-- change_column_null(:user_open_ids, :user_id, false, nil)
   -> 0.0001s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:user_open_ids)
   -> 0.0000s
-- execute("ALTER TABLE \"user_open_ids\" ALTER COLUMN \"email\" TYPE character varying")
   -> 0.0001s
-- change_column_null(:user_open_ids, :email, false, nil)
   -> 0.0001s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:user_open_ids)
   -> 0.0000s
-- execute("ALTER TABLE \"user_open_ids\" ALTER COLUMN \"url\" TYPE character varying")
   -> 0.0004s
-- change_column_null(:user_open_ids, :url, false, nil)
   -> 0.0001s
== 20120723051512 AddNotNullsToUserOpenIds: migrated (0.0025s) ================

== 20120724234502 AddLastSeenAtToUsers: migrating =============================
-- add_column(:users, :last_seen_at, :datetime, {})
   -> 0.0002s
== 20120724234502 AddLastSeenAtToUsers: migrated (0.0010s) ====================

== 20120724234711 AddWebsiteToUsers: migrating ================================
-- add_column(:users, :website, :string, {})
   -> 0.0002s
== 20120724234711 AddWebsiteToUsers: migrated (0.0010s) =======================

== 20120725183347 AddExcerptToCategories: migrating ===========================
-- add_column(:categories, :excerpt, :string, {:limit=>250})
   -> 0.0002s
== 20120725183347 AddExcerptToCategories: migrated (0.0009s) ==================

== 20120726201830 AddInvisibleToForumThread: migrating ========================
-- add_column(:forum_threads, :invisible, :boolean, {:default=>false, :null=>false})
   -> 0.0020s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:categories)
   -> 0.0000s
-- execute("ALTER TABLE \"categories\" ALTER COLUMN \"excerpt\" TYPE text")
   -> 0.0007s
-- change_column_null(:categories, :excerpt, true, nil)
   -> 0.0001s
== 20120726201830 AddInvisibleToForumThread: migrated (0.0039s) ===============

== 20120726235129 AddUserIdToCategories: migrating ============================
-- add_column(:categories, :user_id, :integer, {})
   -> 0.0003s
-- execute("UPDATE categories SET user_id = 1186")
   -> 0.0001s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:categories)
   -> 0.0000s
-- execute("ALTER TABLE \"categories\" ALTER COLUMN \"user_id\" TYPE integer")
   -> 0.0001s
-- change_column_null(:categories, :user_id, false, nil)
   -> 0.0001s
== 20120726235129 AddUserIdToCategories: migrated (0.0016s) ===================

== 20120727005556 RemoveExcerptFromCategories: migrating ======================
-- remove_column(:categories, :excerpt)
   -> 0.0002s
== 20120727005556 RemoveExcerptFromCategories: migrated (0.0009s) =============

== 20120727150428 RenameInvisible: migrating ==================================
-- add_column(:forum_threads, :visible, :boolean, {:default=>true, :null=>false})
   -> 0.0018s
-- execute("UPDATE forum_threads SET visible = CASE WHEN invisible THEN false ELSE true END")
   -> 0.0002s
-- remove_column(:forum_threads, :invisible)
   -> 0.0002s
== 20120727150428 RenameInvisible: migrated (0.0030s) =========================

== 20120727213543 AddThreadCountsToCategories: migrating ======================
-- add_column(:categories, :threads_year, :integer, {})
   -> 0.0002s
-- add_column(:categories, :threads_month, :integer, {})
   -> 0.0002s
-- add_column(:categories, :threads_week, :integer, {})
   -> 0.0002s
-- remove_column(:categories, :posts_year)
   -> 0.0002s
-- remove_column(:categories, :posts_month)
   -> 0.0002s
-- remove_column(:categories, :posts_week)
   -> 0.0001s
== 20120727213543 AddThreadCountsToCategories: migrated (0.0020s) =============

== 20120802151210 AddIconToExpressionTypes: migrating =========================
-- add_column(:expression_types, :icon, :string, {:limit=>20})
   -> 0.0002s
-- execute("UPDATE expression_types SET icon = 'heart' WHERE expression_index = 1")
   -> 0.0002s
== 20120802151210 AddIconToExpressionTypes: migrated (0.0012s) ================

== 20120803191426 AddAdminFlagToUsers: migrating ==============================
-- add_column(:users, :admin, :boolean, {:default=>false, :null=>false})
   -> 0.0022s
-- add_column(:users, :moderator, :boolean, {:default=>false, :null=>false})
   -> 0.0019s
-- execute("UPDATE users SET admin = TRUE where lower(username) in ('eviltrout', 'codinghorror', 'sam', 'hanzo')")
   -> 0.0003s
== 20120803191426 AddAdminFlagToUsers: migrated (0.0052s) =====================

== 20120806030641 AddNewPasswordNewSaltEmailTokenToUsers: migrating ===========
-- add_column(:users, :new_salt, :string, {:limit=>32})
   -> 0.0003s
-- add_column(:users, :new_password_hash, :string, {:limit=>64})
   -> 0.0002s
-- add_column(:users, :email_token, :string, {:limit=>32})
   -> 0.0002s
-- remove_column(:users, :activation_key)
   -> 0.0002s
== 20120806030641 AddNewPasswordNewSaltEmailTokenToUsers: migrated (0.0018s) ==

== 20120806062617 RemoveNewPasswordStuffFromUser: migrating ===================
-- remove_column(:users, :new_password_hash)
   -> 0.0002s
-- remove_column(:users, :new_salt)
   -> 0.0002s
== 20120806062617 RemoveNewPasswordStuffFromUser: migrated (0.0011s) ==========

== 20120807223020 CreateActions: migrating ====================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:actions, {:id=>:integer})
   -> 0.0013s
-- add_index(:actions, [:user_id, :action_type])
   -> 0.0010s
-- add_index(:actions, [:acting_user_id])
   -> 0.0010s
== 20120807223020 CreateActions: migrated (0.0042s) ===========================

== 20120809020415 RemoveSiteId: migrating =====================================
-- drop_table("sites")
   -> 0.0004s
-- index_name("incoming_links", {:name=>"incoming_index"})
   -> 0.0000s
-- index_name_exists?("incoming_links", "incoming_index")
   -> 0.0006s
-- remove_index("incoming_links", {:name=>"incoming_index"})
   -> 0.0002s
-- add_index("incoming_links", ["forum_thread_id", "post_number"], {:name=>"incoming_index"})
   -> 0.0010s
-- remove_column("incoming_links", "site_id")
   -> 0.0002s
-- index_name("users", {:name=>"index_users_on_site_id"})
   -> 0.0000s
-- index_name_exists?("users", "index_users_on_site_id")
   -> 0.0005s
-- remove_index("users", {:name=>"index_users_on_site_id"})
   -> 0.0002s
-- remove_column("users", "site_id")
   -> 0.0002s
-- index_name("expression_types", {:name=>"index_expression_types_on_site_id_and_expression_index"})
   -> 0.0000s
-- index_name_exists?("expression_types", "index_expression_types_on_site_id_and_expression_index")
   -> 0.0006s
-- remove_index("expression_types", {:name=>"index_expression_types_on_site_id_and_expression_index"})
   -> 0.0002s
-- index_name("expression_types", {:name=>"index_expression_types_on_site_id_and_name"})
   -> 0.0000s
-- index_name_exists?("expression_types", "index_expression_types_on_site_id_and_name")
   -> 0.0005s
-- remove_index("expression_types", {:name=>"index_expression_types_on_site_id_and_name"})
   -> 0.0002s
-- remove_column("expression_types", "site_id")
   -> 0.0002s
-- add_index("expression_types", ["expression_index"], {:unique=>true})
   -> 0.0009s
-- add_index("expression_types", ["name"], {:unique=>true})
   -> 0.0009s
-- drop_table("forums")
   -> 0.0004s
== 20120809020415 RemoveSiteId: migrated (0.0085s) ============================

== 20120809030647 RemoveForumId: migrating ====================================
-- remove_column("forum_threads", "forum_id")
   -> 0.0002s
-- remove_column("categories", "forum_id")
   -> 0.0002s
== 20120809030647 RemoveForumId: migrated (0.0012s) ===========================

== 20120809053414 CorrectIndexingOnPosts: migrating ===========================
-- execute("update posts pp\nset post_number = c.real_number\nfrom\n(\n\tselect p1.id, count(*) real_number from posts p1\n\tjoin posts p2 on p1.forum_thread_id = p2.forum_thread_id\n\twhere p2.id <= p1.id and p1.forum_thread_id = p2.forum_thread_id\n      group by p1.id\n) as c\nwhere pp.id = c.id and pp.post_number <> c.real_number")
   -> 0.0004s
-- index_name("posts", {:column=>["forum_thread_id", "post_number"]})
   -> 0.0000s
-- index_name_exists?("posts", "index_posts_on_forum_thread_id_and_post_number")
   -> 0.0005s
-- remove_index("posts", {:column=>["forum_thread_id", "post_number"], :name=>"index_posts_on_forum_thread_id_and_post_number"})
   -> 0.0014s
-- add_index("posts", ["forum_thread_id", "post_number"], {:unique=>true})
   -> 0.0011s
== 20120809053414 CorrectIndexingOnPosts: migrated (0.0044s) ==================

== 20120809154750 RemoveIndexForNow: migrating ================================
-- index_name("posts", {:column=>["forum_thread_id", "post_number"]})
   -> 0.0000s
-- index_name_exists?("posts", "index_posts_on_forum_thread_id_and_post_number")
   -> 0.0008s
-- remove_index("posts", {:column=>["forum_thread_id", "post_number"], :name=>"index_posts_on_forum_thread_id_and_post_number"})
   -> 0.0017s
-- add_index("posts", ["forum_thread_id", "post_number"], {:unique=>false})
   -> 0.0011s
== 20120809154750 RemoveIndexForNow: migrated (0.0046s) =======================

== 20120809174649 CreatePostActions: migrating ================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:post_actions, {:id=>:integer})
   -> 0.0011s
-- add_index(:post_actions, ["post_id"])
   -> 0.0011s
-- execute("create unique index idx_unique_actions on\n      post_actions(user_id, post_action_type_id, post_id) where deleted_at is null")
   -> 0.0003s
== 20120809174649 CreatePostActions: migrated (0.0033s) =======================

== 20120809175110 CreatePostActionTypes: migrating ============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:post_action_types, {:id=>false})
   -> 0.0011s
== 20120809175110 CreatePostActionTypes: migrated (0.0020s) ===================

== 20120809201855 MigrateBookmarksToPostActions: migrating ====================
-- drop_table("bookmarks")
   -> 0.0005s
== 20120809201855 MigrateBookmarksToPostActions: migrated (0.0013s) ===========

== 20120810064839 RenameActionsToUserActions: migrating =======================
-- rename_table("actions", "user_actions")
   -> 0.0025s
== 20120810064839 RenameActionsToUserActions: migrated (0.0033s) ==============

== 20120812235417 RetireExpressions: migrating ================================
-- execute("insert into post_actions (post_action_type_id, user_id, post_id, created_at, updated_at)\nselect\n\tcase\n\t  when expression_index=1 then 3\n\t  when expression_index=2 then 4\n\t  when expression_index=3 then 2\n\tend\n\n\t, user_id, post_id, created_at, updated_at from expressions")
   -> 0.0003s
-- drop_table("expressions")
   -> 0.0003s
-- drop_table("expression_types")
   -> 0.0004s
== 20120812235417 RetireExpressions: migrated (0.0017s) =======================

== 20120813004347 RenameExpressionColumnsInForumThread: migrating =============
-- rename_column("forum_threads", "expression1_count", "off_topic_count")
   -> 0.0012s
-- rename_column("forum_threads", "expression2_count", "offensive_count")
   -> 0.0010s
-- rename_column("forum_threads", "expression3_count", "like_count")
   -> 0.0009s
-- remove_column("forum_threads", "expression4_count")
   -> 0.0002s
-- remove_column("forum_threads", "expression5_count")
   -> 0.0002s
== 20120813004347 RenameExpressionColumnsInForumThread: migrated (0.0044s) ====

== 20120813042912 RenameExpressionColumnsInPosts: migrating ===================
-- rename_column("posts", "expression1_count", "off_topic_count")
   -> 0.0015s
-- rename_column("posts", "expression2_count", "offensive_count")
   -> 0.0015s
-- rename_column("posts", "expression3_count", "like_count")
   -> 0.0014s
-- remove_column("posts", "expression4_count")
   -> 0.0003s
-- remove_column("posts", "expression5_count")
   -> 0.0003s
== 20120813042912 RenameExpressionColumnsInPosts: migrated (0.0058s) ==========

== 20120813201426 CreateForumThreadLinkClicks: migrating ======================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:forum_thread_link_clicks, {:id=>:integer})
   -> 0.0011s
-- add_column(:forum_thread_links, :clicks, :integer, {:default=>0, :null=>false})
   -> 0.0014s
-- add_index(:forum_thread_link_clicks, :forum_thread_link_id, {:name=>:by_link})
   -> 0.0010s
== 20120813201426 CreateForumThreadLinkClicks: migrated (0.0044s) =============

== 20120815004411 AddUniqueIndexToForumThreadLinks: migrating =================
-- execute("DELETE FROM forum_thread_links USING forum_thread_links ftl2\n              WHERE ftl2.forum_thread_id = forum_thread_links.forum_thread_id\n                              AND ftl2.post_id = forum_thread_links.post_id\n                              AND ftl2.url = forum_thread_links.url\n                              AND ftl2.id < forum_thread_links.id")
   -> 0.0004s
-- add_index(:forum_thread_links, [:forum_thread_id, :post_id, :url], {:unique=>true, :name=>"unique_post_links"})
   -> 0.0010s
== 20120815004411 AddUniqueIndexToForumThreadLinks: migrated (0.0022s) ========

== 20120815180106 AddPostTypeToPosts: migrating ===============================
-- add_column(:posts, :post_type, :integer, {:default=>1, :null=>false})
   -> 0.0018s
== 20120815180106 AddPostTypeToPosts: migrated (0.0026s) ======================

== 20120815204733 AddModeratorPostsCountToForumThreads: migrating =============
-- add_column(:forum_threads, :moderator_posts_count, :integer, {:default=>0, :null=>false})
   -> 0.0019s
-- execute("UPDATE forum_threads\n             SET moderator_posts_count = (SELECT COUNT(*)\n                                          FROM posts WHERE posts.forum_thread_id = forum_threads.id\n                                            AND posts.post_type = 2)")
   -> 0.0004s
== 20120815204733 AddModeratorPostsCountToForumThreads: migrated (0.0030s) ====

== 20120816050526 AddUniqueConstraintToUserActions: migrating =================
-- add_index(:user_actions, ["action_type", "user_id", "target_forum_thread_id", "target_post_id", "acting_user_id"], {:name=>"idx_unique_rows", :unique=>true})
   -> 0.0011s
== 20120816050526 AddUniqueConstraintToUserActions: migrated (0.0019s) ========

== 20120816205537 AddForumThreadStates: migrating =============================
-- add_column(:forum_threads, :closed, :boolean, {:default=>false, :null=>false})
   -> 0.0018s
-- add_column(:forum_threads, :sticky, :boolean, {:default=>false, :null=>false})
   -> 0.0017s
-- add_column(:forum_threads, :archived, :boolean, {:default=>false, :null=>false})
   -> 0.0017s
== 20120816205537 AddForumThreadStates: migrated (0.0061s) ====================

== 20120816205538 AddStarredAtToForumThreadUser: migrating ====================
-- add_column(:forum_thread_users, :starred_at, :datetime, {})
   -> 0.0002s
-- execute("alter table forum_thread_users add constraint test_starred_at check(starred = false or starred_at is not null)")
   -> 0.0003s
== 20120816205538 AddStarredAtToForumThreadUser: migrated (0.0020s) ===========

== 20120820191804 AddSearchIndices: migrating =================================
-- execute("CREATE INDEX idx_search_user ON users USING GIN(to_tsvector('english', username))")
   -> 0.0006s
-- execute("CREATE INDEX idx_search_thread ON forum_threads USING GIN(to_tsvector('english', title))")
   -> 0.0004s
== 20120820191804 AddSearchIndices: migrated (0.0017s) ========================

== 20120821191616 AddBumpedAtToForumThreads: migrating ========================
-- add_column(:forum_threads, :bumped_at, :datetime, {})
   -> 0.0003s
-- execute("UPDATE forum_threads SET bumped_at = last_posted_at")
   -> 0.0002s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:forum_threads)
   -> 0.0000s
-- execute("ALTER TABLE \"forum_threads\" ALTER COLUMN \"bumped_at\" TYPE timestamp")
   -> 0.0002s
-- change_column_null(:forum_threads, :bumped_at, false, nil)
   -> 0.0001s
-- index_name(:forum_threads, {:column=>:last_posted_at})
   -> 0.0000s
-- index_name_exists?(:forum_threads, "index_forum_threads_on_last_posted_at")
   -> 0.0005s
-- remove_index(:forum_threads, {:column=>:last_posted_at, :name=>"index_forum_threads_on_last_posted_at"})
   -> 0.0011s
-- add_index(:forum_threads, :bumped_at, {:order=>{:bumped_at=>:desc}})
   -> 0.0010s
== 20120821191616 AddBumpedAtToForumThreads: migrated (0.0044s) ===============

== 20120823205956 AddSlugToCategories: migrating ==============================
-- add_column(:categories, :slug, :string, {})
   -> 0.0003s
-- execute("UPDATE categories SET slug = REPLACE(LOWER(name), ' ', '-')")
   -> 0.0002s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:categories)
   -> 0.0000s
-- execute("ALTER TABLE \"categories\" ALTER COLUMN \"slug\" TYPE character varying")
   -> 0.0002s
-- change_column_null(:categories, :slug, false, nil)
   -> 0.0001s
== 20120823205956 AddSlugToCategories: migrated (0.0017s) =====================

== 20120824171908 CreateCategoryFeaturedUsers: migrating ======================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:category_featured_users, {:id=>:integer})
   -> 0.0011s
-- add_index(:category_featured_users, [:category_id, :user_id], {:unique=>true})
   -> 0.0011s
== 20120824171908 CreateCategoryFeaturedUsers: migrated (0.0032s) =============

== 20120828204209 CreateOneboxRenders: migrating ==============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:onebox_renders, {:id=>:integer})
   -> 0.0014s
-- add_index(:onebox_renders, :url, {:unique=>true})
   -> 0.0010s
== 20120828204209 CreateOneboxRenders: migrated (0.0033s) =====================

== 20120828204624 CreatePostOneboxRenders: migrating ==========================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:post_onebox_renders, {:id=>false})
   -> 0.0004s
-- add_index(:post_onebox_renders, [:post_id, :onebox_render_id], {:unique=>true})
   -> 0.0010s
== 20120828204624 CreatePostOneboxRenders: migrated (0.0022s) =================

== 20120830182736 AddPreviewToOneboxRenders: migrating ========================
-- add_column(:onebox_renders, :preview, :text, {:null=>true})
   -> 0.0002s
-- execute("DELETE FROM onebox_renders")
   -> 0.0002s
-- execute("DELETE FROM post_onebox_renders")
   -> 0.0001s
== 20120830182736 AddPreviewToOneboxRenders: migrated (0.0013s) ===============

== 20120910171504 RemoveDescriptionFromSiteSettings: migrating ================
-- remove_column(:site_settings, :description)
   -> 0.0002s
== 20120910171504 RemoveDescriptionFromSiteSettings: migrated (0.0010s) =======

== 20120918152319 RenameViewsToReads: migrating ===============================
-- rename_column(:posts, :views, :reads)
   -> 0.0015s
== 20120918152319 RenameViewsToReads: migrated (0.0022s) ======================

== 20120918205931 AddSubTagToForumThreads: migrating ==========================
-- add_column(:forum_threads, :sub_tag, :string, {})
   -> 0.0003s
-- add_index(:forum_threads, [:category_id, :sub_tag, :bumped_at])
   -> 0.0012s
== 20120918205931 AddSubTagToForumThreads: migrated (0.0023s) =================

== 20120919152846 AddHasBestOfToForumThreads: migrating =======================
-- add_column(:forum_threads, :has_best_of, :boolean, {:default=>false, :null=>false})
   -> 0.0021s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:posts)
   -> 0.0000s
-- execute("ALTER TABLE \"posts\" ALTER COLUMN \"score\" TYPE float")
   -> 0.0002s
== 20120919152846 AddHasBestOfToForumThreads: migrated (0.0033s) ==============

== 20120921055428 AddTwitterUserInfo: migrating ===============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:twitter_user_infos, {:id=>:integer})
   -> 0.0014s
-- add_index(:twitter_user_infos, [:twitter_user_id], {:unique=>true})
   -> 0.0011s
-- add_index(:twitter_user_infos, [:user_id], {:unique=>true})
   -> 0.0009s
== 20120921055428 AddTwitterUserInfo: migrated (0.0042s) ======================

== 20120921155050 CreateArchetypes: migrating =================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:archetypes, {:id=>:integer})
   -> 0.0014s
-- add_index(:archetypes, :name_key, {:unique=>true})
   -> 0.0010s
-- execute("INSERT INTO archetypes (name_key, created_at, updated_at) VALUES ('regular', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)")
   -> 0.0002s
-- execute("INSERT INTO archetypes (name_key, created_at, updated_at) VALUES ('poll', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)")
   -> 0.0001s
-- add_column(:forum_threads, :archetype_id, :integer, {:default=>1, :null=>false})
   -> 0.0021s
== 20120921155050 CreateArchetypes: migrated (0.0058s) ========================

== 20120921162512 AddMetaDataToForumThreads: migrating ========================
-- execute("CREATE EXTENSION IF NOT EXISTS hstore")
   -> 0.0089s
-- add_column(:forum_threads, :meta_data, :hstore, {})
   -> 0.0003s
== 20120921162512 AddMetaDataToForumThreads: migrated (0.0101s) ===============

== 20120921163606 CreateArchetypeOptions: migrating ===========================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:archetype_options, {:id=>:integer})
   -> 0.0014s
-- add_index(:archetype_options, :archetype_id)
   -> 0.0011s
-- execute("INSERT INTO archetype_options (archetype_id, key, option_type, created_at, updated_at)\n              VALUES (2, 'private_poll', 1, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)")
   -> 0.0002s
-- execute("INSERT INTO archetype_options (archetype_id, key, option_type, created_at, updated_at)\n              VALUES (2, 'single_vote', 1, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)")
   -> 0.0001s
== 20120921163606 CreateArchetypeOptions: migrated (0.0043s) ==================

== 20120924182000 AddHstoreExtension: migrating ===============================
-- execute("CREATE EXTENSION IF NOT EXISTS hstore")
   -> 0.0001s
== 20120924182000 AddHstoreExtension: migrated (0.0008s) ======================

== 20120924182031 AddVoteCountToPosts: migrating ==============================
-- add_column(:forum_threads, :vote_count, :integer, {:default=>0, :null=>false})
   -> 0.0022s
-- add_column(:posts, :vote_count, :integer, {:default=>0, :null=>false})
   -> 0.0020s
== 20120924182031 AddVoteCountToPosts: migrated (0.0050s) =====================

== 20120925171620 RemoveEnglishFromPostActionTypes: migrating =================
-- rename_column(:post_action_types, :name, :name_key)
   -> 0.0011s
-- execute("UPDATE post_action_types SET name_key = regexp_replace(lower(name_key), '[^a-z]', '_')")
   -> 0.0002s
-- remove_column(:post_action_types, :long_form)
   -> 0.0002s
-- remove_column(:post_action_types, :description)
   -> 0.0001s
== 20120925171620 RemoveEnglishFromPostActionTypes: migrated (0.0025s) ========

== 20120925190802 AddSequenceToPostActionTypes: migrating =====================
-- remove_column(:post_action_types, :id)
   -> 0.0002s
-- add_column(:post_action_types, :id, :integer, {:primary_key=>true})
   -> 0.0012s
== 20120925190802 AddSequenceToPostActionTypes: migrated (0.0023s) ============

== 20120928170023 AddSortOrderToPosts: migrating ==============================
-- add_column(:posts, :sort_order, :integer, {})
   -> 0.0004s
-- index_name(:posts, {:column=>:user_id})
   -> 0.0000s
-- index_name_exists?(:posts, "index_posts_on_user_id")
   -> 0.0005s
-- remove_index(:posts, {:column=>:user_id, :name=>"index_posts_on_user_id"})
   -> 0.0015s
-- execute("UPDATE posts AS p SET sort_order = post_number FROM forum_threads AS ft WHERE ft.id = p.forum_thread_id AND ft.archetype_id = 1")
   -> 0.0005s
== 20120928170023 AddSortOrderToPosts: migrated (0.0038s) =====================

== 20121009161116 AddEmailStuffToUsers: migrating =============================
-- add_column(:users, :last_emailed_at, :datetime, {:null=>true})
   -> 0.0002s
-- add_column(:users, :email_digests, :boolean, {:null=>false, :default=>true})
   -> 0.0022s
== 20121009161116 AddEmailStuffToUsers: migrated (0.0032s) ====================

== 20121011155904 CreateEmailLogs: migrating ==================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:email_logs, {:id=>:integer})
   -> 0.0013s
-- add_index(:email_logs, :created_at, {:order=>{:created_at=>:desc}})
   -> 0.0011s
-- add_index(:email_logs, [:user_id, :created_at], {:order=>{:created_at=>:desc}})
   -> 0.0010s
== 20121011155904 CreateEmailLogs: migrated (0.0042s) =========================

== 20121017162924 ConvertArchetypes: migrating ================================
-- add_column(:forum_threads, :archetype, :string, {:default=>"regular", :null=>false})
   -> 0.0026s
-- execute("UPDATE forum_threads SET archetype = a.name_key FROM archetypes AS a WHERE a.id = forum_threads.archetype_id")
   -> 0.0004s
-- remove_column(:forum_threads, :archetype_id)
   -> 0.0002s
-- drop_table(:archetypes)
   -> 0.0005s
-- drop_table(:archetype_options)
   -> 0.0005s
== 20121017162924 ConvertArchetypes: migrated (0.0051s) =======================

== 20121018103721 RenameForumThreadTables: migrating ==========================
-- rename_table("forum_threads", "topics")
   -> 0.0026s
-- rename_table("forum_thread_link_clicks", "topic_link_clicks")
   -> 0.0021s
-- rename_table("forum_thread_links", "topic_links")
   -> 0.0024s
-- rename_table("forum_thread_users", "topic_users")
   -> 0.0028s
-- rename_table("category_featured_threads", "category_featured_topics")
   -> 0.0023s
-- rename_column("categories", "forum_thread_id", "topic_id")
   -> 0.0013s
-- rename_column("categories", "top1_forum_thread_id", "top1_topic_id")
   -> 0.0011s
-- rename_column("categories", "top2_forum_thread_id", "top2_topic_id")
   -> 0.0010s
-- rename_column("categories", "forum_thread_count", "topic_count")
   -> 0.0012s
-- rename_column("categories", "threads_year", "topics_year")
   -> 0.0010s
-- rename_column("categories", "threads_month", "topics_month")
   -> 0.0011s
-- rename_column("categories", "threads_week", "topics_week")
   -> 0.0011s
-- rename_column("category_featured_topics", "forum_thread_id", "topic_id")
   -> 0.0009s
-- rename_column("topic_link_clicks", "forum_thread_link_id", "topic_link_id")
   -> 0.0009s
-- rename_column("topic_links", "forum_thread_id", "topic_id")
   -> 0.0012s
-- rename_column("topic_links", "link_forum_thread_id", "link_topic_id")
   -> 0.0011s
-- rename_column("topic_users", "forum_thread_id", "topic_id")
   -> 0.0011s
-- rename_column("incoming_links", "forum_thread_id", "topic_id")
   -> 0.0011s
-- rename_column("notifications", "forum_thread_id", "topic_id")
   -> 0.0012s
-- rename_column("post_timings", "forum_thread_id", "topic_id")
   -> 0.0013s
-- rename_column("posts", "forum_thread_id", "topic_id")
   -> 0.0013s
-- rename_column("user_actions", "target_forum_thread_id", "target_topic_id")
   -> 0.0014s
-- rename_column("uploads", "forum_thread_id", "topic_id")
   -> 0.0012s
== 20121018103721 RenameForumThreadTables: migrated (0.0341s) =================

== 20121018133039 CreateTopicAllowedUsers: migrating ==========================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:topic_allowed_users, {:id=>:integer})
   -> 0.0010s
-- add_index(:topic_allowed_users, [:topic_id, :user_id], {:unique=>true})
   -> 0.0011s
-- add_index(:topic_allowed_users, [:user_id, :topic_id], {:unique=>true})
   -> 0.0009s
== 20121018133039 CreateTopicAllowedUsers: migrated (0.0039s) =================

== 20121018182709 FixNotificationData: migrating ==============================
-- execute("UPDATE notifications SET data = replace(data, 'thread_title', 'topic_title')")
   -> 0.0003s
== 20121018182709 FixNotificationData: migrated (0.0009s) =====================

== 20121106015500 DropAvatarUrlFromUsers: migrating ===========================
-- remove_column(:users, :avatar_url)
   -> 0.0002s
== 20121106015500 DropAvatarUrlFromUsers: migrated (0.0013s) ==================

== 20121108193516 AddPostActionIdToNotifications: migrating ===================
-- add_column(:notifications, :post_action_id, :integer, {:null=>true})
   -> 0.0002s
-- add_index(:notifications, :post_action_id)
   -> 0.0010s
== 20121108193516 AddPostActionIdToNotifications: migrated (0.0019s) ==========

== 20121109164630 CreateTrustLevels: migrating ================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:trust_levels, {:id=>:integer})
   -> 0.0013s
-- add_column(:users, :trust_level_id, :integer, {:default=>1, :null=>false})
   -> 0.0021s
== 20121109164630 CreateTrustLevels: migrated (0.0042s) =======================

== 20121113200844 BioMarkdownSupport: migrating ===============================
-- rename_column(:users, :bio, :bio_raw)
   -> 0.0018s
-- add_column(:users, :bio_cooked, :text, {:null=>true})
   -> 0.0002s
== 20121113200844 BioMarkdownSupport: migrated (0.0028s) ======================

== 20121113200845 CreateFacebookUserInfos: migrating ==========================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:facebook_user_infos, {:id=>:integer})
   -> 0.0015s
-- add_index(:facebook_user_infos, :user_id, {:unique=>true})
   -> 0.0010s
-- add_index(:facebook_user_infos, :facebook_user_id, {:unique=>true})
   -> 0.0010s
== 20121113200845 CreateFacebookUserInfos: migrated (0.0044s) =================

== 20121115172544 RenameStickyToPinned: migrating =============================
-- rename_column(:topics, :sticky, :pinned)
   -> 0.0013s
== 20121115172544 RenameStickyToPinned: migrated (0.0020s) ====================

== 20121116212424 AddMoreEmailSettingsToUser: migrating =======================
-- add_column(:users, :email_private_messages, :boolean, {:default=>true})
   -> 0.0033s
-- add_column(:users, :email_mentions, :boolean, {:default=>true})
   -> 0.0022s
== 20121116212424 AddMoreEmailSettingsToUser: migrated (0.0064s) ==============

== 20121119190529 AddEmailSettingsToUsers: migrating ==========================
-- add_column(:users, :email_replied, :boolean, {:default=>true})
   -> 0.0025s
-- add_column(:users, :email_quoted, :boolean, {:default=>true})
   -> 0.0022s
== 20121119190529 AddEmailSettingsToUsers: migrated (0.0055s) =================

== 20121119200843 AddEmailDirectToUsers: migrating ============================
-- add_column(:users, :email_direct, :boolean, {:default=>true, :null=>false})
   -> 0.0024s
-- remove_column(:users, :email_mentions)
   -> 0.0002s
-- remove_column(:users, :email_replied)
   -> 0.0003s
-- remove_column(:users, :email_quoted)
   -> 0.0002s
== 20121119200843 AddEmailDirectToUsers: migrated (0.0042s) ===================

== 20121121202035 CreateInvites: migrating ====================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:invites, {:id=>:integer})
   -> 0.0014s
-- add_index(:invites, :invite_key, {:unique=>true})
   -> 0.0010s
-- add_index(:invites, [:email, :invited_by_id], {:unique=>true})
   -> 0.0009s
== 20121121202035 CreateInvites: migrated (0.0042s) ===========================

== 20121121205215 CreateTopicInvites: migrating ===============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:topic_invites, {:id=>:integer})
   -> 0.0010s
-- add_index(:topic_invites, [:topic_id, :invite_id], {:unique=>true})
   -> 0.0010s
-- add_index(:topic_invites, :invite_id)
   -> 0.0009s
== 20121121205215 CreateTopicInvites: migrated (0.0037s) ======================

== 20121122033316 AddMutedAtToTopicUser: migrating ============================
-- add_column(:topic_users, :muted_at, :datetime, {})
   -> 0.0003s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:topic_users)
   -> 0.0000s
-- execute("ALTER TABLE \"topic_users\" ALTER COLUMN \"last_read_post_number\" TYPE integer")
   -> 0.0003s
-- change_column_null(:topic_users, :last_read_post_number, true, nil)
   -> 0.0001s
-- change_column_default(:topic_users, :last_read_post_number, nil)
   -> 0.0011s
== 20121122033316 AddMutedAtToTopicUser: migrated (0.0026s) ===================

== 20121123054127 MakePostNumberDistinct: migrating ===========================
== 20121123054127 MakePostNumberDistinct: migrated (0.0013s) ==================

== 20121123063630 CreateUserVisits: migrating =================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:user_visits, {:id=>:integer})
   -> 0.0011s
-- add_index(:user_visits, [:user_id, :visited_at], {:unique=>true})
   -> 0.0012s
== 20121123063630 CreateUserVisits: migrated (0.0031s) ========================

== 20121129160035 CreateEmailTokens: migrating ================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:email_tokens, {:id=>:integer})
   -> 0.0019s
-- add_index(:email_tokens, :token, {:unique=>true})
   -> 0.0013s
== 20121129160035 CreateEmailTokens: migrated (0.0042s) =======================

== 20121129184948 RemoveEmailTokenFromUsers: migrating ========================
-- execute("INSERT INTO email_tokens (user_id, email, token, created_at, updated_at)\n              SELECT id, email, email_token, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP\n              FROM users WHERE email_token IS NOT NULL")
   -> 0.0006s
-- remove_column(:users, :email_token)
   -> 0.0002s
== 20121129184948 RemoveEmailTokenFromUsers: migrated (0.0016s) ===============

== 20121130010400 CreateDrafts: migrating =====================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:drafts, {:id=>:integer})
   -> 0.0014s
-- add_index(:drafts, [:user_id, :draft_key])
   -> 0.0012s
== 20121130010400 CreateDrafts: migrated (0.0035s) ============================

== 20121130191818 AddLinkPostIdToTopicLinks: migrating ========================
-- add_column(:topic_links, :link_post_id, :integer, {})
   -> 0.0003s
== 20121130191818 AddLinkPostIdToTopicLinks: migrated (0.0010s) ===============

== 20121202225421 AddVisitedAtToTopicUser: migrating ==========================
-- add_column(:topic_users, :last_visited_at, :datetime, {})
   -> 0.0003s
-- add_column(:topic_users, :first_visited_at, :datetime, {})
   -> 0.0002s
== 20121202225421 AddVisitedAtToTopicUser: migrated (0.0012s) =================

== 20121203181719 RenameSeenNotificaitonId: migrating =========================
-- rename_column(:users, :seen_notificaiton_id, :seen_notification_id)
   -> 0.0019s
== 20121203181719 RenameSeenNotificaitonId: migrated (0.0027s) ================

== 20121204183855 FixLinkPostId: migrating ====================================
== 20121204183855 FixLinkPostId: migrated (0.0027s) ===========================

== 20121204193747 AddAnotherFeaturedUserToTopics: migrating ===================
-- add_column(:topics, :featured_user4_id, :integer, {:null=>true})
   -> 0.0003s
== 20121204193747 AddAnotherFeaturedUserToTopics: migrated (0.0010s) ==========

== 20121205162143 AddApprovedToUsers: migrating ===============================
-- add_column(:users, :approved, :boolean, {:null=>false, :default=>false})
   -> 0.0024s
-- add_column(:users, :approved_by_id, :integer, {:null=>true})
   -> 0.0002s
-- add_column(:users, :approved_at, :timestamp, {:null=>true})
   -> 0.0002s
== 20121205162143 AddApprovedToUsers: migrated (0.0037s) ======================

== 20121207000741 AddNotificationsToTopicUsers: migrating =====================
-- add_column(:topic_users, :notifications, :integer, {:default=>2})
   -> 0.0010s
-- add_column(:topic_users, :notifications_changed_at, :datetime, {})
   -> 0.0002s
-- add_column(:topic_users, :notifications_reason_id, :integer, {})
   -> 0.0002s
== 20121207000741 AddNotificationsToTopicUsers: migrated (0.0021s) ============

== 20121211233131 CreateSiteCustomizations: migrating =========================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:site_customizations, {:id=>:integer})
   -> 0.0014s
-- add_index(:site_customizations, [:key])
   -> 0.0010s
== 20121211233131 CreateSiteCustomizations: migrated (0.0033s) ================

== 20121216230719 AddOverrideDefaultStyleToSiteCustomization: migrating =======
-- add_column(:site_customizations, :override_default_style, :boolean, {:default=>false, :null=>false})
   -> 0.0015s
-- add_column(:site_customizations, :stylesheet_baked, :text, {:default=>"", :null=>false})
   -> 0.0014s
== 20121216230719 AddOverrideDefaultStyleToSiteCustomization: migrated (0.0037s)

== 20121218205642 AddTopicsEnteredToUsers: migrating ==========================
-- add_column(:users, :topics_entered, :integer, {:default=>0, :null=>false})
   -> 0.0025s
-- add_column(:users, :posts_read_count, :integer, {:default=>0, :null=>false})
   -> 0.0023s
== 20121218205642 AddTopicsEnteredToUsers: migrated (0.0057s) =================

== 20121224072204 AddLastEditorIdToPosts: migrating ===========================
-- add_column(:posts, :last_editor_id, :integer, {})
   -> 0.0003s
== 20121224072204 AddLastEditorIdToPosts: migrated (0.0010s) ==================

== 20121224095139 CreateDraftSequence: migrating ==============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:draft_sequences, {:id=>:integer})
   -> 0.0014s
-- add_index(:draft_sequences, [:user_id, :draft_key], {:unique=>true})
   -> 0.0011s
== 20121224095139 CreateDraftSequence: migrated (0.0048s) =====================

== 20121224100650 AddSequenceToDrafts: migrating ==============================
-- add_column(:drafts, :sequence, :integer, {:null=>false, :default=>0})
   -> 0.0015s
== 20121224100650 AddSequenceToDrafts: migrated (0.0023s) =====================

== 20121228192219 AddDeletedAtToInvites: migrating ============================
-- add_column(:invites, :deleted_at, :datetime, {})
   -> 0.0002s
== 20121228192219 AddDeletedAtToInvites: migrated (0.0010s) ===================

== 20130107165207 AddDigestAfterDaysToUsers: migrating ========================
-- add_column(:users, :digest_after_days, :integer, {:default=>7, :null=>false})
   -> 0.0024s
== 20130107165207 AddDigestAfterDaysToUsers: migrated (0.0032s) ===============

== 20130108195847 AddPreviousVisitAtToUsers: migrating ========================
-- add_column(:users, :previous_visit_at, :timestamp, {})
   -> 0.0003s
== 20130108195847 AddPreviousVisitAtToUsers: migrated (0.0011s) ===============

== 20130115012140 MergeMuteOptionsOnTopicUsers: migrating =====================
-- execute("update topic_users set notifications = 0 where notifications = 3")
   -> 0.0002s
-- execute("update topic_users set notifications = 1 where notifications = 2")
   -> 0.0001s
-- execute("update topic_users set notifications = 2 where notifications = 1")
   -> 0.0001s
-- execute("update topic_users set notifications = 0 where muted_at is not null")
   -> 0.0001s
-- rename_column(:topic_users, :notifications, :notification_level)
   -> 0.0010s
-- remove_column(:topic_users, :muted_at)
   -> 0.0002s
== 20130115012140 MergeMuteOptionsOnTopicUsers: migrated (0.0026s) ============

== 20130115021937 CorrectDefaultOnNotificationLevel: migrating ================
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:topic_users)
   -> 0.0000s
-- execute("ALTER TABLE \"topic_users\" ALTER COLUMN \"notification_level\" TYPE integer")
   -> 0.0003s
-- change_column_default(:topic_users, :notification_level, 1)
   -> 0.0010s
-- change_column_null(:topic_users, :notification_level, false, 1)
   -> 0.0011s
== 20130115021937 CorrectDefaultOnNotificationLevel: migrated (0.0033s) =======

== 20130115043603 OopsUnwatchABoatOfWatchedStuff: migrating ===================
-- execute("update topic_users set notification_level = 1 where notifications_reason_id is null and notification_level = 2")
   -> 0.0002s
== 20130115043603 OopsUnwatchABoatOfWatchedStuff: migrated (0.0009s) ==========

== 20130116151829 RemoveSubTagFromTopics: migrating ===========================
-- remove_column(:topics, :sub_tag)
   -> 0.0004s
== 20130116151829 RemoveSubTagFromTopics: migrated (0.0011s) ==================

== 20130120222728 FixSearch: migrating ========================================
-- execute("drop index idx_search_thread")
   -> 0.0002s
-- execute("drop index idx_search_user")
   -> 0.0002s
-- execute("create table posts_search (id integer not null primary key, search_data tsvector)")
   -> 0.0008s
-- execute("create table users_search (id integer not null primary key, search_data tsvector)")
   -> 0.0008s
-- execute("create table categories_search (id integer not null primary key, search_data tsvector)")
   -> 0.0007s
-- execute("create index idx_search_post on posts_search using gin(search_data) ")
   -> 0.0002s
-- execute("create index idx_search_user on users_search using gin(search_data) ")
   -> 0.0003s
-- execute("create index idx_search_category on categories_search using gin(search_data) ")
   -> 0.0002s
== 20130120222728 FixSearch: migrated (0.0043s) ===============================

== 20130121231352 AddTrackingToTopicUsers: migrating ==========================
-- execute("update topic_users set notification_level = 3 where notification_level = 2")
   -> 0.0002s
== 20130121231352 AddTrackingToTopicUsers: migrated (0.0009s) =================

== 20130122051134 AddAutoTrackTopicsToUser: migrating =========================
-- add_column(:users, :auto_track_topics, :boolean, {:null=>false, :default=>false})
   -> 0.0023s
== 20130122051134 AddAutoTrackTopicsToUser: migrated (0.0031s) ================

== 20130122232825 AddAutoTrackAfterSecondsAndBanningAndDobToUser: migrating ===
-- add_column(:users, :banned_at, :datetime, {})
   -> 0.0003s
-- add_column(:users, :banned_till, :datetime, {})
   -> 0.0002s
-- add_column(:users, :date_of_birth, :date, {})
   -> 0.0002s
-- add_column(:users, :auto_track_topics_after_msecs, :integer, {})
   -> 0.0002s
-- add_column(:users, :views, :integer, {:null=>false, :default=>0})
   -> 0.0025s
-- remove_column(:users, :auto_track_topics)
   -> 0.0002s
-- add_column(:topic_users, :total_msecs_viewed, :integer, {:null=>false, :default=>0})
   -> 0.0010s
-- execute("update topic_users set total_msecs_viewed =\n       (\n         select coalesce(sum(msecs) ,0)\n         from post_timings t\n         where topic_users.topic_id = t.topic_id and topic_users.user_id = t.user_id\n       )")
   -> 0.0003s
== 20130122232825 AddAutoTrackAfterSecondsAndBanningAndDobToUser: migrated (0.0057s)

== 20130123070909 AutoTrackAllTopicsRepliedTo: migrating ======================
-- execute("update topic_users set notification_level = 2, notifications_reason_id = 4\n      from posts p\n      where\n        notification_level = 1 and\n        notifications_reason_id is null and\n        p.topic_id = topic_users.topic_id and\n        p.user_id = topic_users.user_id\n    ")
   -> 0.0004s
== 20130123070909 AutoTrackAllTopicsRepliedTo: migrated (0.0011s) =============

== 20130125002652 AddHiddenToPosts: migrating =================================
-- add_column(:posts, :hidden, :boolean, {:null=>false, :default=>false})
   -> 0.0019s
-- add_column(:posts, :hidden_reason_id, :integer, {})
   -> 0.0002s
== 20130125002652 AddHiddenToPosts: migrated (0.0029s) ========================

== 20130125030305 AddFieldsToPostAction: migrating ============================
-- add_column(:post_actions, :deleted_by, :integer, {})
   -> 0.0002s
-- add_column(:post_actions, :message, :text, {})
   -> 0.0006s
== 20130125030305 AddFieldsToPostAction: migrated (0.0016s) ===================

== 20130125031122 CorrectIndexOnPostAction: migrating =========================
-- index_name("post_actions", {:name=>"idx_unique_actions"})
   -> 0.0000s
-- index_name_exists?("post_actions", "idx_unique_actions")
   -> 0.0006s
-- remove_index("post_actions", {:name=>"idx_unique_actions"})
   -> 0.0003s
-- add_index("post_actions", ["user_id", "post_action_type_id", "post_id", "deleted_at"], {:name=>"idx_unique_actions", :unique=>true})
   -> 0.0011s
== 20130125031122 CorrectIndexOnPostAction: migrated (0.0028s) ================

== 20130127213646 RemoveTrustLevels: migrating ================================
-- drop_table(:trust_levels)
   -> 0.0008s
-- change_column_default(:users, :trust_level_id, 0)
   -> 0.0029s
-- rename_column(:users, :trust_level_id, :trust_level)
   -> 0.0023s
-- update("UPDATE users set trust_level = 1")
   -> 0.0005s
   -> 0 rows
-- remove_column(:users, :moderator)
   -> 0.0004s
-- add_column(:users, :flag_level, :integer, {:null=>false, :default=>0})
   -> 0.0033s
== 20130127213646 RemoveTrustLevels: migrated (0.0113s) =======================

== 20130128182013 TrustLevelDefaultNull: migrating ============================
-- change_column_default(:users, :trust_level, nil)
   -> 0.0021s
== 20130128182013 TrustLevelDefaultNull: migrated (0.0029s) ===================

== 20130129010625 RemovePmReflections: migrating ==============================
-- execute("delete from topic_links where link_topic_id in (select id from topics where archetype = 'private_message') ")
   -> 0.0004s
== 20130129010625 RemovePmReflections: migrated (0.0012s) =====================

== 20130129163244 AddTimeReadToUsers: migrating ===============================
-- add_column(:users, :time_read, :integer, {:default=>0, :null=>false})
   -> 0.0025s
-- execute("UPDATE users SET time_read = posts_read_count * 20")
   -> 0.0003s
== 20130129163244 AddTimeReadToUsers: migrated (0.0036s) ======================

== 20130129174845 AddDaysVisitedToUsers: migrating ============================
-- add_column(:users, :days_visited, :integer, {:null=>false, :default=>0})
   -> 0.0026s
-- execute("UPDATE users AS u SET days_visited = (SELECT COUNT(*) FROM user_visits AS uv WHERE uv.user_id = u.id)")
   -> 0.0004s
== 20130129174845 AddDaysVisitedToUsers: migrated (0.0037s) ===================

== 20130130154611 RemoveIndexFromViews: migrating =============================
-- index_name("views", {:name=>"unique_views"})
   -> 0.0000s
-- index_name_exists?("views", "unique_views")
   -> 0.0006s
-- remove_index("views", {:name=>"unique_views"})
   -> 0.0002s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:views)
   -> 0.0000s
-- execute("ALTER TABLE \"views\" ALTER COLUMN \"viewed_at\" TYPE date")
   -> 0.0008s
== 20130130154611 RemoveIndexFromViews: migrated (0.0026s) ====================

== 20130131055710 AddCustomFlagCountToTopics: migrating =======================
-- add_column(:topics, :custom_flag_count, :integer, {:null=>false, :default=>0})
   -> 0.0020s
-- add_column(:posts, :custom_flag_count, :integer, {:null=>false, :default=>0})
   -> 0.0018s
== 20130131055710 AddCustomFlagCountToTopics: migrated (0.0046s) ==============

== 20130201000828 AddColumnSummariesToPostsAndTopics: migrating ===============
-- add_column(:posts, :spam_count, :integer, {:default=>0, :null=>false})
   -> 0.0019s
-- add_column(:topics, :spam_count, :integer, {:default=>0, :null=>false})
   -> 0.0020s
-- add_column(:posts, :illegal_count, :integer, {:default=>0, :null=>false})
   -> 0.0018s
-- add_column(:topics, :illegal_count, :integer, {:default=>0, :null=>false})
   -> 0.0019s
-- add_column(:posts, :inappropriate_count, :integer, {:default=>0, :null=>false})
   -> 0.0018s
-- add_column(:topics, :inappropriate_count, :integer, {:default=>0, :null=>false})
   -> 0.0019s
-- remove_column(:posts, :offensive_count)
   -> 0.0003s
-- remove_column(:topics, :offensive_count)
   -> 0.0003s
== 20130201000828 AddColumnSummariesToPostsAndTopics: migrated (0.0129s) ======

== 20130201023409 AddPositionToPostActionType: migrating ======================
-- add_column(:post_action_types, :position, :integer, {:default=>0, :null=>false})
   -> 0.0011s
== 20130201023409 AddPositionToPostActionType: migrated (0.0018s) =============

== 20130203204338 AddLastVersionAtToPosts: migrating ==========================
-- add_column(:posts, :last_version_at, :timestamp, {})
   -> 0.0003s
-- execute("UPDATE posts SET last_version_at = COALESCE((SELECT max(created_at)\n                                                 FROM versions WHERE versions.versioned_id = posts.id\n                                                    AND versions.versioned_type = 'Post'), posts.created_at)")
   -> 0.0004s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:posts)
   -> 0.0000s
-- execute("ALTER TABLE \"posts\" ALTER COLUMN \"last_version_at\" TYPE timestamp")
   -> 0.0002s
-- change_column_null(:posts, :last_version_at, false, nil)
   -> 0.0001s
== 20130203204338 AddLastVersionAtToPosts: migrated (0.0019s) =================

== 20130204000159 AddIpAddressToUsers: migrating ==============================
-- execute("alter table users add column ip_address inet")
   -> 0.0002s
== 20130204000159 AddIpAddressToUsers: migrated (0.0009s) =====================

== 20130205021905 AlterFacebookUserId: migrating ==============================
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:facebook_user_infos)
   -> 0.0000s
-- execute("ALTER TABLE \"facebook_user_infos\" ALTER COLUMN \"facebook_user_id\" TYPE bigint")
   -> 0.0018s
-- change_column_null(:facebook_user_infos, :facebook_user_id, false, nil)
   -> 0.0001s
== 20130205021905 AlterFacebookUserId: migrated (0.0028s) =====================

== 20130207200019 AddUserDeletedToPosts: migrating ============================
-- add_column(:posts, :user_deleted, :boolean, {:null=>false, :default=>false})
   -> 0.0019s
== 20130207200019 AddUserDeletedToPosts: migrated (0.0027s) ===================

== 20130208220635 RemoveReplyBelowPostNumberFromPosts: migrating ==============
-- remove_column(:posts, :reply_below_post_number)
   -> 0.0002s
== 20130208220635 RemoveReplyBelowPostNumberFromPosts: migrated (0.0010s) =====

== 20130213021450 RemoveTopicResponseActions: migrating =======================
-- execute("delete from user_actions where action_type = 8")
   -> 0.0004s
== 20130213021450 RemoveTopicResponseActions: migrated (0.0011s) ==============

== 20130213203300 AddNewTopicDurationMinutesToUsers: migrating ================
-- add_column(:users, :new_topic_duration_minutes, :integer, {})
   -> 0.0003s
== 20130213203300 AddNewTopicDurationMinutesToUsers: migrated (0.0010s) =======

== 20130221215017 AddDescriptionToCategories: migrating =======================
-- add_column(:categories, :description, :text, {:null=>true})
   -> 0.0002s
-- remove_column(:categories, :top1_topic_id)
   -> 0.0002s
-- remove_column(:categories, :top2_topic_id)
   -> 0.0002s
-- remove_column(:categories, :top1_user_id)
   -> 0.0001s
-- remove_column(:categories, :top2_user_id)
   -> 0.0001s
== 20130221215017 AddDescriptionToCategories: migrated (0.0018s) ==============

== 20130226015336 AddGithubUserInfo: migrating ================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:github_user_infos, {:id=>:integer})
   -> 0.0014s
-- add_index(:github_user_infos, [:github_user_id], {:unique=>true})
   -> 0.0009s
-- add_index(:github_user_infos, [:user_id], {:unique=>true})
   -> 0.0009s
== 20130226015336 AddGithubUserInfo: migrated (0.0041s) =======================

== 20130306180148 AddClearedPinnedToTopicUsers: migrating =====================
-- add_column(:topic_users, :cleared_pinned_at, :datetime, {:null=>true})
   -> 0.0003s
-- add_column(:topics, :pinned_at, :datetime, {:null=>true})
   -> 0.0002s
-- execute("UPDATE topics SET pinned_at = created_at WHERE pinned")
   -> 0.0003s
-- remove_column(:topics, :pinned)
   -> 0.0002s
== 20130306180148 AddClearedPinnedToTopicUsers: migrated (0.0019s) ============

== 20130311181327 RemoveExtraSpamRecord: migrating ============================
-- execute("UPDATE post_actions SET post_action_type_id = 7 where post_action_type_id = 8")
   -> 0.0002s
-- execute("DELETE FROM post_action_types WHERE id = 8")
   -> 0.0002s
== 20130311181327 RemoveExtraSpamRecord: migrated (0.0012s) ===================

== 20130313004922 AddExternalLinksInNewTabAnDisableQuotingToUser: migrating ===
-- add_column(:users, :external_links_in_new_tab, :boolean, {:default=>false, :null=>false})
   -> 0.0025s
-- add_column(:users, :enable_quoting, :boolean, {:default=>true, :null=>false})
   -> 0.0022s
== 20130313004922 AddExternalLinksInNewTabAnDisableQuotingToUser: migrated (0.0055s)

== 20130314093434 AddForegroundColorToCategories: migrating ===================
-- add_column(:categories, :text_color, :string, {:limit=>6, :null=>false, :default=>"FFFFFF"})
   -> 0.0019s
== 20130314093434 AddForegroundColorToCategories: migrated (0.0027s) ==========

== 20130315180637 EnableTrigramSupport: migrating =============================
-- execute("CREATE EXTENSION IF NOT EXISTS pg_trgm")
   -> 0.0040s
== 20130315180637 EnableTrigramSupport: migrated (0.0048s) ====================

== 20130319122248 AddReplyToUserIdToPost: migrating ===========================
-- add_column(:posts, :reply_to_user_id, :integer, {})
   -> 0.0002s
-- execute("UPDATE posts p SET reply_to_user_id = (\n                SELECT u.id from users u\n                JOIN posts p2 ON  p2.user_id = u.id AND\n                                  p2.post_number = p.reply_to_post_number AND\n                                  p2.topic_id = p.topic_id\n            )")
   -> 0.0007s
== 20130319122248 AddReplyToUserIdToPost: migrated (0.0018s) ==================

== 20130320012100 AddUserIndexesToPostsAndTopics: migrating ===================
-- execute("CREATE INDEX idx_posts_user_id_deleted_at\n              ON posts(user_id) WHERE deleted_at IS NULL")
   -> 0.0004s
-- execute("CREATE INDEX idx_topics_user_id_deleted_at\n              ON topics(user_id) WHERE deleted_at IS NULL")
   -> 0.0004s
== 20130320012100 AddUserIndexesToPostsAndTopics: migrated (0.0015s) ==========

== 20130320024345 AddModeratorToUser: migrating ===============================
-- add_column(:users, :moderator, :boolean, {:default=>false})
   -> 0.0025s
-- execute("UPDATE users SET trust_level = 1, moderator = 't' where trust_level = 5")
   -> 0.0004s
== 20130320024345 AddModeratorToUser: migrated (0.0038s) ======================

== 20130321154905 RemoveOneboxesFromDb: migrating =============================
-- drop_table(:post_onebox_renders)
   -> 0.0004s
-- drop_table(:onebox_renders)
   -> 0.0005s
== 20130321154905 RemoveOneboxesFromDb: migrated (0.0017s) ====================

== 20130322183614 AddPercentRankToPosts: migrating ============================
-- add_column(:posts, :percent_rank, :float, {:default=>1.0})
   -> 0.0024s
-- execute("UPDATE posts SET percent_rank = x.percent_rank\n              FROM (SELECT id, percent_rank()\n                    OVER (PARTITION BY topic_id ORDER BY SCORE DESC)\n                    FROM posts) AS x\n              WHERE x.id = posts.id")
   -> 0.0006s
== 20130322183614 AddPercentRankToPosts: migrated (0.0039s) ===================

== 20130326210101 AddHotnessToCategory: migrating =============================
-- add_column(:categories, :hotness, :float, {:default=>5.0, :null=>false})
   -> 0.0019s
== 20130326210101 AddHotnessToCategory: migrated (0.0027s) ====================

== 20130327185852 UpdateSiteSettingsForHot: migrating =========================
-- execute("UPDATE site_settings SET value = REPLACE(value, 'popular|', 'latest|hot|') where name = 'top_menu'")
   -> 0.0003s
== 20130327185852 UpdateSiteSettingsForHot: migrated (0.0010s) ================

== 20130328162943 CreateHotTopics: migrating ==================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:hot_topics, {:force=>true, :id=>:integer})
   -> 0.0010s
-- add_index(:hot_topics, :topic_id, {:unique=>true})
   -> 0.0011s
-- add_index(:hot_topics, :score, {:order=>"desc"})
   -> 0.0010s
== 20130328162943 CreateHotTopics: migrated (0.0040s) =========================

== 20130328182433 AddScoreToTopics: migrating =================================
-- add_column(:topics, :score, :float, {})
   -> 0.0003s
-- add_column(:topics, :percent_rank, :float, {:null=>false, :default=>1.0})
   -> 0.0022s
== 20130328182433 AddScoreToTopics: migrated (0.0033s) ========================

== 20130402210723 AddValuesToHotTopics: migrating =============================
-- add_column(:hot_topics, :random_bias, :float, {})
   -> 0.0003s
-- add_column(:hot_topics, :random_multiplier, :float, {})
   -> 0.0002s
-- add_column(:hot_topics, :days_ago_bias, :float, {})
   -> 0.0002s
-- add_column(:hot_topics, :days_ago_multiplier, :float, {})
   -> 0.0002s
-- add_column(:hot_topics, :hot_topic_type, :integer, {})
   -> 0.0002s
== 20130402210723 AddValuesToHotTopics: migrated (0.0018s) ====================

== 20130404143437 CreateSiteContents: migrating ===============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:site_contents, {:force=>true, :id=>false})
   -> 0.0008s
-- add_index(:site_contents, :content_type, {:unique=>true})
   -> 0.0010s
== 20130404143437 CreateSiteContents: migrated (0.0035s) ======================

== 20130404232558 AddUserExtras: migrating ====================================
-- add_column(:users, :likes_given, :integer, {:null=>false, :default=>0})
   -> 0.0028s
-- add_column(:users, :likes_received, :integer, {:null=>false, :default=>0})
   -> 0.0028s
-- add_column(:users, :topic_reply_count, :integer, {:null=>false, :default=>0})
   -> 0.0035s
-- execute("UPDATE users u\nSET\n    likes_given = X.likes_given\nFROM (\n  SELECT\n    a.user_id,\n    COUNT(*) likes_given\n  FROM user_actions a\n  JOIN posts p ON p.id = a.target_post_id\n  WHERE p.deleted_at IS NULL AND a.action_type = 1\n  GROUP BY a.user_id\n) as X\nWHERE X.user_id = u.id\n")
   -> 0.0012s
-- execute("UPDATE users u\nSET\n    likes_received = Y.likes_received\nFROM (\n  SELECT\n    a.user_id,\n    COUNT(*) likes_received\n  FROM user_actions a\n  JOIN posts p ON p.id = a.target_post_id\n  WHERE p.deleted_at IS NULL AND a.action_type = 2\n  GROUP BY a.user_id\n) as Y\nWHERE Y.user_id = u.id\n")
   -> 0.0006s
-- execute("UPDATE users u\nSET\n    topic_reply_count = Z.topic_reply_count\nFROM (\n  SELECT\n    p.user_id,\n    COUNT(DISTINCT topic_id) topic_reply_count\n  FROM posts p\n  JOIN topics t on t.id = p.topic_id\n  WHERE t.user_id <> p.user_id AND\n        p.deleted_at IS NULL AND t.deleted_at IS NULL\n  GROUP BY p.user_id\n) Z\nWHERE\n  Z.user_id = u.id\n")
   -> 0.0038s
== 20130404232558 AddUserExtras: migrated (0.0191s) ===========================

== 20130411205132 CreateAdminLogs: migrating ==================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:admin_logs, {:force=>true, :id=>:integer})
   -> 0.0022s
== 20130411205132 CreateAdminLogs: migrated (0.0089s) =========================

== 20130412015502 CorrectCountsOnPosts: migrating =============================
-- rename_column(:posts, :custom_flag_count, :notify_moderators_count)
   -> 0.0026s
-- add_column(:posts, :notify_user_count, :integer, {:default=>0, :null=>false})
   -> 0.0040s
== 20130412015502 CorrectCountsOnPosts: migrated (0.0080s) ====================

== 20130412020156 CorrectCountsOnTopics: migrating ============================
-- rename_column(:topics, :custom_flag_count, :notify_moderators_count)
   -> 0.0020s
-- add_column(:topics, :notify_user_count, :integer, {:default=>0, :null=>false})
   -> 0.0032s
== 20130412020156 CorrectCountsOnTopics: migrated (0.0088s) ===================

== 20130416004607 CreateGroups: migrating =====================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:groups, {:force=>true, :id=>:integer})
   -> 0.0015s
== 20130416004607 CreateGroups: migrated (0.0026s) ============================

== 20130416004933 GroupUsers: migrating =======================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:group_users, {:force=>true, :id=>:integer})
   -> 0.0015s
-- add_index(:group_users, [:group_id, :user_id], {:unique=>true})
   -> 0.0015s
== 20130416004933 GroupUsers: migrated (0.0039s) ==============================

== 20130416170855 AddSubtypeToTopics: migrating ===============================
-- add_column(:topics, :subtype, :string, {})
   -> 0.0003s
-- execute("update topics set subtype = 'user_to_user' where archetype = 'private_message'")
   -> 0.0004s
== 20130416170855 AddSubtypeToTopics: migrated (0.0017s) ======================

== 20130419195746 IncreaseDataLengthOnNotifications: migrating ================
-- execute("ALTER TABLE notifications ALTER COLUMN data TYPE VARCHAR(1000)")
   -> 0.0015s
== 20130419195746 IncreaseDataLengthOnNotifications: migrated (0.0026s) =======

== 20130422050626 AddRelatedPostIdToPostActions: migrating ====================
-- add_column(:post_actions, :related_post_id, :integer, {})
   -> 0.0003s
== 20130422050626 AddRelatedPostIdToPostActions: migrated (0.0014s) ===========

== 20130424015746 AddSlugToTopics: migrating ==================================
-- add_column(:topics, :slug, :string, {})
   -> 0.0004s
== 20130424015746 AddSlugToTopics: migrated (0.0013s) =========================

== 20130424055025 AddUserIdToIncomingLinks: migrating =========================
-- add_column(:incoming_links, :user_id, :integer, {})
   -> 0.0003s
== 20130424055025 AddUserIdToIncomingLinks: migrated (0.0012s) ================

== 20130426044914 AllowNullsInIncomingLinks: migrating ========================
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:incoming_links)
   -> 0.0000s
-- execute("ALTER TABLE \"incoming_links\" ALTER COLUMN \"referer\" TYPE character varying(1000)")
   -> 0.0002s
-- change_column_null(:incoming_links, :referer, true, nil)
   -> 0.0001s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:incoming_links)
   -> 0.0000s
-- execute("ALTER TABLE \"incoming_links\" ALTER COLUMN \"domain\" TYPE character varying(100)")
   -> 0.0001s
-- change_column_null(:incoming_links, :domain, true, nil)
   -> 0.0001s
== 20130426044914 AllowNullsInIncomingLinks: migrated (0.0017s) ===============

== 20130426052257 AddIncomingIpCurrentUserIdToIncomingLinks: migrating ========
-- add_column(:incoming_links, :ip_address, :inet, {})
   -> 0.0005s
-- add_column(:incoming_links, :current_user_id, :int, {})
   -> 0.0003s
== 20130426052257 AddIncomingIpCurrentUserIdToIncomingLinks: migrated (0.0017s)

== 20130428194335 AddUnstarredAtToTopicUsers: migrating =======================
-- add_column(:topic_users, :unstarred_at, :datetime, {})
   -> 0.0003s
== 20130428194335 AddUnstarredAtToTopicUsers: migrated (0.0010s) ==============

== 20130429000101 AddSecurityToCategories: migrating ==========================
-- add_column(:categories, :secure, :boolean, {:default=>false, :null=>false})
   -> 0.0019s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:category_groups, {:force=>true, :id=>:integer})
   -> 0.0013s
== 20130429000101 AddSecurityToCategories: migrated (0.0043s) =================

== 20130430052751 AddTopicAllowedGroups: migrating ============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:topic_allowed_groups, {:force=>true, :id=>:integer})
   -> 0.0012s
-- add_index(:topic_allowed_groups, [:group_id, :topic_id], {:unique=>true})
   -> 0.0012s
-- add_index(:topic_allowed_groups, [:topic_id, :group_id], {:unique=>true})
   -> 0.0014s
== 20130430052751 AddTopicAllowedGroups: migrated (0.0049s) ===================

== 20130501105651 FixTopicAllowedGroups: migrating ============================
-- remove_column(:topic_allowed_groups, :integer)
   -> 0.0003s
== 20130501105651 FixTopicAllowedGroups: migrated (0.0011s) ===================

== 20130506020935 AddAutomaticToGroups: migrating =============================
-- add_column(:groups, :automatic, :boolean, {:default=>false, :null=>false})
   -> 0.0021s
-- execute("    ALTER SEQUENCE groups_id_seq START WITH 100\n")
   -> 0.0002s
== 20130506020935 AddAutomaticToGroups: migrated (0.0032s) ====================

== 20130506185042 AddAutoCloseAtToTopics: migrating ===========================
-- add_column(:topics, :auto_close_at, :datetime, {})
   -> 0.0003s
-- add_column(:topics, :auto_close_user_id, :integer, {})
   -> 0.0002s
== 20130506185042 AddAutoCloseAtToTopics: migrated (0.0013s) ==================

== 20130508040235 AddUserCountToGroups: migrating =============================
-- add_column(:groups, :user_count, :integer, {:null=>false, :default=>0})
   -> 0.0021s
== 20130508040235 AddUserCountToGroups: migrated (0.0030s) ====================

== 20130509040248 UpdateSequenceForGroups: migrating ==========================
-- execute("    SELECT setval('groups_id_seq', 40)\n")
   -> 0.0002s
== 20130509040248 UpdateSequenceForGroups: migrated (0.0010s) =================

== 20130509041351 AddUniqueNameToGroups: migrating ============================
-- add_index(:groups, [:name], {:unique=>true})
   -> 0.0011s
== 20130509041351 AddUniqueNameToGroups: migrated (0.0019s) ===================

== 20130515193551 AddAutoCloseDaysToCategories: migrating =====================
-- add_column(:categories, :auto_close_days, :float, {})
   -> 0.0002s
== 20130515193551 AddAutoCloseDaysToCategories: migrated (0.0010s) ============

== 20130521210140 CreateCasUserInfos: migrating ===============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:cas_user_infos, {:id=>:integer})
   -> 0.0022s
-- add_index(:cas_user_infos, :user_id, {:unique=>true})
   -> 0.0011s
-- add_index(:cas_user_infos, :cas_user_id, {:unique=>true})
   -> 0.0012s
== 20130521210140 CreateCasUserInfos: migrated (0.0054s) ======================

== 20130522193615 RenameSearchTables: migrating ===============================
-- rename_table(:users_search, :user_search_data)
   -> 0.0026s
-- rename_column(:user_search_data, :id, :user_id)
   -> 0.0010s
-- rename_table(:categories_search, :category_search_data)
   -> 0.0024s
-- rename_column(:category_search_data, :id, :category_id)
   -> 0.0011s
-- rename_table(:posts_search, :post_search_data)
   -> 0.0031s
-- rename_column(:post_search_data, :id, :post_id)
   -> 0.0010s
== 20130522193615 RenameSearchTables: migrated (0.0121s) ======================

== 20130527152648 AddLikeScoreToPosts: migrating ==============================
-- add_column(:posts, :like_score, :integer, {:default=>0, :null=>false})
   -> 0.0026s
-- execute("UPDATE posts p\n              set like_score = x.like_score\n              FROM (SELECT pa.post_id,\n                            SUM(CASE\n                                 WHEN u.admin OR u.moderator THEN 3\n                                 ELSE 1\n                                END) AS like_score\n                    FROM post_actions AS pa\n                    INNER JOIN users AS u ON u.id = pa.user_id\n                    GROUP BY pa.post_id) AS x\n              WHERE x.post_id = p.id")
   -> 0.0006s
== 20130527152648 AddLikeScoreToPosts: migrated (0.0040s) =====================

== 20130528174147 AddRankToCategoryFeaturedTopics: migrating ==================
-- add_column(:category_featured_topics, :rank, :integer, {:default=>0, :null=>false})
   -> 0.0011s
-- add_index(:category_featured_topics, [:category_id, :rank])
   -> 0.0011s
== 20130528174147 AddRankToCategoryFeaturedTopics: migrated (0.0031s) =========

== 20130531210816 AddStaffTookActionToPostActions: migrating ==================
-- add_column(:post_actions, :staff_took_action, :boolean, {:default=>false, :null=>false})
   -> 0.0017s
== 20130531210816 AddStaffTookActionToPostActions: migrated (0.0024s) =========

== 20130603192412 AddBlockedToUsers: migrating ================================
-- add_column(:users, :blocked, :boolean, {:default=>false})
   -> 0.0027s
== 20130603192412 AddBlockedToUsers: migrated (0.0035s) =======================

== 20130606190601 AddAutoCloseStartedAtToTopics: migrating ====================
-- add_column(:topics, :auto_close_started_at, :datetime, {})
   -> 0.0003s
== 20130606190601 AddAutoCloseStartedAtToTopics: migrated (0.0010s) ===========

== 20130610201033 AddReplyKeyToEmailLogs: migrating ===========================
-- add_column(:email_logs, :reply_key, :string, {:limit=>32})
   -> 0.0002s
-- add_index(:email_logs, :reply_key)
   -> 0.0010s
== 20130610201033 AddReplyKeyToEmailLogs: migrated (0.0020s) ==================

== 20130612200846 CreatePostUploadJoinTable: migrating ========================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:posts_uploads, {:force=>true, :id=>false})
   -> 0.0005s
-- add_index(:posts_uploads, :post_id)
   -> 0.0013s
-- add_index(:posts_uploads, :upload_id)
   -> 0.0010s
-- add_index(:posts_uploads, [:post_id, :upload_id], {:unique=>true})
   -> 0.0010s
== 20130612200846 CreatePostUploadJoinTable: migrated (0.0055s) ===============

== 20130613211700 DropPostsUploads: migrating =================================
-- drop_table(:posts_uploads)
   -> 0.0005s
== 20130613211700 DropPostsUploads: migrated (0.0013s) ========================

== 20130613212230 CreatePostUploads: migrating ================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:post_uploads, {:id=>:integer})
   -> 0.0013s
-- execute("create unique index idx_unique_post_uploads on post_uploads(post_id, upload_id)")
   -> 0.0003s
== 20130613212230 CreatePostUploads: migrated (0.0025s) =======================

== 20130615064344 AddDynamicFaviconPreferenceToUser: migrating ================
-- add_column(:users, :dynamic_favicon, :boolean, {:default=>false, :null=>false})
   -> 0.0031s
== 20130615064344 AddDynamicFaviconPreferenceToUser: migrated (0.0039s) =======

== 20130615073305 RemoveTopicIdFromUploads: migrating =========================
-- remove_column(:uploads, :topic_id)
   -> 0.0003s
== 20130615073305 RemoveTopicIdFromUploads: migrated (0.0011s) ================

== 20130615075557 AddShaToUploads: migrating ==================================
-- add_column(:uploads, :sha, :string, {:null=>true})
   -> 0.0003s
-- add_index(:uploads, :sha, {:unique=>true})
   -> 0.0010s
== 20130615075557 AddShaToUploads: migrated (0.0020s) =========================

== 20130616082327 CreateOptimizedImages: migrating ============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:optimized_images, {:id=>:integer})
   -> 0.0013s
-- add_index(:optimized_images, :upload_id)
   -> 0.0010s
-- add_index(:optimized_images, [:upload_id, :width, :height], {:unique=>true})
   -> 0.0009s
== 20130616082327 CreateOptimizedImages: migrated (0.0041s) ===================

== 20130617014127 RenameShaAndExtColumns: migrating ===========================
-- rename_column(:optimized_images, :sha, :sha1)
   -> 0.0013s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:optimized_images)
   -> 0.0000s
-- execute("ALTER TABLE \"optimized_images\" ALTER COLUMN \"sha1\" TYPE character varying(40)")
   -> 0.0014s
-- rename_column(:optimized_images, :ext, :extension)
   -> 0.0013s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:optimized_images)
   -> 0.0000s
-- execute("ALTER TABLE \"optimized_images\" ALTER COLUMN \"extension\" TYPE character varying(10)")
   -> 0.0011s
== 20130617014127 RenameShaAndExtColumns: migrated (0.0060s) ==================

== 20130617180009 RenameShaColumn: migrating ==================================
-- index_name(:uploads, {:column=>:sha})
   -> 0.0000s
-- index_name_exists?(:uploads, "index_uploads_on_sha")
   -> 0.0005s
-- remove_index(:uploads, {:column=>:sha, :name=>"index_uploads_on_sha"})
   -> 0.0016s
-- rename_column(:uploads, :sha, :sha1)
   -> 0.0016s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:uploads)
   -> 0.0000s
-- execute("ALTER TABLE \"uploads\" ALTER COLUMN \"sha1\" TYPE character varying(40)")
   -> 0.0015s
-- add_index(:uploads, :sha1, {:unique=>true})
   -> 0.0010s
== 20130617180009 RenameShaColumn: migrated (0.0073s) =========================

== 20130617181804 AddPostIdToEmailLogs: migrating =============================
-- add_column(:email_logs, :post_id, :integer, {:null=>true})
   -> 0.0002s
-- add_column(:email_logs, :topic_id, :integer, {:null=>true})
   -> 0.0002s
== 20130617181804 AddPostIdToEmailLogs: migrated (0.0012s) ====================

== 20130619063902 AddDeferToPostActions: migrating ============================
-- add_column(:post_actions, :defer, :boolean, {})
   -> 0.0002s
-- add_column(:post_actions, :defer_by, :int, {})
   -> 0.0002s
== 20130619063902 AddDeferToPostActions: migrated (0.0012s) ===================

== 20130621042855 ChangeSupressToSuppress: migrating ==========================
== 20130621042855 ChangeSupressToSuppress: migrated (0.0050s) =================

== 20130622110348 AddUrlIndexToUploads: migrating =============================
-- add_index(:uploads, :url)
   -> 0.0012s
== 20130622110348 AddUrlIndexToUploads: migrated (0.0020s) ====================

== 20130624203206 ChangeIpToInetInTopicLinkClicks: migrating ==================
-- add_column(:topic_link_clicks, :ip_address, :inet, {})
   -> 0.0006s
-- execute("UPDATE topic_link_clicks SET ip_address = inet(\n      (ip >> 24 & 255) || '.' ||\n      (ip >> 16 & 255) || '.' ||\n      (ip >>  8 & 255) || '.' ||\n      (ip >>  0 & 255)\n    );")
   -> 0.0004s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:topic_link_clicks)
   -> 0.0000s
-- execute("ALTER TABLE \"topic_link_clicks\" ALTER COLUMN \"ip_address\" TYPE inet")
   -> 0.0001s
-- change_column_null(:topic_link_clicks, :ip_address, false, nil)
   -> 0.0001s
-- remove_column(:topic_link_clicks, :ip)
   -> 0.0001s
== 20130624203206 ChangeIpToInetInTopicLinkClicks: migrated (0.0023s) =========

== 20130625022454 ChangeIpToInetInViews: migrating ============================
-- add_column(:views, :ip_address, :inet, {})
   -> 0.0005s
-- execute("UPDATE views SET ip_address = inet(\n      (ip >> 24 & 255) || '.' ||\n      (ip >> 16 & 255) || '.' ||\n      (ip >>  8 & 255) || '.' ||\n      (ip >>  0 & 255)\n    );")
   -> 0.0003s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:views)
   -> 0.0000s
-- execute("ALTER TABLE \"views\" ALTER COLUMN \"ip_address\" TYPE inet")
   -> 0.0001s
-- change_column_null(:views, :ip_address, false, nil)
   -> 0.0001s
-- remove_column(:views, :ip)
   -> 0.0002s
== 20130625022454 ChangeIpToInetInViews: migrated (0.0022s) ===================

== 20130625170842 RemoveAccessPassword: migrating =============================
-- execute("SELECT count(*) FROM site_settings where name='access_password' and char_length(value) > 0")
   -> 0.0002s
== 20130625170842 RemoveAccessPassword: migrated (0.0009s) ====================

== 20130625201113 AddTitleToUsers: migrating ==================================
-- add_column(:users, :title, :string, {})
   -> 0.0003s
== 20130625201113 AddTitleToUsers: migrated (0.0010s) =========================

== 20130709184941 AddDeletedByIdToPosts: migrating ============================
-- add_column(:posts, :deleted_by_id, :integer, {:null=>true})
   -> 0.0002s
-- add_column(:topics, :deleted_by_id, :integer, {:null=>true})
   -> 0.0002s
-- add_column(:invites, :deleted_by_id, :integer, {:null=>true})
   -> 0.0002s
-- rename_column(:post_actions, :deleted_by, :deleted_by_id)
   -> 0.0012s
== 20130709184941 AddDeletedByIdToPosts: migrated (0.0028s) ===================

== 20130710201248 AddNukedUserToPosts: migrating ==============================
-- add_column(:posts, :nuked_user, :boolean, {:default=>false})
   -> 0.0028s
== 20130710201248 AddNukedUserToPosts: migrated (0.0036s) =====================

== 20130712041133 AddPermissionTypeToCategoryGroups: migrating ================
-- add_column(:category_groups, :permission_type, :integer, {:default=>1})
   -> 0.0010s
-- rename_column(:categories, :secure, :read_restricted)
   -> 0.0013s
== 20130712041133 AddPermissionTypeToCategoryGroups: migrated (0.0031s) =======

== 20130712163509 AddMissingIdColumns: migrating ==============================
-- add_column(:category_featured_topics, :id, :integer, {:primary_key=>true})
   -> 0.0014s
-- add_column(:topic_users, :id, :integer, {:primary_key=>true})
   -> 0.0013s
== 20130712163509 AddMissingIdColumns: migrated (0.0035s) =====================

== 20130723212758 RenameAdminLog: migrating ===================================
-- rename_table(:admin_logs, :staff_action_logs)
   -> 0.0019s
-- rename_column(:staff_action_logs, :admin_id, :staff_user_id)
   -> 0.0006s
== 20130723212758 RenameAdminLog: migrated (0.0033s) ==========================

== 20130724201552 CreateBlockedEmails: migrating ==============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:blocked_emails, {:id=>:integer})
   -> 0.0015s
-- add_index(:blocked_emails, :email, {:unique=>true})
   -> 0.0012s
== 20130724201552 CreateBlockedEmails: migrated (0.0036s) =====================

== 20130725213613 AddMoreToStaffActionLog: migrating ==========================
-- add_column(:staff_action_logs, :context, :string, {})
   -> 0.0002s
-- add_column(:staff_action_logs, :ip_address, :string, {})
   -> 0.0002s
-- add_column(:staff_action_logs, :email, :string, {})
   -> 0.0002s
== 20130725213613 AddMoreToStaffActionLog: migrated (0.0014s) =================

== 20130728172550 AddUrlToOptimizedImages: migrating ==========================
-- add_column(:optimized_images, :url, :string, {})
   -> 0.0006s
-- execute("UPDATE optimized_images\n             SET url = substring(u.url from '^/uploads/[^/]+/')\n                    || '_optimized/'\n                    || substring(oi.sha1 for 3) || '/'\n                    || substring(oi.sha1 from 4 for 3) || '/'\n                    || substring(oi.sha1 from 7 for 11) || oi.extension\n            FROM optimized_images oi\n            JOIN uploads u ON u.id = oi.upload_id\n            WHERE optimized_images.id = oi.id;")
   -> 0.0006s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:optimized_images)
   -> 0.0000s
-- execute("ALTER TABLE \"optimized_images\" ALTER COLUMN \"url\" TYPE character varying")
   -> 0.0001s
-- change_column_null(:optimized_images, :url, false, nil)
   -> 0.0001s
== 20130728172550 AddUrlToOptimizedImages: migrated (0.0023s) =================

== 20130731163035 AddReportIndexToIncomingLinks: migrating ====================
-- add_index(:incoming_links, [:created_at, :user_id])
   -> 0.0011s
-- add_index(:incoming_links, [:created_at, :domain])
   -> 0.0010s
== 20130731163035 AddReportIndexToIncomingLinks: migrated (0.0030s) ===========

== 20130807202516 AddLastMatchIndexToBlockedEmails: migrating =================
-- add_index(:blocked_emails, :last_match_at)
   -> 0.0011s
== 20130807202516 AddLastMatchIndexToBlockedEmails: migrated (0.0019s) ========

== 20130809160751 FixSeenNotificationIds: migrating ===========================
-- execute("UPDATE users SET\n              seen_notification_id = COALESCE((SELECT MAX(notifications.id)\n                                               FROM notifications\n                                               WHERE user_id = users.id AND created_at <= users.last_seen_at), 0)")
   -> 0.0007s
== 20130809160751 FixSeenNotificationIds: migrated (0.0015s) ==================

== 20130809204732 AddFilterIndexesToStaffActionLogs: migrating ================
-- add_index(:staff_action_logs, [:action, :id])
   -> 0.0011s
-- add_index(:staff_action_logs, [:staff_user_id, :id])
   -> 0.0011s
-- add_index(:staff_action_logs, [:target_user_id, :id])
   -> 0.0011s
== 20130809204732 AddFilterIndexesToStaffActionLogs: migrated (0.0042s) =======

== 20130809211409 AddAvatarToUsers: migrating =================================
-- add_column(:users, :use_uploaded_avatar, :boolean, {:default=>false})
   -> 0.0026s
-- add_column(:users, :uploaded_avatar_template, :string, {})
   -> 0.0002s
-- add_column(:users, :uploaded_avatar_id, :integer, {})
   -> 0.0002s
== 20130809211409 AddAvatarToUsers: migrated (0.0039s) ========================

== 20130813204212 CreateScreenedUrls: migrating ===============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:screened_urls, {:id=>:integer})
   -> 0.0025s
-- add_index(:screened_urls, :url, {:unique=>true})
   -> 0.0012s
-- add_index(:screened_urls, :last_match_at)
   -> 0.0011s
== 20130813204212 CreateScreenedUrls: migrated (0.0059s) ======================

== 20130813224817 RenameBlockedEmailsToScreenedEmails: migrating ==============
-- rename_table(:blocked_emails, :screened_emails)
   -> 0.0028s
== 20130813224817 RenameBlockedEmailsToScreenedEmails: migrated (0.0035s) =====

== 20130816024250 CreateOauth2UserInfos: migrating ============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:oauth2_user_infos, {:id=>:integer})
   -> 0.0013s
-- add_index(:oauth2_user_infos, [:uid, :provider], {:unique=>true})
   -> 0.0011s
== 20130816024250 CreateOauth2UserInfos: migrated (0.0033s) ===================

== 20130819192358 AddValueColumnsToStaffActionLogs: migrating =================
-- add_column(:staff_action_logs, :subject, :text, {})
   -> 0.0003s
-- add_column(:staff_action_logs, :previous_value, :text, {})
   -> 0.0002s
-- add_column(:staff_action_logs, :new_value, :text, {})
   -> 0.0002s
== 20130819192358 AddValueColumnsToStaffActionLogs: migrated (0.0036s) ========

== 20130820174431 AddSubjectIndexToStaffActionLogs: migrating =================
-- add_index(:staff_action_logs, [:subject, :id])
   -> 0.0011s
== 20130820174431 AddSubjectIndexToStaffActionLogs: migrated (0.0018s) ========

== 20130822213513 AddIpAddressToScreeningTables: migrating ====================
-- add_column(:screened_emails, :ip_address, :inet, {})
   -> 0.0003s
-- add_column(:screened_urls, :ip_address, :inet, {})
   -> 0.0002s
== 20130822213513 AddIpAddressToScreeningTables: migrated (0.0013s) ===========

== 20130823201420 DropDefaultsOnEmailDigestColumnsOfUsers: migrating ==========
-- change_column_default(:users, :email_digests, nil)
   -> 0.0025s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:users)
   -> 0.0000s
-- execute("ALTER TABLE \"users\" ALTER COLUMN \"digest_after_days\" TYPE integer")
   -> 0.0003s
-- change_column_default(:users, :digest_after_days, nil)
   -> 0.0023s
-- change_column_null(:users, :digest_after_days, true, nil)
   -> 0.0001s
== 20130823201420 DropDefaultsOnEmailDigestColumnsOfUsers: migrated (0.0062s) =

== 20130826011521 CreatePluginStoreRows: migrating ============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:plugin_store_rows, {:id=>:integer})
   -> 0.0021s
-- add_index(:plugin_store_rows, [:plugin_name, :key], {:unique=>true})
   -> 0.0021s
== 20130826011521 CreatePluginStoreRows: migrated (0.0052s) ===================

== 20130828192526 FixOptimizedImagesUrls: migrating ===========================
-- execute("UPDATE optimized_images\n             SET url = substring(oi.url from '^\\/uploads\\/[^/]+\\/_optimized\\/[0-9a-f]{3}\\/[0-9a-f]{3}\\/[0-9a-f]{11}')\n                    || '_'\n                    || oi.width\n                    || 'x'\n                    || oi.height\n                    || substring(oi.url from '\\.\\w{3,4}$')\n             FROM optimized_images oi\n             WHERE optimized_images.id = oi.id\n               AND oi.url ~ '^\\/uploads\\/[^/]+\\/_optimized\\/[0-9a-f]{3}\\/[0-9a-f]{3}\\/[0-9a-f]{11}\\.';")
   -> 0.0005s
== 20130828192526 FixOptimizedImagesUrls: migrated (0.0014s) ==================

== 20130903154323 AllowNullUserIdOnPosts: migrating ===========================
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:posts)
   -> 0.0000s
-- execute("ALTER TABLE \"posts\" ALTER COLUMN \"user_id\" TYPE integer")
   -> 0.0007s
-- change_column_null(:posts, :user_id, true, nil)
   -> 0.0001s
-- execute("UPDATE posts SET user_id = NULL WHERE nuked_user = true")
   -> 0.0003s
-- remove_column(:posts, :nuked_user)
   -> 0.0002s
== 20130903154323 AllowNullUserIdOnPosts: migrated (0.0023s) ==================

== 20130904181208 AllowNullUserIdOnTopics: migrating ==========================
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:topics)
   -> 0.0000s
-- execute("ALTER TABLE \"topics\" ALTER COLUMN \"user_id\" TYPE integer")
   -> 0.0007s
-- change_column_null(:topics, :user_id, true, nil)
   -> 0.0001s
== 20130904181208 AllowNullUserIdOnTopics: migrated (0.0017s) =================

== 20130906081326 RenameSystemUsername: migrating =============================
-- execute("update site_settings set name = 'site_contact_username' where name = 'system_username'")
   -> 0.0001s
== 20130906081326 RenameSystemUsername: migrated (0.0009s) ====================

== 20130906171631 AddIndexToUploads: migrating ================================
-- add_index(:uploads, [:id, :url])
   -> 0.0014s
== 20130906171631 AddIndexToUploads: migrated (0.0025s) =======================

== 20130910040235 IndexTopicsForFrontPage: migrating ==========================
-- add_index(:topics, [:deleted_at, :visible, :archetype, :id])
   -> 0.0013s
-- add_index(:topics, [:id, :deleted_at])
   -> 0.0011s
== 20130910040235 IndexTopicsForFrontPage: migrated (0.0032s) =================

== 20130910220317 RenameStaffActionLogsToUserHistory: migrating ===============
-- index_name(:staff_action_logs, {:column=>[:staff_user_id, :id]})
   -> 0.0000s
-- index_name_exists?(:staff_action_logs, "index_staff_action_logs_on_staff_user_id_and_id")
   -> 0.0005s
-- remove_index(:staff_action_logs, {:column=>[:staff_user_id, :id], :name=>"index_staff_action_logs_on_staff_user_id_and_id"})
   -> 0.0016s
-- rename_table(:staff_action_logs, :user_histories)
   -> 0.0026s
-- rename_column(:user_histories, :staff_user_id, :acting_user_id)
   -> 0.0013s
-- add_index(:user_histories, [:acting_user_id, :action, :id])
   -> 0.0011s
== 20130910220317 RenameStaffActionLogsToUserHistory: migrated (0.0080s) ======

== 20130911182437 CreateUserStats: migrating ==================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:user_stats, {:id=>false})
   -> 0.0007s
-- execute("ALTER TABLE user_stats ADD PRIMARY KEY (user_id)")
   -> 0.0004s
-- execute("INSERT INTO user_stats (user_id) SELECT id FROM users")
   -> 0.0005s
== 20130911182437 CreateUserStats: migrated (0.0028s) =========================

== 20130912185218 ActingUserNull: migrating ===================================
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:user_histories)
   -> 0.0000s
-- execute("ALTER TABLE \"user_histories\" ALTER COLUMN \"acting_user_id\" TYPE integer")
   -> 0.0006s
-- change_column_null(:user_histories, :acting_user_id, true, nil)
   -> 0.0002s
== 20130912185218 ActingUserNull: migrated (0.0017s) ==========================

== 20130913210454 AddMobileToSiteCustomizations: migrating ====================
-- add_column(:site_customizations, :mobile_stylesheet, :text, {})
   -> 0.0003s
-- add_column(:site_customizations, :mobile_header, :text, {})
   -> 0.0002s
-- add_column(:site_customizations, :mobile_stylesheet_baked, :text, {})
   -> 0.0002s
== 20130913210454 AddMobileToSiteCustomizations: migrated (0.0018s) ===========

== 20130917174738 AddTopicIdToUserHistories: migrating ========================
-- add_column(:user_histories, :topic_id, :integer, {})
   -> 0.0003s
== 20130917174738 AddTopicIdToUserHistories: migrated (0.0011s) ===============

== 20131001060630 AddEmailAlwaysToUsers: migrating ============================
-- add_column(:users, :email_always, :bool, {:default=>false, :null=>false})
   -> 0.0040s
== 20131001060630 AddEmailAlwaysToUsers: migrated (0.0051s) ===================

== 20131002070347 AddUserIdParentTypeIndexOnViews: migrating ==================
-- add_index(:views, [:user_id, :parent_type, :parent_id])
   -> 0.0017s
== 20131002070347 AddUserIdParentTypeIndexOnViews: migrated (0.0028s) =========

== 20131003061137 MoveColumnsToUserStats: migrating ===========================
-- add_column(:user_stats, :topics_entered, :integer, {:default=>0, :null=>false})
   -> 0.0009s
-- add_column(:user_stats, :time_read, :integer, {:default=>0, :null=>false})
   -> 0.0008s
-- add_column(:user_stats, :days_visited, :integer, {:default=>0, :null=>false})
   -> 0.0008s
-- add_column(:user_stats, :posts_read_count, :integer, {:default=>0, :null=>false})
   -> 0.0008s
-- add_column(:user_stats, :likes_given, :integer, {:default=>0, :null=>false})
   -> 0.0008s
-- add_column(:user_stats, :likes_received, :integer, {:default=>0, :null=>false})
   -> 0.0008s
-- add_column(:user_stats, :topic_reply_count, :integer, {:default=>0, :null=>false})
   -> 0.0009s
-- execute("UPDATE user_stats s\n              SET topics_entered = u.topics_entered,\n                  time_read = u.time_read,\n                  days_visited = u.days_visited,\n                  posts_read_count = u.posts_read_count,\n                  likes_given = u.likes_given,\n                  likes_received = u.likes_received,\n                  topic_reply_count = u.topic_reply_count\n              FROM users u WHERE u.id = s.user_id\n    ")
   -> 0.0006s
-- remove_column(:users, :topics_entered)
   -> 0.0004s
-- remove_column(:users, :time_read)
   -> 0.0003s
-- remove_column(:users, :days_visited)
   -> 0.0003s
-- remove_column(:users, :posts_read_count)
   -> 0.0003s
-- remove_column(:users, :likes_given)
   -> 0.0003s
-- remove_column(:users, :likes_received)
   -> 0.0005s
-- remove_column(:users, :topic_reply_count)
   -> 0.0003s
== 20131003061137 MoveColumnsToUserStats: migrated (0.0100s) ==================

== 20131014203951 BackfillPostUploadReverseIndex: migrating ===================
-- execute("TRUNCATE TABLE post_uploads")
   -> 0.0009s
== 20131014203951 BackfillPostUploadReverseIndex: migrated (0.0080s) ==========

== 20131015131652 CreatePostDetails: migrating ================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:post_details, {:id=>:integer})
   -> 0.0016s
-- add_index(:post_details, [:post_id, :key], {:unique=>true})
   -> 0.0011s
== 20131015131652 CreatePostDetails: migrated (0.0037s) =======================

== 20131017014509 AddPostCountToCategories: migrating =========================
-- add_column(:categories, :post_count, :integer, {:null=>false, :default=>0})
   -> 0.0028s
-- execute("    UPDATE categories\n    SET post_count = (SELECT COALESCE(SUM(posts_count),0) FROM topics\n                      WHERE category_id = categories.id AND deleted_at IS NULL)\n")
   -> 0.0007s
== 20131017014509 AddPostCountToCategories: migrated (0.0045s) ================

== 20131017030605 AddLatestToCategories: migrating ============================
-- add_column(:categories, :latest_post_id, :integer, {})
   -> 0.0003s
-- add_column(:categories, :latest_topic_id, :integer, {})
   -> 0.0002s
-- execute("    UPDATE categories c\n    SET latest_post_id = x.post_id\n    FROM (select category_id, max(p.id) post_id FROM posts p\n          JOIN topics t on t.id = p.topic_id\n          WHERE p.deleted_at IS NULL AND NOT p.hidden AND t.visible\n          GROUP BY category_id\n         ) x\n    WHERE x.category_id = c.id\n")
   -> 0.0005s
-- execute("    UPDATE categories c\n    SET latest_topic_id = x.topic_id\n    FROM (select category_id, max(t.id) topic_id\n          FROM topics t\n          WHERE t.deleted_at IS NULL AND t.visible\n          GROUP BY category_id\n         ) x\n    WHERE x.category_id = c.id\n")
   -> 0.0003s
== 20131017030605 AddLatestToCategories: migrated (0.0022s) ===================

== 20131017205954 CreateScreenedIpAddresses: migrating ========================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:screened_ip_addresses, {:id=>:integer})
   -> 0.0018s
-- add_index(:screened_ip_addresses, :ip_address, {:unique=>true})
   -> 0.0012s
-- add_index(:screened_ip_addresses, :last_match_at)
   -> 0.0010s
== 20131017205954 CreateScreenedIpAddresses: migrated (0.0048s) ===============

== 20131018050738 AddPositionToCategories: migrating ==========================
-- add_column(:categories, :position, :integer, {})
   -> 0.0003s
-- execute("UPDATE categories SET position = id")
   -> 0.0002s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:categories)
   -> 0.0000s
-- execute("ALTER TABLE \"categories\" ALTER COLUMN \"position\" TYPE integer")
   -> 0.0002s
-- change_column_null(:categories, :position, false, nil)
   -> 0.0002s
== 20131018050738 AddPositionToCategories: migrated (0.0020s) =================

== 20131022045114 AddUncategorizedCategory: migrating =========================
-- execute("SELECT 1 FROM categories WHERE lower(name) = 'uncategorized'")
   -> 0.0003s
-- execute("INSERT INTO categories\n            (name,color,slug,description,text_color, user_id, created_at, updated_at, position)\n     VALUES ('Uncategorized', '0088CC', 'uncategorized', '', 'FFFFFF', -1, now(), now(), 0 )\n     RETURNING id\n    ")
   -> 0.0004s
-- execute("INSERT INTO site_settings(name, data_type, value, created_at, updated_at)\n             VALUES ('uncategorized_category_id', 3, 1, now(), now())")
   -> 0.0002s
-- execute("DELETE from site_settings where name in ('uncategorized_name', 'uncategorized_text_color', 'uncategorized_color')")
   -> 0.0002s
-- execute("UPDATE topics SET category_id = 1 WHERE archetype = 'regular' AND category_id IS NULL")
   -> 0.0002s
-- execute("ALTER table topics ADD CONSTRAINT has_category_id CHECK (category_id IS NOT NULL OR archetype <> 'regular')")
   -> 0.0005s
== 20131022045114 AddUncategorizedCategory: migrated (0.0037s) ================

== 20131022151218 CreateApiKeys: migrating ====================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:api_keys, {:id=>:integer})
   -> 0.0013s
-- add_index(:api_keys, :key)
   -> 0.0011s
-- add_index(:api_keys, :user_id, {:unique=>true})
   -> 0.0011s
-- execute("INSERT INTO api_keys (key, created_at, updated_at) SELECT value, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM site_settings WHERE name = 'api_key'")
   -> 0.0002s
-- execute("DELETE FROM site_settings WHERE name = 'api_key'")
   -> 0.0001s
== 20131022151218 CreateApiKeys: migrated (0.0050s) ===========================

== 20131023163509 AddParentCategoryIdToCategories: migrating ==================
-- add_column(:categories, :parent_category_id, :integer, {})
   -> 0.0003s
== 20131023163509 AddParentCategoryIdToCategories: migrated (0.0012s) =========

== 20131105101051 AddOriginToUploads: migrating ===============================
-- add_column(:uploads, :origin, :string, {:limit=>1000})
   -> 0.0003s
== 20131105101051 AddOriginToUploads: migrated (0.0032s) ======================

== 20131107154900 RenameBannedToSuspended: migrating ==========================
-- rename_column(:users, :banned_at, :suspended_at)
   -> 0.0022s
-- rename_column(:users, :banned_till, :suspended_till)
   -> 0.0022s
== 20131107154900 RenameBannedToSuspended: migrated (0.0052s) =================

== 20131114185225 AddParticipantCountToTopics: migrating ======================
-- add_column(:topics, :participant_count, :integer, {:default=>1})
   -> 0.0029s
-- execute("UPDATE topics SET participant_count =\n              (SELECT COUNT(DISTINCT p.user_id) FROM posts AS p WHERE p.topic_id = topics.id)")
   -> 0.0004s
== 20131114185225 AddParticipantCountToTopics: migrated (0.0041s) =============

== 20131115165105 AddEditReasonToPosts: migrating =============================
-- add_column(:posts, :edit_reason, :string, {})
   -> 0.0004s
== 20131115165105 AddEditReasonToPosts: migrated (0.0017s) ====================

== 20131118173159 RenameBestOfToSummary: migrating ============================
-- rename_column(:topics, :has_best_of, :has_summary)
   -> 0.0029s
== 20131118173159 RenameBestOfToSummary: migrated (0.0039s) ===================

== 20131120055018 MoveEmojiToNewLocation: migrating ===========================
-- execute("update posts set cooked = regexp_replace(cooked, '(<img[^>]*)assets/emoji/', '\\1plugins/emoji/images/' , 'g') where cooked like '%emoji%'")
   -> 0.0004s
== 20131120055018 MoveEmojiToNewLocation: migrated (0.0013s) ==================

== 20131122064921 IncreaseTwitterUserIdLength: migrating ======================
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:twitter_user_infos)
   -> 0.0000s
-- execute("ALTER TABLE \"twitter_user_infos\" ALTER COLUMN \"twitter_user_id\" TYPE bigint")
   -> 0.0018s
== 20131122064921 IncreaseTwitterUserIdLength: migrated (0.0029s) =============

== 20131206200009 RenameAutoCloseDaysToHours: migrating =======================
-- rename_column(:categories, :auto_close_days, :auto_close_hours)
   -> 0.0015s
-- execute("update categories set auto_close_hours = auto_close_hours * 24")
   -> 0.0003s
== 20131206200009 RenameAutoCloseDaysToHours: migrated (0.0031s) ==============

== 20131209091702 CreatePostRevisions: migrating ==============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:post_revisions, {:id=>:integer})
   -> 0.0017s
-- execute("INSERT INTO post_revisions (user_id, post_id, modifications, number, created_at, updated_at)\n             SELECT user_id, versioned_id, modifications, number, created_at, updated_at\n             FROM   versions\n             WHERE  versioned_type = 'Post'")
   -> 0.0003s
-- change_table(:post_revisions, {})
   -> 0.0023s
== 20131209091702 CreatePostRevisions: migrated (0.0062s) =====================

== 20131209091742 CreateTopicRevisions: migrating =============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:topic_revisions, {:id=>:integer})
   -> 0.0017s
-- execute("INSERT INTO topic_revisions (user_id, topic_id, modifications, number, created_at, updated_at)\n             SELECT user_id, versioned_id, modifications, number, created_at, updated_at\n             FROM   versions\n             WHERE  versioned_type = 'Topic'")
   -> 0.0002s
-- change_table(:topic_revisions, {})
   -> 0.0021s
== 20131209091742 CreateTopicRevisions: migrated (0.0051s) ====================

== 20131210163702 AddWordCountToPosts: migrating ==============================
-- add_column(:posts, :word_count, :integer, {})
   -> 0.0004s
-- add_column(:topics, :word_count, :integer, {})
   -> 0.0004s
== 20131210163702 AddWordCountToPosts: migrated (0.0021s) =====================

== 20131210181901 MigrateWordCounts: migrating ================================
-- execute("SELECT id FROM posts WHERE word_count IS NULL LIMIT 500")
   -> 0.0005s
-- execute("SELECT id FROM topics WHERE word_count IS NULL LIMIT 500")
   -> 0.0007s
== 20131210181901 MigrateWordCounts: migrated (0.0025s) =======================

== 20131210234530 RenameVersionColumn: migrating ==============================
-- add_column(:posts, :version, :integer, {:default=>1, :null=>false})
   -> 0.0026s
-- execute("UPDATE posts SET version = cached_version")
   -> 0.0003s
-- remove_column(:posts, :cached_version)
   -> 0.0003s
== 20131210234530 RenameVersionColumn: migrated (0.0041s) =====================

== 20131212225511 AddPostCountStatsColumnsToCategories: migrating =============
-- change_table(:categories, {})
   -> 0.0006s
== 20131212225511 AddPostCountStatsColumnsToCategories: migrated (0.0014s) ====

== 20131216164557 MakePositionNullableInCategories: migrating =================
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:categories)
   -> 0.0000s
-- execute("ALTER TABLE \"categories\" ALTER COLUMN \"position\" TYPE integer")
   -> 0.0003s
-- change_column_null(:categories, :position, true, nil)
   -> 0.0002s
== 20131216164557 MakePositionNullableInCategories: migrated (0.0016s) ========

== 20131217174004 CreateTopicEmbeds: migrating ================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:topic_embeds, {:force=>true, :id=>:integer})
   -> 0.0020s
-- add_index(:topic_embeds, :embed_url, {:unique=>true})
   -> 0.0013s
== 20131217174004 CreateTopicEmbeds: migrated (0.0043s) =======================

== 20131219203905 AddCookMethodToPosts: migrating =============================
-- add_column(:posts, :cook_method, :integer, {:default=>1, :null=>false})
   -> 0.0026s
== 20131219203905 AddCookMethodToPosts: migrated (0.0034s) ====================

== 20131223171005 CreateTopTopics: migrating ==================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:top_topics, {:force=>true, :id=>:integer})
   -> 0.0029s
-- add_index(:top_topics, :topic_id, {:unique=>true})
   -> 0.0012s
-- add_index(:top_topics, :yearly_posts_count, {:order=>"desc"})
   -> 0.0015s
-- add_index(:top_topics, :yearly_views_count, {:order=>"desc"})
   -> 0.0019s
-- add_index(:top_topics, :yearly_likes_count, {:order=>"desc"})
   -> 0.0018s
-- add_index(:top_topics, :monthly_posts_count, {:order=>"desc"})
   -> 0.0013s
-- add_index(:top_topics, :monthly_views_count, {:order=>"desc"})
   -> 0.0011s
-- add_index(:top_topics, :monthly_likes_count, {:order=>"desc"})
   -> 0.0010s
-- add_index(:top_topics, :weekly_posts_count, {:order=>"desc"})
   -> 0.0010s
-- add_index(:top_topics, :weekly_views_count, {:order=>"desc"})
   -> 0.0010s
-- add_index(:top_topics, :weekly_likes_count, {:order=>"desc"})
   -> 0.0010s
-- add_index(:top_topics, :daily_posts_count, {:order=>"desc"})
   -> 0.0010s
-- add_index(:top_topics, :daily_views_count, {:order=>"desc"})
   -> 0.0010s
-- add_index(:top_topics, :daily_likes_count, {:order=>"desc"})
   -> 0.0011s
== 20131223171005 CreateTopTopics: migrated (0.0206s) =========================

== 20131227164338 AddScoresToTopTopics: migrating =============================
-- add_column(:top_topics, :daily_score, :float, {})
   -> 0.0004s
-- add_column(:top_topics, :weekly_score, :float, {})
   -> 0.0002s
-- add_column(:top_topics, :monthly_score, :float, {})
   -> 0.0002s
-- add_column(:top_topics, :yearly_score, :float, {})
   -> 0.0002s
== 20131227164338 AddScoresToTopTopics: migrated (0.0021s) ====================

== 20131229221725 AddWatchNewTopicsToUsers: migrating =========================
-- add_column(:users, :watch_new_topics, :boolean, {:default=>false, :null=>false})
   -> 0.0030s
== 20131229221725 AddWatchNewTopicsToUsers: migrated (0.0039s) ================

== 20131230010239 AddLastEmailedPostNumberToTopicUser: migrating ==============
-- add_column(:topic_users, :last_emailed_post_number, :integer, {})
   -> 0.0003s
== 20131230010239 AddLastEmailedPostNumberToTopicUser: migrated (0.0012s) =====

== 20140101235747 AddCategoryUsers: migrating =================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:category_users, {:id=>:integer})
   -> 0.0011s
== 20140101235747 AddCategoryUsers: migrated (0.0022s) ========================

== 20140102104229 AddAliasLevelToGroups: migrating ============================
-- add_column(:groups, :alias_level, :integer, {:default=>0})
   -> 0.0018s
== 20140102104229 AddAliasLevelToGroups: migrated (0.0031s) ===================

== 20140102194802 RemoveDefaultFromExternalLinksInNewTab: migrating ===========
-- change_column_default(:users, :external_links_in_new_tab, nil)
   -> 0.0029s
== 20140102194802 RemoveDefaultFromExternalLinksInNewTab: migrated (0.0038s) ==

== 20140107220141 RemoveEnableWideCategoryList: migrating =====================
-- execute("DELETE FROM site_settings WHERE name = 'enable_wide_category_list'")
   -> 0.0001s
== 20140107220141 RemoveEnableWideCategoryList: migrated (0.0009s) ============

== 20140109205940 RenameFavoritesToStarred: migrating =========================
-- execute("UPDATE site_settings SET name = 'max_stars_per_day' where name = 'max_favorites_per_day'")
   -> 0.0001s
-- execute("UPDATE site_settings SET value = REPLACE(value, '|favorited', '|starred') where name = 'top_menu'")
   -> 0.0001s
== 20140109205940 RenameFavoritesToStarred: migrated (0.0010s) ================

== 20140116170655 DropHotTopics: migrating ====================================
-- drop_table(:hot_topics)
   -> 0.0007s
== 20140116170655 DropHotTopics: migrated (0.0015s) ===========================

== 20140120155706 AddLoungeCategory: migrating ================================
== 20140120155706 AddLoungeCategory: migrated (0.0009s) =======================

== 20140121204628 AddInvalidatedAtToInvites: migrating ========================
-- add_column(:invites, :invalidated_at, :datetime, {})
   -> 0.0004s
== 20140121204628 AddInvalidatedAtToInvites: migrated (0.0014s) ===============

== 20140122043508 AddMetaCategory: migrating ==================================
== 20140122043508 AddMetaCategory: migrated (0.0008s) =========================

== 20140124202427 AddPostsReadToUserVisits: migrating =========================
-- add_column(:user_visits, :posts_read, :integer, {:default=>0})
   -> 0.0011s
-- execute("UPDATE user_visits SET posts_read = 1")
   -> 0.0002s
== 20140124202427 AddPostsReadToUserVisits: migrated (0.0023s) ================

== 20140129164541 RemoveCategoryHotness: migrating ============================
-- remove_column(:categories, :hotness)
   -> 0.0003s
== 20140129164541 RemoveCategoryHotness: migrated (0.0011s) ===================

== 20140206044818 AddLocaleToUser: migrating ==================================
-- add_column(:users, :locale, :string, {:limit=>10})
   -> 0.0003s
== 20140206044818 AddLocaleToUser: migrated (0.0011s) =========================

== 20140206195001 AddDefaultsToCategoryPostsAndTopicsFields: migrating ========
-- change_column_default(:categories, :posts_week, 0)
   -> 0.0016s
-- change_column_default(:categories, :posts_month, 0)
   -> 0.0015s
-- change_column_default(:categories, :posts_year, 0)
   -> 0.0019s
-- change_column_default(:categories, :topics_week, 0)
   -> 0.0024s
-- change_column_default(:categories, :topics_month, 0)
   -> 0.0019s
-- change_column_default(:categories, :topics_year, 0)
   -> 0.0019s
== 20140206195001 AddDefaultsToCategoryPostsAndTopicsFields: migrated (0.0123s)

== 20140206215029 AddMailingListModeToUsers: migrating ========================
-- rename_column(:users, :watch_new_topics, :mailing_list_mode)
   -> 0.0020s
== 20140206215029 AddMailingListModeToUsers: migrated (0.0029s) ===============

== 20140210194146 AddPrimaryGroupIdToUsers: migrating =========================
-- add_column(:users, :primary_group_id, :integer, {:null=>true})
   -> 0.0003s
== 20140210194146 AddPrimaryGroupIdToUsers: migrated (0.0013s) ================

== 20140211230222 MoveCasSettings: migrating ==================================
-- drop_table(:cas_user_infos)
   -> 0.0012s
== 20140211230222 MoveCasSettings: migrated (0.0039s) =========================

== 20140211234523 AddTargetsTopicToPostActions: migrating =====================
-- add_column(:post_actions, :targets_topic, :boolean, {:default=>false})
   -> 0.0019s
== 20140211234523 AddTargetsTopicToPostActions: migrated (0.0029s) ============

== 20140214151255 AddSkippedToEmailLogs: migrating ============================
-- add_column(:email_logs, :skipped, :boolean, {:default=>:false})
   -> 0.0294s
-- add_column(:email_logs, :skipped_reason, :string, {})
   -> 0.0005s
-- add_index(:email_logs, [:skipped, :created_at])
   -> 0.0014s
== 20140214151255 AddSkippedToEmailLogs: migrated (0.0325s) ===================

== 20140220160510 RenameSiteSettings: migrating ===============================
-- execute("UPDATE site_settings SET name = 'allow_restore' WHERE name = 'allow_import'")
   -> 0.0002s
-- execute("UPDATE site_settings SET name = 'topics_per_period_in_top_summary' WHERE name = 'topics_per_period_in_summary'")
   -> 0.0002s
== 20140220160510 RenameSiteSettings: migrated (0.0012s) ======================

== 20140220163213 RenameDeleteUserMaxAge: migrating ===========================
-- execute("UPDATE site_settings SET name = 'delete_user_max_post_age' WHERE name = 'delete_user_max_age'")
   -> 0.0002s
== 20140220163213 RenameDeleteUserMaxAge: migrated (0.0010s) ==================

== 20140224232712 AddProfileBackgroundToUser: migrating =======================
-- add_column(:users, :profile_background, :string, {:limit=>255})
   -> 0.0004s
== 20140224232712 AddProfileBackgroundToUser: migrated (0.0012s) ==============

== 20140224232913 AddSingleSignOnRecords: migrating ===========================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:single_sign_on_records, {:id=>:integer})
   -> 0.0020s
-- add_index(:single_sign_on_records, :external_id, {:unique=>true})
   -> 0.0018s
== 20140224232913 AddSingleSignOnRecords: migrated (0.0052s) ==================

== 20140227104930 AddCustomEmailInToCategories: migrating =====================
-- add_column(:categories, :email_in, :string, {:null=>true})
   -> 0.0004s
-- add_column(:categories, :email_in_allow_strangers, :boolean, {:default=>false})
   -> 0.0022s
-- add_index(:categories, :email_in, {:unique=>true})
   -> 0.0011s
== 20140227104930 AddCustomEmailInToCategories: migrated (0.0047s) ============

== 20140227201005 AddStaffCategory: migrating =================================
== 20140227201005 AddStaffCategory: migrated (0.0010s) ========================

== 20140228005443 AddExternalUsernameToSingleSignOnRecord: migrating ==========
-- add_column(:single_sign_on_records, :external_username, :string, {})
   -> 0.0003s
== 20140228005443 AddExternalUsernameToSingleSignOnRecord: migrated (0.0011s) =

== 20140228173431 AddExternalEmailAndExternalNameToSingleSignOnRecord: migrating
-- add_column(:single_sign_on_records, :external_email, :string, {})
   -> 0.0003s
-- add_column(:single_sign_on_records, :external_name, :string, {})
   -> 0.0003s
== 20140228173431 AddExternalEmailAndExternalNameToSingleSignOnRecord: migrated (0.0019s)

== 20140228205743 AddAdminOnlyToUserHistories: migrating ======================
-- add_column(:user_histories, :admin_only, :boolean, {:default=>false})
   -> 0.0029s
-- execute("UPDATE user_histories SET admin_only = true WHERE action = 3")
   -> 0.0004s
== 20140228205743 AddAdminOnlyToUserHistories: migrated (0.0069s) =============

== 20140303185354 AddNewSinceToUserStats: migrating ===========================
-- add_column(:user_stats, :new_since, :datetime, {})
   -> 0.0003s
-- execute("UPDATE user_stats AS us\n               SET new_since = u.created_at\n             FROM users AS u\n              WHERE u.id = us.user_id")
   -> 0.0005s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:user_stats)
   -> 0.0000s
-- execute("ALTER TABLE \"user_stats\" ALTER COLUMN \"new_since\" TYPE timestamp")
   -> 0.0002s
-- change_column_null(:user_stats, :new_since, false, nil)
   -> 0.0002s
== 20140303185354 AddNewSinceToUserStats: migrated (0.0022s) ==================

== 20140304200606 CreateBadgeTypes: migrating =================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:badge_types, {:id=>:integer})
   -> 0.0024s
-- add_index(:badge_types, [:name], {:unique=>true})
   -> 0.0019s
== 20140304200606 CreateBadgeTypes: migrated (0.0063s) ========================

== 20140304201403 CreateBadges: migrating =====================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:badges, {:id=>:integer})
   -> 0.0029s
-- add_index(:badges, [:name], {:unique=>true})
   -> 0.0015s
== 20140304201403 CreateBadges: migrated (0.0055s) ============================

== 20140305100909 CreateUserBadges: migrating =================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:user_badges, {:id=>:integer})
   -> 0.0024s
-- add_index(:user_badges, [:badge_id, :user_id], {:unique=>true})
   -> 0.0012s
== 20140305100909 CreateUserBadges: migrated (0.0050s) ========================

== 20140306223522 MoveTopicRevisionsToPostRevisions: migrating ================
-- execute("\n    INSERT INTO post_revisions(user_id, post_id, modifications, number, created_at, updated_at)\n    SELECT tr.user_id, p.id, tr.modifications, tr.number, tr.created_at, tr.updated_at\n    FROM topic_revisions tr\n    JOIN topics t ON t.id = tr.topic_id\n    JOIN posts p ON p.topic_id = t.id AND p.post_number = 1\n\n")
   -> 0.0043s
-- execute("\n   UPDATE post_revisions r SET number = 2 + (\n    SELECT COUNT(*) FROM post_revisions r2\n    WHERE r2.post_id = r.post_id AND r2.created_at < r.created_at\n   )\n\n")
   -> 0.0005s
-- execute("\n    UPDATE posts p SET version = 1 + (\n      SELECT COUNT(*) FROM post_revisions r\n      WHERE r.post_id = p.id\n    )\n\n")
   -> 0.0003s
-- execute("\n    DROP TABLE topic_revisions\n\n")
   -> 0.0009s
== 20140306223522 MoveTopicRevisionsToPostRevisions: migrated (0.0072s) =======

== 20140318150412 AddExcerptToTopics: migrating ===============================
-- add_column(:topics, :excerpt, :string, {:limit=>1000})
   -> 0.0003s
-- execute("SELECT id FROM topics WHERE pinned_at IS NOT NULL")
   -> 0.0002s
== 20140318150412 AddExcerptToTopics: migrated (0.0013s) ======================

== 20140318203559 AddCreatedAtIndexToPosts: migrating =========================
-- execute("CREATE INDEX idx_posts_created_at_topic_id ON posts(created_at, topic_id) WHERE deleted_at IS NULL")
   -> 0.0006s
-- add_column(:categories, :topics_day, :integer, {:default=>0})
   -> 0.0027s
-- add_column(:categories, :posts_day, :integer, {:default=>0})
   -> 0.0032s
-- execute("DROP INDEX index_topics_on_deleted_at_and_visible_and_archetype_and_id")
   -> 0.0003s
-- add_index(:topics, [:deleted_at, :visible, :archetype, :category_id, :id], {:name=>"idx_topics_front_page"})
   -> 0.0016s
== 20140318203559 AddCreatedAtIndexToPosts: migrated (0.0095s) ================

== 20140320042653 FacebookUserInfosUsernameCanBeNil: migrating ================
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name("facebook_user_infos")
   -> 0.0000s
-- execute("ALTER TABLE \"facebook_user_infos\" ALTER COLUMN \"username\" TYPE character varying")
   -> 0.0002s
-- change_column_null("facebook_user_infos", :username, true, nil)
   -> 0.0002s
== 20140320042653 FacebookUserInfosUsernameCanBeNil: migrated (0.0014s) =======

== 20140402201432 MakeContentSha1Nullable: migrating ==========================
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:topic_embeds)
   -> 0.0000s
-- execute("ALTER TABLE \"topic_embeds\" ALTER COLUMN \"content_sha1\" TYPE character varying(40)")
   -> 0.0002s
-- change_column_null(:topic_embeds, :content_sha1, true, nil)
   -> 0.0001s
== 20140402201432 MakeContentSha1Nullable: migrated (0.0013s) =================

== 20140404143501 AddTitleToTopicLinks: migrating =============================
-- add_column(:topic_links, :title, :string, {})
   -> 0.0002s
-- add_column(:topic_links, :crawled_at, :datetime, {})
   -> 0.0002s
== 20140404143501 AddTitleToTopicLinks: migrated (0.0012s) ====================

== 20140407055830 AddPinnedGloballyToTopics: migrating ========================
-- add_column(:topics, :pinned_globally, :boolean, {:null=>false, :default=>false})
   -> 0.0059s
-- execute("UPDATE topics set pinned_globally = 't' where category_id = (\n      SELECT value::int FROM site_settings WHERE name = 'uncategorized_category_id') AND pinned_at IS NOT NULL\n    ")
   -> 0.0007s
== 20140407055830 AddPinnedGloballyToTopics: migrated (0.0078s) ===============

== 20140407202158 SiteSettingCommaToPipe: migrating ===========================
-- execute("      UPDATE site_settings\n      SET value = replace(value, ',', '|')\n      WHERE name = 'white_listed_spam_host_domains'\n      ;\n")
   -> 0.0002s
-- execute("      UPDATE site_settings\n      SET value = replace(value, ',', '|')\n      WHERE name = 'exclude_rel_nofollow_domains'\n      ;\n")
   -> 0.0002s
== 20140407202158 SiteSettingCommaToPipe: migrated (0.0013s) ==================

== 20140408061512 AddWikiToPosts: migrating ===================================
-- add_column(:posts, :wiki, :boolean, {:default=>false, :null=>false})
   -> 0.0027s
== 20140408061512 AddWikiToPosts: migrated (0.0036s) ==========================

== 20140408152401 AddDefaultValueToTopTopicScores: migrating ==================
-- change_column_default(:top_topics, :daily_score, 0)
   -> 0.0024s
-- change_column_default(:top_topics, :weekly_score, 0)
   -> 0.0020s
-- change_column_default(:top_topics, :monthly_score, 0)
   -> 0.0015s
-- change_column_default(:top_topics, :yearly_score, 0)
   -> 0.0013s
== 20140408152401 AddDefaultValueToTopTopicScores: migrated (0.0083s) =========

== 20140415054717 AllowLongerUsernames: migrating =============================
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:users)
   -> 0.0000s
-- execute("ALTER TABLE \"users\" ALTER COLUMN \"username\" TYPE character varying(60)")
   -> 0.0006s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:users)
   -> 0.0000s
-- execute("ALTER TABLE \"users\" ALTER COLUMN \"username_lower\" TYPE character varying(60)")
   -> 0.0006s
== 20140415054717 AllowLongerUsernames: migrated (0.0022s) ====================

== 20140416202746 CreateColorSchemes: migrating ===============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:color_schemes, {:id=>:integer})
   -> 0.0019s
== 20140416202746 CreateColorSchemes: migrated (0.0029s) ======================

== 20140416202801 CreateColorSchemeColors: migrating ==========================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:color_scheme_colors, {:id=>:integer})
   -> 0.0022s
-- add_index(:color_scheme_colors, [:color_scheme_id])
   -> 0.0040s
== 20140416202801 CreateColorSchemeColors: migrated (0.0074s) =================

== 20140416235757 RemoveColorHexcodeFromBadgeTypes: migrating =================
-- remove_column(:badge_types, :color_hexcode, :string)
   -> 0.0003s
== 20140416235757 RemoveColorHexcodeFromBadgeTypes: migrated (0.0012s) ========

== 20140421235646 AddUserCustomFields: migrating ==============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:user_custom_fields, {:id=>:integer})
   -> 0.0015s
-- add_index(:user_custom_fields, [:user_id, :name])
   -> 0.0012s
== 20140421235646 AddUserCustomFields: migrated (0.0037s) =====================

== 20140422195623 AddVisibileToGroups: migrating ==============================
-- add_column(:groups, :visible, :boolean, {:default=>true, :null=>false})
   -> 0.0018s
== 20140422195623 AddVisibileToGroups: migrated (0.0031s) =====================

== 20140425125742 AddCustomFields: migrating ==================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:category_custom_fields, {:id=>:integer})
   -> 0.0018s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:group_custom_fields, {:id=>:integer})
   -> 0.0016s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:post_custom_fields, {:id=>:integer})
   -> 0.0015s
-- add_index(:category_custom_fields, [:category_id, :name])
   -> 0.0013s
-- add_index(:group_custom_fields, [:group_id, :name])
   -> 0.0011s
-- add_index(:post_custom_fields, [:post_id, :name])
   -> 0.0012s
== 20140425125742 AddCustomFields: migrated (0.0097s) =========================

== 20140425135354 AddTopicCustomFields: migrating =============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:topic_custom_fields, {:id=>:integer})
   -> 0.0020s
-- add_index(:topic_custom_fields, [:topic_id, :name])
   -> 0.0020s
-- execute("      INSERT INTO topic_custom_fields(topic_id, name, value)\n        SELECT id, (each(meta_data)).key, (each(meta_data)).value\n            FROM topics WHERE meta_data <> ''\n")
   -> 0.0007s
-- remove_column(:topics, :meta_data)
   -> 0.0003s
== 20140425135354 AddTopicCustomFields: migrated (0.0083s) ====================

== 20140425172618 AddTitleableToBadges: migrating =============================
-- add_column(:badges, :allow_title, :boolean, {:null=>false, :default=>false})
   -> 0.0027s
== 20140425172618 AddTitleableToBadges: migrated (0.0037s) ====================

== 20140429175951 AddRegistrationIpAddressToUsers: migrating ==================
-- add_column(:users, :registration_ip_address, :inet, {})
   -> 0.0003s
== 20140429175951 AddRegistrationIpAddressToUsers: migrated (0.0014s) =========

== 20140504174212 IncrementReservedTrustLevelBadgeIds: migrating ==============
-- execute("ALTER SEQUENCE badges_id_seq START WITH 100")
   -> 0.0003s
== 20140504174212 IncrementReservedTrustLevelBadgeIds: migrated (0.0109s) =====

== 20140505145918 AddLastRedirectedToTopAtToUsers: migrating ==================
-- add_column(:users, :last_redirected_to_top_at, :datetime, {})
   -> 0.0004s
== 20140505145918 AddLastRedirectedToTopAtToUsers: migrated (0.0014s) =========

== 20140506200235 RemoveSeedColorScheme: migrating ============================
-- execute("DELETE FROM color_schemes WHERE id = 1")
   -> 0.0003s
-- execute("DELETE FROM color_scheme_colors WHERE color_scheme_id = 1")
   -> 0.0003s
== 20140506200235 RemoveSeedColorScheme: migrated (0.0015s) ===================

== 20140507173327 RemoveOpacityFromColorSchemeColors: migrating ===============
-- remove_column(:color_scheme_colors, :opacity)
   -> 0.0005s
== 20140507173327 RemoveOpacityFromColorSchemeColors: migrated (0.0017s) ======

== 20140508053815 AddInvitedGroups: migrating =================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:invited_groups, {:id=>:integer})
   -> 0.0016s
== 20140508053815 AddInvitedGroups: migrated (0.0028s) ========================

== 20140515220111 InitFixedCategoryPositionsValue: migrating ==================
== 20140515220111 InitFixedCategoryPositionsValue: migrated (0.0012s) =========

== 20140520062826 AddMultipleAwardToBadges: migrating =========================
-- add_column(:badges, :multiple_grant, :boolean, {:default=>false, :null=>false})
   -> 0.0019s
-- index_name(:user_badges, {:column=>[:badge_id, :user_id]})
   -> 0.0000s
-- index_name_exists?(:user_badges, "index_user_badges_on_badge_id_and_user_id")
   -> 0.0006s
-- remove_index(:user_badges, {:column=>[:badge_id, :user_id], :name=>"index_user_badges_on_badge_id_and_user_id"})
   -> 0.0016s
-- add_index(:user_badges, [:badge_id, :user_id])
   -> 0.0020s
== 20140520062826 AddMultipleAwardToBadges: migrated (0.0100s) ================

== 20140520063859 RemoveHasCustomAvatarFromUserStats: migrating ===============
-- remove_column(:user_stats, :has_custom_avatar)
   -> 0.0003s
== 20140520063859 RemoveHasCustomAvatarFromUserStats: migrated (0.0014s) ======

== 20140521192142 CreateGoogleUserInfos: migrating ============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:google_user_infos, {:id=>:integer})
   -> 0.0018s
-- add_index(:google_user_infos, :user_id, {:unique=>true})
   -> 0.0011s
-- add_index(:google_user_infos, :google_user_id, {:unique=>true})
   -> 0.0010s
== 20140521192142 CreateGoogleUserInfos: migrated (0.0049s) ===================

== 20140521220115 GoogleOpenidDefaultHasChanged: migrating ====================
== 20140521220115 GoogleOpenidDefaultHasChanged: migrated (0.0015s) ===========

== 20140522003151 AddUserAvatars: migrating ===================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:user_avatars, {:id=>:integer})
   -> 0.0013s
-- add_index(:user_avatars, [:user_id])
   -> 0.0011s
-- execute("   INSERT INTO user_avatars(user_id, custom_upload_id)\n   SELECT id, uploaded_avatar_id\n   FROM users\n")
   -> 0.0002s
-- execute("    UPDATE users SET uploaded_avatar_id = NULL\n    WHERE NOT use_uploaded_avatar\n")
   -> 0.0002s
== 20140522003151 AddUserAvatars: migrated (0.0038s) ==========================

== 20140525233953 RemoveUploadedAvatarTemplateFromUsers: migrating ============
-- remove_column(:users, :uploaded_avatar_template)
   -> 0.0003s
== 20140525233953 RemoveUploadedAvatarTemplateFromUsers: migrated (0.0011s) ===

== 20140526185749 ChangeCategoryUniqunessContstraint: migrating ===============
-- index_name(:categories, {:name=>"index_categories_on_name"})
   -> 0.0000s
-- index_name_exists?(:categories, "index_categories_on_name")
   -> 0.0007s
-- remove_index(:categories, {:name=>"index_categories_on_name"})
   -> 0.0002s
-- add_index(:categories, [:parent_category_id, :name], {:unique=>true})
   -> 0.0013s
== 20140526185749 ChangeCategoryUniqunessContstraint: migrated (0.0031s) ======

== 20140526201939 AddDisableJumpReplyToUsers: migrating =======================
-- add_column(:users, :disable_jump_reply, :boolean, {:default=>false, :null=>false})
   -> 0.0045s
== 20140526201939 AddDisableJumpReplyToUsers: migrated (0.0056s) ==============

== 20140527163207 CreateUserProfiles: migrating ===============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:user_profiles, {:id=>false})
   -> 0.0010s
-- execute("ALTER TABLE user_profiles ADD PRIMARY KEY (user_id)")
   -> 0.0005s
-- execute("INSERT INTO user_profiles (user_id) SELECT id FROM users")
   -> 0.0004s
== 20140527163207 CreateUserProfiles: migrated (0.0029s) ======================

== 20140527233225 AddSystemSavatarVersionToUserAvatars: migrating =============
-- add_column(:user_avatars, :system_avatar_version, :integer, {:default=>0})
   -> 0.0012s
== 20140527233225 AddSystemSavatarVersionToUserAvatars: migrated (0.0020s) ====

== 20140528015354 AddBakedAtToPosts: migrating ================================
-- add_column(:posts, :baked_at, :datetime, {})
   -> 0.0004s
== 20140528015354 AddBakedAtToPosts: migrated (0.0012s) =======================

== 20140529045508 RemoveUseUploadedAvatarFromUser: migrating ==================
-- remove_column(:users, :use_uploaded_avatar)
   -> 0.0005s
== 20140529045508 RemoveUseUploadedAvatarFromUser: migrated (0.0018s) =========

== 20140530002535 RemoveSystemAvatarsFromUserAvatars: migrating ===============
-- execute("UPDATE users SET uploaded_avatar_id = NULL WHERE uploaded_avatar_id IN (\n      SELECT system_upload_id FROM user_avatars\n    )")
   -> 0.0008s
-- remove_column(:user_avatars, :system_upload_id)
   -> 0.0003s
-- remove_column(:user_avatars, :system_avatar_version)
   -> 0.0003s
== 20140530002535 RemoveSystemAvatarsFromUserAvatars: migrated (0.0123s) ======

== 20140530043913 AddBakedVersionToPost: migrating ============================
-- add_column(:posts, :baked_version, :integer, {})
   -> 0.0004s
== 20140530043913 AddBakedVersionToPost: migrated (0.0016s) ===================

== 20140604145431 DisableExternalAuthsByDefault: migrating ====================
== 20140604145431 DisableExternalAuthsByDefault: migrated (0.0009s) ===========

== 20140607035234 AddWebsiteToUserProfiles: migrating =========================
-- add_column(:user_profiles, :website, :string, {})
   -> 0.0003s
-- execute("UPDATE user_profiles SET website = (SELECT website FROM users where user_profiles.user_id = users.id)")
   -> 0.0004s
-- remove_column(:users, :website)
   -> 0.0004s
== 20140607035234 AddWebsiteToUserProfiles: migrated (0.0021s) ================

== 20140610012414 AddPostIdToUserBadges: migrating ============================
-- add_column(:user_badges, :post_id, :integer, {})
   -> 0.0002s
== 20140610012414 AddPostIdToUserBadges: migrated (0.0010s) ===================

== 20140610012833 AddIconToBadges: migrating ==================================
-- add_column(:badges, :icon, :string, {:default=>"fa-certificate"})
   -> 0.0019s
== 20140610012833 AddIconToBadges: migrated (0.0027s) =========================

== 20140610034314 MoveBioToUserProfiles: migrating ============================
-- add_column(:user_profiles, :bio_raw, :text, {})
   -> 0.0003s
-- add_column(:user_profiles, :bio_cooked, :text, {})
   -> 0.0002s
-- execute("UPDATE user_profiles SET bio_raw = subquery.bio_raw, bio_cooked = subquery.bio_cooked FROM (\n      SELECT bio_raw, bio_cooked, id FROM users\n    ) as subquery WHERE user_profiles.user_id = subquery.id")
   -> 0.0004s
-- remove_column(:users, :bio_raw)
   -> 0.0003s
-- remove_column(:users, :bio_cooked)
   -> 0.0003s
== 20140610034314 MoveBioToUserProfiles: migrated (0.0027s) ===================

== 20140612010718 MoveProfileBackgroundToUserProfiles: migrating ==============
-- add_column(:user_profiles, :profile_background, :string, {:limit=>255})
   -> 0.0003s
-- execute("UPDATE user_profiles SET profile_background = (SELECT profile_background FROM users WHERE user_profiles.user_id = users.id)")
   -> 0.0004s
-- remove_column(:users, :profile_background)
   -> 0.0003s
== 20140612010718 MoveProfileBackgroundToUserProfiles: migrated (0.0024s) =====

== 20140617053829 AddNotificationIdToUserBadge: migrating =====================
-- add_column(:user_badges, :notification_id, :integer, {})
   -> 0.0003s
== 20140617053829 AddNotificationIdToUserBadge: migrated (0.0011s) ============

== 20140617080955 RenameRegisteredUsers: migrating ============================
-- execute("update groups set name = 'trust_level_0' where name = 'registered_users' and id = 10")
   -> 0.0003s
== 20140617080955 RenameRegisteredUsers: migrated (0.0012s) ===================

== 20140617193351 AddPostIdIndexOnTopicLinks: migrating =======================
-- add_index(:topic_links, :post_id)
   -> 0.0013s
== 20140617193351 AddPostIdIndexOnTopicLinks: migrated (0.0021s) ==============

== 20140618001820 DontAutoMutoTopics: migrating ===============================
-- execute("DELETE FROM topic_users WHERE notification_level = 0 and notifications_reason_id =7 AND first_visited_at IS NULL")
   -> 0.0004s
-- execute("UPDATE topic_users SET notification_level = 1,\n                                    notifications_reason_id = NULL\n            WHERE notification_level = 0 AND notifications_reason_id =7")
   -> 0.0002s
== 20140618001820 DontAutoMutoTopics: migrated (0.0015s) ======================

== 20140618163511 AddDismissedBannerKeyToUserProfile: migrating ===============
-- add_column(:user_profiles, :dismissed_banner_key, :integer, {:nullable=>true})
   -> 0.0003s
== 20140618163511 AddDismissedBannerKeyToUserProfile: migrated (0.0013s) ======

== 20140620184031 AddHiddenAtToPosts: migrating ===============================
-- add_column(:posts, :hidden_at, :timestamp, {})
   -> 0.0005s
== 20140620184031 AddHiddenAtToPosts: migrated (0.0016s) ======================

== 20140623195618 FixCategoriesConstraint: migrating ==========================
-- index_name(:categories, {:name=>"index_categories_on_parent_category_id_and_name"})
   -> 0.0000s
-- index_name_exists?(:categories, "index_categories_on_parent_category_id_and_name")
   -> 0.0007s
-- remove_index(:categories, {:name=>"index_categories_on_parent_category_id_and_name"})
   -> 0.0003s
-- execute("DELETE FROM categories WHERE id IN (SELECT id FROM (SELECT id, row_number() over (partition BY parent_category_id, name ORDER BY id) AS rnum FROM categories) t WHERE t.rnum > 1)")
   -> 0.0004s
-- execute("CREATE UNIQUE INDEX unique_index_categories_on_name ON categories (COALESCE(parent_category_id, -1), name)")
   -> 0.0004s
== 20140623195618 FixCategoriesConstraint: migrated (0.0028s) =================

== 20140624044600 AddRawDataToSearch: migrating ===============================
-- add_column(:post_search_data, :raw_data, :text, {})
   -> 0.0002s
-- add_column(:user_search_data, :raw_data, :text, {})
   -> 0.0002s
-- add_column(:category_search_data, :raw_data, :text, {})
   -> 0.0002s
-- add_column(:post_search_data, :locale, :string, {})
   -> 0.0002s
-- add_column(:user_search_data, :locale, :text, {})
   -> 0.0002s
-- add_column(:category_search_data, :locale, :text, {})
   -> 0.0002s
== 20140624044600 AddRawDataToSearch: migrated (0.0022s) ======================

== 20140627193814 AddImagesToCategories: migrating ============================
-- add_column(:categories, :logo_url, :string, {})
   -> 0.0003s
-- add_column(:categories, :background_url, :string, {})
   -> 0.0002s
== 20140627193814 AddImagesToCategories: migrated (0.0015s) ===================

== 20140703022838 AddFieldsToBadges: migrating ================================
-- add_column(:badges, :listable, :boolean, {:default=>true})
   -> 0.0020s
-- add_column(:badges, :target_posts, :boolean, {:default=>false})
   -> 0.0021s
-- add_column(:badges, :query, :text, {})
   -> 0.0003s
== 20140703022838 AddFieldsToBadges: migrated (0.0054s) =======================

== 20140705081453 IndexUserBadges: migrating ==================================
-- execute("DELETE FROM user_badges USING user_badges ub2\n             WHERE  user_badges.badge_id = ub2.badge_id AND\n                    user_badges.user_id = ub2.user_id AND\n                    user_badges.post_id IS NOT NULL AND\n                    user_badges.id < ub2.id\n    ")
   -> 0.0005s
-- add_index(:user_badges, [:badge_id, :user_id, :post_id], {:unique=>true, :where=>"post_id IS NOT NULL"})
   -> 0.0013s
== 20140705081453 IndexUserBadges: migrated (0.0027s) =========================

== 20140707071913 AddSelfEditsToPosts: migrating ==============================
-- add_column(:posts, :self_edits, :integer, {:null=>false, :default=>0})
   -> 0.0029s
-- execute("\n    UPDATE posts p SET self_edits = (SELECT COUNT(*) FROM post_revisions pr WHERE pr.post_id = p.id AND pr.user_id=p.user_id)\n    ")
   -> 0.0005s
== 20140707071913 AddSelfEditsToPosts: migrated (0.0044s) =====================

== 20140710005023 AddBadgePostsAndTopicsView: migrating =======================
-- add_column(:categories, :allow_badges, :boolean, {:default=>true, :null=>false})
   -> 0.0029s
-- execute("CREATE VIEW badge_posts AS\n    SELECT p.*\n    FROM posts p\n    JOIN topics t ON t.id = p.topic_id\n    JOIN categories c ON c.id = t.category_id\n    WHERE c.allow_badges AND\n          p.deleted_at IS NULL AND\n          t.deleted_at IS NULL AND\n          t.visible")
   -> 0.0041s
== 20140710005023 AddBadgePostsAndTopicsView: migrated (0.0080s) ==============

== 20140710224658 AddIsQuoteToTopicLinks: migrating ===========================
-- add_column(:topic_links, :quote, :boolean, {:default=>false, :null=>false})
   -> 0.0022s
-- execute("\n    UPDATE topic_links\n    SET quote = true\n    WHERE id IN (\n    SELECT l.id\n      FROM topic_links l\n      JOIN posts p ON p.id = l.post_id\n      JOIN posts lp ON l.link_post_id = lp.id\n      WHERE p.raw LIKE '%[quote=%post:' ||\n            lp.post_number::varchar || ',%topic:' ||\n            lp.topic_id::varchar || '%]%[/quote]%'\n    )")
   -> 0.0010s
== 20140710224658 AddIsQuoteToTopicLinks: migrated (0.0041s) ==================

== 20140711063215 AddReadFaqToUserStats: migrating ============================
-- add_column(:user_stats, :read_faq, :datetime, {})
   -> 0.0003s
== 20140711063215 AddReadFaqToUserStats: migrated (0.0011s) ===================

== 20140711143146 RemoveNotNullFromEmail: migrating ===========================
-- execute("ALTER TABLE invites ALTER COLUMN email DROP NOT NULL")
   -> 0.0003s
== 20140711143146 RemoveNotNullFromEmail: migrated (0.0015s) ==================

== 20140711193923 RemoveEmailInAddressSetting: migrating ======================
== 20140711193923 RemoveEmailInAddressSetting: migrated (0.0014s) =============

== 20140711233329 BadgesOnlyOnPublicCategories: migrating =====================
-- execute("DROP VIEW badge_posts")
   -> 0.0009s
-- execute("CREATE VIEW badge_posts AS\n    SELECT p.*\n    FROM posts p\n    JOIN topics t ON t.id = p.topic_id\n    JOIN categories c ON c.id = t.category_id\n    WHERE c.allow_badges AND\n          p.deleted_at IS NULL AND\n          t.deleted_at IS NULL AND\n          NOT c.read_restricted AND\n          t.visible")
   -> 0.0027s
== 20140711233329 BadgesOnlyOnPublicCategories: migrated (0.0046s) ============

== 20140714060646 AddEnabledToBadges: migrating ===============================
-- add_column(:badges, :enabled, :boolean, {:default=>true, :null=>false})
   -> 0.0020s
== 20140714060646 AddEnabledToBadges: migrated (0.0030s) ======================

== 20140715013018 CorrectPostNumberIndex: migrating ===========================
-- execute("      UPDATE posts SET post_number = post_number + 1\n      WHERE id IN (\n        SELECT p1.id\n        FROM posts p1\n        JOIN\n        (\n          SELECT post_number, topic_id, min(id) min_id\n          FROM posts\n          GROUP BY post_number, topic_id\n          HAVING COUNT(*) > 1\n        ) pp ON p1.topic_id = pp.topic_id AND\n                p1.post_number >= pp.post_number AND\n                p1.id <> pp.min_id\n      )\n")
   -> 0.0006s
-- index_name(:posts, {:column=>[:topic_id, :post_number]})
   -> 0.0000s
-- index_name_exists?(:posts, "index_posts_on_topic_id_and_post_number")
   -> 0.0008s
-- remove_index(:posts, {:column=>[:topic_id, :post_number], :name=>"index_posts_on_topic_id_and_post_number"})
   -> 0.0034s
-- add_index(:posts, [:topic_id, :post_number], {:unique=>true})
   -> 0.0018s
== 20140715013018 CorrectPostNumberIndex: migrated (0.0077s) ==================

== 20140715051412 AddAutoRevokeToBadges: migrating ============================
-- add_column(:badges, :auto_revoke, :boolean, {:default=>true, :null=>false})
   -> 0.0019s
== 20140715051412 AddAutoRevokeToBadges: migrated (0.0028s) ===================

== 20140715055242 AddQuotedPosts: migrating ===================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:quoted_posts, {:id=>:integer})
   -> 0.0012s
-- add_index(:quoted_posts, [:post_id, :quoted_post_id], {:unique=>true})
   -> 0.0012s
-- add_index(:quoted_posts, [:quoted_post_id, :post_id], {:unique=>true})
   -> 0.0013s
-- execute("    SELECT id, cooked\n    FROM posts\n    WHERE raw like '%quote=%' AND id > 0\n    ORDER BY id\n    LIMIT 1000\n")
   -> 0.0004s
== 20140715055242 AddQuotedPosts: migrated (0.0057s) ==========================

== 20140715160720 UpdateUsersCaseInsensitiveEmails: migrating =================
-- execute("DROP INDEX index_users_on_email")
   -> 0.0003s
-- execute("      SELECT id, email, count\n        FROM (SELECT id, email,\n                     row_number() OVER(PARTITION BY lower(email) ORDER BY id asc) AS count\n                FROM users) dups\n      WHERE dups.count > 1\n")
   -> 0.0003s
-- execute("UPDATE users SET email = lower(email)")
   -> 0.0002s
-- execute("CREATE UNIQUE INDEX index_users_on_email ON users ((lower(email)));")
   -> 0.0004s
== 20140715160720 UpdateUsersCaseInsensitiveEmails: migrated (0.0022s) ========

== 20140715190552 RemoveUncategorizedParents: migrating =======================
-- execute("SELECT value FROM site_settings WHERE name = 'uncategorized_category_id'")
   -> 0.0002s
-- execute("UPDATE categories SET parent_category_id = NULL where id = 1")
   -> 0.0004s
== 20140715190552 RemoveUncategorizedParents: migrated (0.0014s) ==============

== 20140716063802 AddBadgeGroupings: migrating ================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:badge_groupings, {:id=>:integer})
   -> 0.0017s
-- add_column(:badges, :badge_grouping_id, :integer, {})
   -> 0.0003s
== 20140716063802 AddBadgeGroupings: migrated (0.0030s) =======================

== 20140717024528 DescriptionOptionalInBadgeGrouping: migrating ===============
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:badge_groupings)
   -> 0.0000s
-- execute("ALTER TABLE \"badge_groupings\" ALTER COLUMN \"description\" TYPE text")
   -> 0.0002s
-- change_column_null(:badge_groupings, :description, true, nil)
   -> 0.0001s
== 20140717024528 DescriptionOptionalInBadgeGrouping: migrated (0.0012s) ======

== 20140718041445 SetDefaultBadgeGrouping: migrating ==========================
-- execute("UPDATE badges SET badge_grouping_id = 5 WHERE badge_grouping_id IS NULL")
   -> 0.0003s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:badges)
   -> 0.0000s
-- execute("ALTER TABLE \"badges\" ALTER COLUMN \"badge_grouping_id\" TYPE integer")
   -> 0.0002s
-- change_column_default(:badges, :badge_grouping_id, 5)
   -> 0.0018s
-- change_column_null(:badges, :badge_grouping_id, false, 5)
   -> 0.0031s
== 20140718041445 SetDefaultBadgeGrouping: migrated (0.0068s) =================

== 20140721063820 AddTriggerToBadges: migrating ===============================
-- add_column(:badges, :trigger, :integer, {})
   -> 0.0003s
== 20140721063820 AddTriggerToBadges: migrated (0.0010s) ======================

== 20140721161249 AddAgreedAtAndAgreedByIdToPostAction: migrating =============
-- add_column(:post_actions, :agreed_at, :datetime, {})
   -> 0.0003s
-- add_column(:post_actions, :agreed_by_id, :integer, {})
   -> 0.0002s
== 20140721161249 AddAgreedAtAndAgreedByIdToPostAction: migrated (0.0014s) ====

== 20140721162307 RenameDeferColumnsOnPostAction: migrating ===================
-- rename_column(:post_actions, :defer_by, :defered_by_id)
   -> 0.0015s
-- add_column(:post_actions, :defered_at, :datetime, {})
   -> 0.0002s
-- execute("UPDATE post_actions SET defered_at = updated_at WHERE defer = 't'")
   -> 0.0004s
-- remove_column(:post_actions, :defer)
   -> 0.0002s
== 20140721162307 RenameDeferColumnsOnPostAction: migrated (0.0031s) ==========

== 20140723011456 AddShowPostsToBadges: migrating =============================
-- add_column(:badges, :show_posts, :boolean, {:null=>false, :default=>false})
   -> 0.0021s
== 20140723011456 AddShowPostsToBadges: migrated (0.0031s) ====================

== 20140725050636 RemoveInvalidIncomingLinks: migrating =======================
-- execute("DELETE FROM incoming_links WHERE url ILIKE '%avatar%.png'")
   -> 0.0005s
== 20140725050636 RemoveInvalidIncomingLinks: migrated (0.0015s) ==============

== 20140725172830 RemoveMessageFromPostAction: migrating ======================
-- remove_column(:post_actions, :message)
   -> 0.0003s
== 20140725172830 RemoveMessageFromPostAction: migrated (0.0011s) =============

== 20140727030954 AddEditHistoryPublicToUsers: migrating ======================
-- add_column(:users, :edit_history_public, :boolean, {:default=>false, :null=>false})
   -> 0.0033s
== 20140727030954 AddEditHistoryPublicToUsers: migrated (0.0043s) =============

== 20140728120708 FixIndexOnPostAction: migrating =============================
-- index_name("post_actions", {:name=>"idx_unique_actions"})
   -> 0.0000s
-- index_name_exists?("post_actions", "idx_unique_actions")
   -> 0.0006s
-- remove_index("post_actions", {:name=>"idx_unique_actions"})
   -> 0.0003s
-- add_index("post_actions", ["user_id", "post_action_type_id", "post_id", "deleted_at", "targets_topic"], {:name=>"idx_unique_actions", :unique=>true})
   -> 0.0012s
== 20140728120708 FixIndexOnPostAction: migrated (0.0033s) ====================

== 20140728144308 AddFirstPostCreatedAtToUserStat: migrating ==================
-- add_column(:user_stats, :first_post_created_at, :datetime, {})
   -> 0.0005s
-- execute("      WITH first_posts AS (\n        SELECT p.id,\n               p.user_id,\n               p.created_at,\n               ROW_NUMBER() OVER (PARTITION BY p.user_id ORDER BY p.created_at ASC) AS row\n          FROM posts p\n      )\n      UPDATE user_stats us\n         SET first_post_created_at = fp.created_at\n        FROM first_posts fp\n       WHERE fp.row = 1\n         AND fp.user_id = us.user_id\n")
   -> 0.0005s
== 20140728144308 AddFirstPostCreatedAtToUserStat: migrated (0.0020s) =========

== 20140728152804 AddPostAndTopicCountsToUserStat: migrating ==================
-- add_column(:user_stats, :post_count, :integer, {:default=>0, :null=>false})
   -> 0.0011s
-- add_column(:user_stats, :topic_count, :integer, {:default=>0, :null=>false})
   -> 0.0010s
-- execute("      UPDATE user_stats\n      SET post_count = pc.count\n      FROM (SELECT user_id, COUNT(*) AS count FROM posts GROUP BY user_id) AS pc\n      WHERE pc.user_id = user_stats.user_id\n")
   -> 0.0004s
-- execute("      UPDATE user_stats\n      SET topic_count = tc.count\n      FROM (SELECT user_id, COUNT(*) AS count FROM topics GROUP BY user_id) AS tc\n      WHERE tc.user_id = user_stats.user_id\n")
   -> 0.0003s
== 20140728152804 AddPostAndTopicCountsToUserStat: migrated (0.0040s) =========

== 20140729092525 RemoveUniqueConstraintFromInvitesIndex: migrating ===========
-- index_name(:invites, {:column=>[:email, :invited_by_id]})
   -> 0.0000s
-- index_name_exists?(:invites, "index_invites_on_email_and_invited_by_id")
   -> 0.0006s
-- remove_index(:invites, {:column=>[:email, :invited_by_id], :name=>"index_invites_on_email_and_invited_by_id"})
   -> 0.0014s
-- add_index(:invites, [:email, :invited_by_id], {:unique=>false})
   -> 0.0012s
== 20140729092525 RemoveUniqueConstraintFromInvitesIndex: migrated (0.0042s) ==

== 20140730203029 AddDisagreedAtAndDisagreedByIdToPostAction: migrating =======
-- add_column(:post_actions, :disagreed_at, :datetime, {})
   -> 0.0003s
-- add_column(:post_actions, :disagreed_by_id, :integer, {})
   -> 0.0003s
-- execute("      UPDATE post_actions\n         SET disagreed_at = deleted_at,\n             disagreed_by_id = deleted_by_id,\n             deleted_at = NULL,\n             deleted_by_id = NULL\n       WHERE deleted_by_id != user_id\n")
   -> 0.0003s
== 20140730203029 AddDisagreedAtAndDisagreedByIdToPostAction: migrated (0.0018s)

== 20140731011328 AddReplyQuotedToPosts: migrating ============================
-- add_column(:posts, :reply_quoted, :boolean, {:null=>false, :default=>false})
   -> 0.0030s
-- execute("UPDATE posts p\n             SET reply_quoted = true\n             WHERE EXISTS(\n               SELECT 1 FROM quoted_posts q\n               JOIN posts p1 ON p1.post_number = p.reply_to_post_number AND p1.topic_id = p.topic_id\n               WHERE q.post_id = p.id AND q.quoted_post_id = p1.id\n             ) AND p.reply_to_post_number IS NOT NULL")
   -> 0.0008s
== 20140731011328 AddReplyQuotedToPosts: migrated (0.0050s) ===================

== 20140801052028 FixIncomingLinks: migrating =================================
-- execute("DROP INDEX incoming_index")
   -> 0.0002s
-- add_column(:incoming_links, :post_id, :integer, {})
   -> 0.0002s
-- remove_column(:incoming_links, :updated_at)
   -> 0.0002s
-- remove_column(:incoming_links, :url)
   -> 0.0002s
-- execute("UPDATE incoming_links l SET post_id = (\n      SELECT p.id FROM posts p WHERE p.topic_id = l.topic_id AND p.post_number = l.post_number\n    )")
   -> 0.0006s
-- execute("DELETE FROM incoming_links WHERE post_id IS NULL")
   -> 0.0002s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:incoming_links)
   -> 0.0000s
-- execute("ALTER TABLE \"incoming_links\" ALTER COLUMN \"post_id\" TYPE integer")
   -> 0.0002s
-- change_column_null(:incoming_links, :post_id, false, nil)
   -> 0.0002s
-- add_index(:incoming_links, :post_id)
   -> 0.0015s
== 20140801052028 FixIncomingLinks: migrated (0.0051s) ========================

== 20140801170444 CreatePostTimingsUserIndex: migrating =======================
-- add_index(:post_timings, :user_id)
   -> 0.0018s
== 20140801170444 CreatePostTimingsUserIndex: migrated (0.0030s) ==============

== 20140804010803 IncomingLinkNormalization: migrating ========================
-- remove_column(:incoming_links, :post_number)
   -> 0.0010s
-- remove_column(:incoming_links, :domain)
   -> 0.0004s
-- add_column(:incoming_links, :incoming_referer_id, :integer, {})
   -> 0.0003s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:incoming_referers, {:id=>:integer})
   -> 0.0018s
-- execute("INSERT INTO incoming_referers(url, https, domain, port, path)\n             SELECT referer,\n                    CASE WHEN a[1] = 's' THEN true ELSE false END,\n                    a[2] as domain,\n                    CASE WHEN a[1] = 's' THEN\n                      COALESCE(a[4]::integer, 443)::integer\n                    ELSE\n                      COALESCE(a[4]::integer, 80)::integer\n                    END,\n                    COALESCE(a[5], '') path\n             FROM\n            (\n              SELECT referer, regexp_matches(referer, 'http(s)?://([^/:]+)(:(d+))?(.*)') a\n              FROM\n              (\n               SELECT DISTINCT referer\n               FROM incoming_links WHERE referer ~ '^https?://.+'\n              ) Z\n            ) X\n          WHERE a[2] IS NOT NULL")
   -> 0.0007s
-- execute("UPDATE incoming_links l\n    SET incoming_referer_id = r.id\n    FROM incoming_referers r\n    WHERE r.url = l.referer")
   -> 0.0003s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:incoming_domains, {:id=>:integer})
   -> 0.0017s
-- execute("INSERT INTO incoming_domains(name, port, https)\n    SELECT DISTINCT domain, port, https\n    FROM incoming_referers")
   -> 0.0003s
-- execute("UPDATE incoming_referers l\n    SET incoming_domain_id = d.id\n    FROM incoming_domains d\n    WHERE d.name = l.domain AND d.https = l.https AND d.port = l.port")
   -> 0.0003s
-- remove_column(:incoming_referers, :domain)
   -> 0.0006s
-- remove_column(:incoming_referers, :port)
   -> 0.0003s
-- remove_column(:incoming_referers, :https)
   -> 0.0002s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:incoming_referers)
   -> 0.0000s
-- execute("ALTER TABLE \"incoming_referers\" ALTER COLUMN \"incoming_domain_id\" TYPE integer")
   -> 0.0002s
-- change_column_null(:incoming_referers, :incoming_domain_id, false, nil)
   -> 0.0003s
-- add_index(:incoming_referers, [:path, :incoming_domain_id], {:unique=>true})
   -> 0.0015s
-- add_index(:incoming_domains, [:name, :https, :port], {:unique=>true})
   -> 0.0022s
-- remove_column(:incoming_links, :referer)
   -> 0.0003s
== 20140804010803 IncomingLinkNormalization: migrated (0.0149s) ===============

== 20140804030041 RemoveUrlFromIncomingReferer: migrating =====================
-- remove_column(:incoming_referers, :url)
   -> 0.0003s
== 20140804030041 RemoveUrlFromIncomingReferer: migrated (0.0013s) ============

== 20140804060439 DropTopicIdFromIncomingLinks: migrating =====================
-- remove_column(:incoming_links, :topic_id)
   -> 0.0003s
== 20140804060439 DropTopicIdFromIncomingLinks: migrated (0.0015s) ============

== 20140804072504 ViewsToTopicViews: migrating ================================
-- remove_column(:views, :parent_type)
   -> 0.0005s
-- rename_column(:views, :parent_id, :topic_id)
   -> 0.0012s
-- rename_table(:views, :topic_views)
   -> 0.0025s
-- add_index(:topic_views, [:topic_id])
   -> 0.0014s
-- add_index(:topic_views, [:user_id, :topic_id])
   -> 0.0022s
== 20140804072504 ViewsToTopicViews: migrated (0.0092s) =======================

== 20140804075613 NormalizeTopicViewDataAndIndex: migrating ===================
-- index_name(:topic_views, {:column=>[:topic_id]})
   -> 0.0000s
-- index_name_exists?(:topic_views, "index_topic_views_on_topic_id")
   -> 0.0006s
-- remove_index(:topic_views, {:column=>[:topic_id], :name=>"index_topic_views_on_topic_id"})
   -> 0.0015s
-- index_name(:topic_views, {:column=>[:user_id, :topic_id]})
   -> 0.0000s
-- index_name_exists?(:topic_views, "index_topic_views_on_user_id_and_topic_id")
   -> 0.0008s
-- remove_index(:topic_views, {:column=>[:user_id, :topic_id], :name=>"index_topic_views_on_user_id_and_topic_id"})
   -> 0.0013s
-- execute("CREATE TEMPORARY TABLE tmp_views_user(user_id int, topic_id int, viewed_at date, ip_address inet)")
   -> 0.0008s
-- execute("INSERT INTO tmp_views_user(user_id, topic_id, ip_address, viewed_at)\n      SELECT user_id, topic_id, min(ip_address::varchar)::inet, min(viewed_at)\n      FROM topic_views\n      WHERE user_id IS NOT NULL\n      GROUP BY user_id, topic_id\n    ")
   -> 0.0003s
-- execute("CREATE TEMPORARY TABLE tmp_views_ip(topic_id int, viewed_at date, ip_address inet)")
   -> 0.0007s
-- execute("INSERT INTO tmp_views_ip(topic_id, ip_address, viewed_at)\n      SELECT topic_id, ip_address, min(viewed_at)\n      FROM topic_views\n      WHERE user_id IS NULL\n      GROUP BY user_id, topic_id, ip_address\n    ")
   -> 0.0004s
-- execute("truncate table topic_views")
   -> 0.0004s
-- execute("INSERT INTO topic_views(user_id, topic_id, ip_address, viewed_at)\n    SELECT user_id, topic_id, ip_address, viewed_at FROM tmp_views_user\n    UNION ALL\n    SELECT NULL, topic_id, ip_address, viewed_at FROM tmp_views_ip\n    ")
   -> 0.0003s
-- execute("CREATE UNIQUE INDEX user_id_topic_id_topic_views ON topic_views(user_id, topic_id) WHERE user_id IS NOT NULL")
   -> 0.0004s
-- execute("CREATE UNIQUE INDEX ip_address_topic_id_topic_views ON topic_views(ip_address, topic_id) WHERE user_id IS NULL")
   -> 0.0004s
-- add_index(:topic_views, [:topic_id, :viewed_at])
   -> 0.0013s
-- add_index(:topic_views, [:viewed_at, :topic_id])
   -> 0.0020s
== 20140804075613 NormalizeTopicViewDataAndIndex: migrated (0.0127s) ==========

== 20140805061612 AddBioCookedVersionToUserProfile: migrating =================
-- add_column(:user_profiles, :bio_cooked_version, :integer, {})
   -> 0.0003s
-- add_index(:user_profiles, [:bio_cooked_version])
   -> 0.0013s
== 20140805061612 AddBioCookedVersionToUserProfile: migrated (0.0025s) ========

== 20140806003116 FixupBadgeIds: migrating ====================================
-- add_column(:badges, :system, :boolean, {:default=>false, :null=>false})
   -> 0.0025s
== 20140806003116 FixupBadgeIds: migrated (0.0035s) ===========================

== 20140807033123 AddIndexOnLastSeenToUsers: migrating ========================
-- add_index(:users, [:last_seen_at])
   -> 0.0015s
== 20140807033123 AddIndexOnLastSeenToUsers: migrated (0.0026s) ===============

== 20140808051823 CreateTopicSearchIndex: migrating ===========================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:topic_search_data, {:id=>false})
   -> 0.0049s
-- execute("CREATE INDEX idx_search_topic ON topic_search_data USING gin (search_data)")
   -> 0.0006s
== 20140808051823 CreateTopicSearchIndex: migrated (0.0068s) ==================

== 20140809224243 AddUserBadgeUniqueIndex: migrating ==========================
-- add_column(:user_badges, :seq, :integer, {:default=>0, :null=>false})
   -> 0.0016s
-- execute("\n      UPDATE user_badges ub1 SET seq = X.seq\n      FROM (\n        SELECT ub.id, rank() OVER (PARTITION BY user_id ORDER BY granted_at) seq\n        FROM user_badges ub\n        JOIN badges b ON b.id = ub.badge_id\n        WHERE b.multiple_grant\n      ) X\n      WHERE ub1.id = X.id\n    ")
   -> 0.0008s
-- execute("\n      DELETE FROM user_badges ub1\n      WHERE ub1.id NOT IN (\n        SELECT MIN(ub.id)\n        FROM user_badges ub\n        GROUP BY ub.user_id, ub.badge_id, ub.seq\n      )\n    ")
   -> 0.0004s
-- add_index(:user_badges, [:badge_id, :user_id, :seq], {:unique=>true, :where=>"post_id IS NULL"})
   -> 0.0017s
== 20140809224243 AddUserBadgeUniqueIndex: migrated (0.0058s) =================

== 20140811094300 RenameDeferedColumnsOnPostAction: migrating =================
-- rename_column(:post_actions, :defered_by_id, :deferred_by_id)
   -> 0.0016s
-- rename_column(:post_actions, :defered_at, :deferred_at)
   -> 0.0020s
== 20140811094300 RenameDeferedColumnsOnPostAction: migrated (0.0053s) ========

== 20140813175357 AddDefaultToActive: migrating ===============================
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:users)
   -> 0.0000s
-- execute("ALTER TABLE \"users\" ALTER COLUMN \"active\" TYPE boolean")
   -> 0.0003s
-- change_column_default(:users, :active, false)
   -> 0.0023s
-- change_column_null(:users, :active, false, false)
   -> 0.0032s
== 20140813175357 AddDefaultToActive: migrated (0.0070s) ======================

== 20140815183851 FixIndexOnPostActions: migrating ============================
-- execute("UPDATE post_actions SET targets_topic = false WHERE targets_topic IS NULL")
   -> 0.0002s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:post_actions)
   -> 0.0000s
-- execute("ALTER TABLE \"post_actions\" ALTER COLUMN \"targets_topic\" TYPE boolean")
   -> 0.0010s
-- change_column_default(:post_actions, :targets_topic, false)
   -> 0.0016s
-- change_column_null(:post_actions, :targets_topic, false, false)
   -> 0.0017s
-- execute("\n    DELETE FROM post_actions pa\n                    USING post_actions x\n    WHERE pa.user_id = x.user_id AND\n          pa.post_action_type_id = x.post_action_type_id AND\n          pa.post_id = x.post_id AND\n          pa.targets_topic = x.targets_topic AND\n          pa.id < x.id AND\n          pa.deleted_at IS NULL AND\n          x.deleted_at IS NULL\n    ")
   -> 0.0005s
-- index_name("post_actions", {:name=>"idx_unique_actions"})
   -> 0.0000s
-- index_name_exists?("post_actions", "idx_unique_actions")
   -> 0.0006s
-- remove_index("post_actions", {:name=>"idx_unique_actions"})
   -> 0.0003s
-- add_index("post_actions", ["user_id", "post_action_type_id", "post_id", "targets_topic"], {:name=>"idx_unique_actions", :unique=>true, :where=>"deleted_at IS NULL"})
   -> 0.0012s
== 20140815183851 FixIndexOnPostActions: migrated (0.0084s) ===================

== 20140815191556 FixPostActionsIndexAgain: migrating =========================
-- index_name("post_actions", {:name=>"idx_unique_actions"})
   -> 0.0000s
-- index_name_exists?("post_actions", "idx_unique_actions")
   -> 0.0005s
-- remove_index("post_actions", {:name=>"idx_unique_actions"})
   -> 0.0002s
-- add_index("post_actions", ["user_id", "post_action_type_id", "post_id", "targets_topic"], {:name=>"idx_unique_actions", :unique=>true, :where=>"deleted_at IS NULL AND disagreed_at IS NULL AND deferred_at IS NULL"})
   -> 0.0011s
== 20140815191556 FixPostActionsIndexAgain: migrated (0.0027s) ================

== 20140815215618 AddNameLowerToCategories: migrating =========================
-- add_column(:categories, :name_lower, :string, {:limit=>50})
   -> 0.0002s
-- execute("update categories set name_lower = lower(name)")
   -> 0.0002s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:categories)
   -> 0.0000s
-- execute("ALTER TABLE \"categories\" ALTER COLUMN \"name_lower\" TYPE character varying(50)")
   -> 0.0002s
-- change_column_null(:categories, :name_lower, false, nil)
   -> 0.0001s
== 20140815215618 AddNameLowerToCategories: migrated (0.0018s) ================

== 20140817011612 AddExternalAvatarUrlToSingleSignOnRecord: migrating =========
-- add_column(:single_sign_on_records, :external_avatar_url, :string, {})
   -> 0.0003s
== 20140817011612 AddExternalAvatarUrlToSingleSignOnRecord: migrated (0.0010s)

== 20140818023700 IndexEmailTokens: migrating =================================
-- add_index(:email_tokens, [:user_id])
   -> 0.0011s
== 20140818023700 IndexEmailTokens: migrated (0.0018s) ========================

== 20140826234625 RenameSettingsPop3sToPop3: migrating ========================
-- execute("UPDATE site_settings SET name = replace(name, 'pop3s', 'pop3') WHERE name ILIKE 'pop3%'")
   -> 0.0002s
== 20140826234625 RenameSettingsPop3sToPop3: migrated (0.0013s) ===============

== 20140827044811 RemoveNullableDates: migrating ==============================
-- execute("DROP VIEW badge_posts")
   -> 0.0006s
-- execute("select table_name, column_name from information_schema.columns\n           WHERE  column_name IN ('created_at','updated_at') AND\n                  table_schema = 'public' AND\n                  is_nullable = 'YES' AND\n                  is_updatable = 'YES' AND\n                  data_type = 'timestamp without time zone'")
   -> 0.0044s
-- execute("UPDATE \"message_bus\" SET created_at = CURRENT_TIMESTAMP WHERE created_at IS NULL")
   -> 0.0003s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:message_bus)
   -> 0.0000s
-- execute("ALTER TABLE \"message_bus\" ALTER COLUMN \"created_at\" TYPE timestamp")
   -> 0.0004s
-- change_column_null(:message_bus, :created_at, false, nil)
   -> 0.0001s
-- execute("CREATE VIEW badge_posts AS\n    SELECT p.*\n    FROM posts p\n    JOIN topics t ON t.id = p.topic_id\n    JOIN categories c ON c.id = t.category_id\n    WHERE c.allow_badges AND\n          p.deleted_at IS NULL AND\n          t.deleted_at IS NULL AND\n          NOT c.read_restricted AND\n          t.visible")
   -> 0.0062s
== 20140827044811 RemoveNullableDates: migrated (0.0132s) =====================

== 20140828172407 CreatePermalinks: migrating =================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:permalinks, {:id=>:integer})
   -> 0.0015s
-- add_index(:permalinks, :url)
   -> 0.0011s
== 20140828172407 CreatePermalinks: migrated (0.0035s) ========================

== 20140828200231 MakeUrlColBiggerInPermalinks: migrating =====================
-- index_name(:permalinks, {:column=>:url})
   -> 0.0000s
-- index_name_exists?(:permalinks, "index_permalinks_on_url")
   -> 0.0005s
-- remove_index(:permalinks, {:column=>:url, :name=>"index_permalinks_on_url"})
   -> 0.0011s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:permalinks)
   -> 0.0000s
-- execute("ALTER TABLE \"permalinks\" ALTER COLUMN \"url\" TYPE character varying(1000)")
   -> 0.0012s
-- change_column_null(:permalinks, :url, false, nil)
   -> 0.0001s
-- add_index(:permalinks, :url, {:unique=>true})
   -> 0.0009s
== 20140828200231 MakeUrlColBiggerInPermalinks: migrated (0.0048s) ============

== 20140831191346 RemoveCategoryGroupsOrphanedByRemovingCategoryOrGroup: migrating
-- execute("DELETE FROM category_groups\n             WHERE group_id NOT IN (\n                 SELECT groups.id FROM groups)\n              OR category_id NOT IN (\n                 SELECT categories.id FROM categories)")
   -> 0.0003s
== 20140831191346 RemoveCategoryGroupsOrphanedByRemovingCategoryOrGroup: migrated (0.0011s)

== 20140904055702 CorrectPostActionIndex: migrating ===========================
-- execute("DELETE FROM post_actions pa\n                    USING post_actions pa2\n             WHERE pa.post_action_type_id IN (3,4,7,8) AND\n                   pa2.post_action_type_id IN (3,4,7,8) AND\n                   pa.deleted_at IS NULL AND\n                   pa2.deleted_at IS NULL AND\n                   pa.disagreed_at IS NULL AND\n                   pa2.disagreed_at IS NULL AND\n                   pa.deferred_at IS NULL AND\n                   pa2.deferred_at IS NULL AND\n                   pa.id < pa2.id AND\n                   pa.user_id = pa2.user_id AND\n                   pa.post_id = pa2.post_id AND\n                   pa.targets_topic = pa2.targets_topic")
   -> 0.0005s

>> DELETED 0 invalid rows from post_actions

-- add_index(:post_actions, ["user_id", "post_id", "targets_topic"], {:name=>"idx_unique_flags", :unique=>true, :where=>"deleted_at IS NULL AND\n                        disagreed_at IS NULL AND\n                        deferred_at IS NULL AND\n                        post_action_type_id IN (3,4,7,8)"})
   -> 0.0013s
== 20140904055702 CorrectPostActionIndex: migrated (0.0028s) ==================

== 20140904160015 AddViaEmailToPosts: migrating ===============================
-- add_column(:posts, :via_email, :boolean, {:default=>false, :null=>false})
   -> 0.0024s
== 20140904160015 AddViaEmailToPosts: migrated (0.0032s) ======================

== 20140904215629 RenameTrustLevelSettings: migrating =========================
-- execute("UPDATE site_settings\n             SET name = regexp_replace(name, '^basic_', 'tl1_')")
   -> 0.0002s
-- execute("UPDATE site_settings\n             SET name = regexp_replace(name, '^regular_', 'tl2_')")
   -> 0.0001s
-- execute("UPDATE site_settings\n             SET name = regexp_replace(name, '^leader_', 'tl3_')")
   -> 0.0001s
== 20140904215629 RenameTrustLevelSettings: migrated (0.0012s) ================

== 20140905055251 RenameTrustLevelBadges: migrating ===========================
-- execute("UPDATE badges SET name = 'Member' WHERE name = 'Regular User' AND id = 2")
   -> 0.0002s
-- execute("UPDATE badges SET name = 'Regular' WHERE name = 'Leader' AND id = 3")
   -> 0.0002s
-- execute("UPDATE badges SET name = 'Leader' WHERE name = 'Elder' AND id = 4")
   -> 0.0001s
== 20140905055251 RenameTrustLevelBadges: migrated (0.0014s) ==================

== 20140905171733 CreateWarnings: migrating ===================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:warnings, {:id=>:integer})
   -> 0.0011s
-- add_index(:warnings, :user_id)
   -> 0.0010s
-- add_index(:warnings, :topic_id, {:unique=>true})
   -> 0.0010s
== 20140905171733 CreateWarnings: migrated (0.0041s) ==========================

== 20140908165716 MigrateWarningTopicSubtypes: migrating ======================
-- execute("UPDATE topics AS t\n              SET subtype = 'moderator_warning'\n              FROM warnings AS w\n              WHERE w.topic_id = t.id")
   -> 0.0008s
== 20140908165716 MigrateWarningTopicSubtypes: migrated (0.0017s) =============

== 20140908191429 TrimProfileLength: migrating ================================
-- execute("UPDATE user_profiles SET bio_raw=LEFT(bio_raw, 3000)")
   -> 0.0003s
== 20140908191429 TrimProfileLength: migrated (0.0011s) =======================

== 20140910130155 CreateTopicUserIndex: migrating =============================
-- add_index(:topic_users, [:user_id, :topic_id], {:unique=>true})
   -> 0.0010s
== 20140910130155 CreateTopicUserIndex: migrated (0.0018s) ====================

== 20140911065449 PrivateMessagesHaveNoCategoryId: migrating ==================
-- execute("UPDATE topics SET category_id = NULL WHERE category_id IS NOT NULL AND archetype = 'private_message'")
   -> 0.0002s
-- execute("ALTER TABLE topics ADD CONSTRAINT pm_has_no_category CHECK (category_id IS NULL OR archetype <> 'private_message')")
   -> 0.0004s
== 20140911065449 PrivateMessagesHaveNoCategoryId: migrated (0.0013s) =========

== 20140913192733 AddTrustLevelLockedColumn: migrating ========================
-- add_column(:users, :trust_level_locked, :boolean, {:default=>false, :null=>false})
   -> 0.0031s
-- execute("          UPDATE users\n          SET trust_level_locked = 't'\n          WHERE trust_level = 4\n")
   -> 0.0003s
== 20140913192733 AddTrustLevelLockedColumn: migrated (0.0042s) ===============

== 20140923042349 AddRetainHoursToUploads: migrating ==========================
-- add_column(:uploads, :retain_hours, :integer, {})
   -> 0.0003s
== 20140923042349 AddRetainHoursToUploads: migrated (0.0012s) =================

== 20140924192418 RenameContentType: migrating ================================
-- rename_column(:site_contents, :content_type, :text_type)
   -> 0.0016s
-- rename_column(:site_contents, :content, :value)
   -> 0.0012s
-- rename_table(:site_contents, :site_texts)
   -> 0.0026s
== 20140924192418 RenameContentType: migrated (0.0063s) =======================

== 20140925173220 CreateUserFields: migrating =================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:user_fields, {:id=>:integer})
   -> 0.0013s
== 20140925173220 CreateUserFields: migrated (0.0021s) ========================

== 20140929181930 AddEditableToUserFields: migrating ==========================
-- add_column(:user_fields, :editable, :boolean, {:default=>false, :null=>false})
   -> 0.0015s
== 20140929181930 AddEditableToUserFields: migrated (0.0023s) =================

== 20140929204155 MigrateTosSetting: migrating ================================
-- execute("SELECT * FROM site_settings WHERE name = 'tos_accept_required' AND value = 't'")
   -> 0.0002s
== 20140929204155 MigrateTosSetting: migrated (0.0012s) =======================

== 20141001101041 AddPostIdToUserHistories: migrating =========================
-- add_column(:user_histories, :post_id, :integer, {})
   -> 0.0003s
== 20141001101041 AddPostIdToUserHistories: migrated (0.0012s) ================

== 20141002181613 AddDescriptionToUserFields: migrating =======================
-- add_column(:user_fields, :description, :string, {:null=>true})
   -> 0.0002s
-- execute("UPDATE user_fields SET description=name")
   -> 0.0002s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:user_fields)
   -> 0.0000s
-- execute("ALTER TABLE \"user_fields\" ALTER COLUMN \"description\" TYPE character varying")
   -> 0.0002s
-- change_column_null(:user_fields, :description, false, nil)
   -> 0.0001s
== 20141002181613 AddDescriptionToUserFields: migrated (0.0018s) ==============

== 20141007224814 AddBadgeGrantedTitleToUserProfile: migrating ================
-- add_column(:user_profiles, :badge_granted_title, :boolean, {:default=>false})
   -> 0.0020s
-- execute("UPDATE user_profiles SET badge_granted_title = true\n    WHERE EXISTS (\n      SELECT 1 FROM users WHERE users.id = user_id AND title IN ('Leader', 'Regular')\n    )")
   -> 0.0007s
-- execute("UPDATE user_profiles SET badge_granted_title = true\n    WHERE EXISTS (\n      SELECT 1 FROM users WHERE users.id = user_id AND title IN (SELECT name FROM badges WHERE allow_title)\n    )")
   -> 0.0003s
== 20141007224814 AddBadgeGrantedTitleToUserProfile: migrated (0.0039s) =======

== 20141008152953 AddExernalUrlToPermalinks: migrating ========================
-- add_column(:permalinks, :external_url, :string, {:limit=>1000})
   -> 0.0003s
== 20141008152953 AddExernalUrlToPermalinks: migrated (0.0010s) ===============

== 20141008181228 AddRequiredSignupToUserFields: migrating ====================
-- add_column(:user_fields, :required, :boolean, {:default=>true, :null=>false})
   -> 0.0014s
== 20141008181228 AddRequiredSignupToUserFields: migrated (0.0022s) ===========

== 20141008192525 AddAutoCloseBasedOnLastPostAndAutoCloseHoursToTopics: migrating
-- add_column(:topics, :auto_close_based_on_last_post, :boolean, {:default=>false})
   -> 0.0029s
-- add_column(:topics, :auto_close_hours, :float, {})
   -> 0.0002s
== 20141008192525 AddAutoCloseBasedOnLastPostAndAutoCloseHoursToTopics: migrated (0.0040s)

== 20141008192526 AddAutoCloseBasedOnLastPostToCategories: migrating ==========
-- add_column(:categories, :auto_close_based_on_last_post, :boolean, {:default=>false})
   -> 0.0024s
== 20141008192526 AddAutoCloseBasedOnLastPostToCategories: migrated (0.0033s) =

== 20141014032859 AddHiddenToPostRevision: migrating ==========================
-- add_column(:post_revisions, :hidden, :boolean, {:null=>false, :default=>false})
   -> 0.0017s
== 20141014032859 AddHiddenToPostRevision: migrated (0.0025s) =================

== 20141014191645 FixTosName: migrating =======================================
-- execute("UPDATE user_fields SET name = 'Terms of Service' WHERE name = 'I have read and accept the <a href=\"/tos\" target=\"_blank\">Terms of Service</a>.'")
   -> 0.0003s
== 20141014191645 FixTosName: migrated (0.0015s) ==============================

== 20141015060145 AddRawEmailToPosts: migrating ===============================
-- add_column(:posts, :raw_email, :text, {})
   -> 0.0006s
== 20141015060145 AddRawEmailToPosts: migrated (0.0015s) ======================

== 20141016183307 AddExpansionBackgroundToUserProfiles: migrating =============
-- add_column(:user_profiles, :expansion_background, :string, {:limit=>255})
   -> 0.0003s
== 20141016183307 AddExpansionBackgroundToUserProfiles: migrated (0.0010s) ====

== 20141020153415 AddPublicVersionToPosts: migrating ==========================
-- add_column(:posts, :public_version, :integer, {:null=>false, :default=>1})
   -> 0.0027s
-- execute("      UPDATE posts\n         SET public_version = 1 + (SELECT COUNT(*) FROM post_revisions pr WHERE post_id = posts.id AND pr.hidden = 'f')\n       WHERE public_version <> 1 + (SELECT COUNT(*) FROM post_revisions pr WHERE post_id = posts.id AND pr.hidden = 'f')\n")
   -> 0.0005s
== 20141020153415 AddPublicVersionToPosts: migrated (0.0040s) =================

== 20141020154935 RenameExpansionToCard: migrating ============================
-- rename_column(:user_profiles, :expansion_background, :card_background)
   -> 0.0011s
== 20141020154935 RenameExpansionToCard: migrated (0.0019s) ===================

== 20141020164816 AddImageToBadges: migrating =================================
-- add_column(:badges, :image, :string, {:limit=>255})
   -> 0.0002s
== 20141020164816 AddImageToBadges: migrated (0.0012s) ========================

== 20141020174120 AddCardImageToUserProfiles: migrating =======================
-- add_column(:user_profiles, :card_image_badge_id, :integer, {})
   -> 0.0004s
== 20141020174120 AddCardImageToUserProfiles: migrated (0.0016s) ==============

== 20141030222425 RenameSeenPostCount: migrating ==============================
-- rename_column(:topic_users, :seen_post_count, :highest_seen_post_number)
   -> 0.0015s
== 20141030222425 RenameSeenPostCount: migrated (0.0023s) =====================

== 20141110150304 AddFooterToSiteCustomization: migrating =====================
-- add_column(:site_customizations, :footer, :text, {})
   -> 0.0003s
-- add_column(:site_customizations, :mobile_footer, :text, {})
   -> 0.0002s
== 20141110150304 AddFooterToSiteCustomization: migrated (0.0014s) ============

== 20141118011735 CorrectUsernameSearch: migrating ============================
-- execute("update user_search_data\n              set search_data = TO_TSVECTOR('simple', username_lower || ' ' || lower(name))\n            from users\n            where users.id = user_search_data.user_id")
   -> 0.0004s
== 20141118011735 CorrectUsernameSearch: migrated (0.0012s) ===================

== 20141120035016 AddAllowedIpsToApiKeys: migrating ===========================
-- change_table(:api_keys, {})
   -> 0.0006s
== 20141120035016 AddAllowedIpsToApiKeys: migrated (0.0013s) ==================

== 20141120043401 AddHiddenToApiKeys: migrating ===============================
-- change_table(:api_keys, {})
   -> 0.0017s
== 20141120043401 AddHiddenToApiKeys: migrated (0.0025s) ======================

== 20141211114517 FixEmojiPath: migrating =====================================
-- execute("      UPDATE posts\n         SET cooked = REPLACE(cooked, '/plugins/emoji/images/', '/plugins/emoji/images/emoji_one/')\n       WHERE cooked LIKE '%/plugins/emoji/images/%'\n")
   -> 0.0006s
== 20141211114517 FixEmojiPath: migrated (0.0019s) ============================

== 20141216112341 ResolveDuplicateGroupNames: migrating =======================
== 20141216112341 ResolveDuplicateGroupNames: migrated (0.0024s) ==============

== 20141222051622 RemoveOverrideDefaultStylesFromSiteCustomizations: migrating
-- remove_column(:site_customizations, :override_default_style)
   -> 0.0003s
== 20141222051622 RemoveOverrideDefaultStylesFromSiteCustomizations: migrated (0.0011s)

== 20141222224220 FixEmojiPathTake2: migrating ================================
-- execute("      UPDATE posts\n         SET cooked = REPLACE(cooked, '/plugins/emoji/images/', '/images/emoji/')\n       WHERE cooked LIKE '%/plugins/emoji/images/%'\n")
   -> 0.0002s
== 20141222224220 FixEmojiPathTake2: migrated (0.0010s) =======================

== 20141222230707 AmendSiteCustomization: migrating ===========================
-- remove_column(:site_customizations, :position)
   -> 0.0002s
== 20141222230707 AmendSiteCustomization: migrated (0.0009s) ==================

== 20141223145058 CreateCsvExportLogs: migrating ==============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:csv_export_logs, {:id=>:integer})
   -> 0.0014s
== 20141223145058 CreateCsvExportLogs: migrated (0.0022s) =====================

== 20141228151019 RenameCsvExportLogsToUserExports: migrating =================
-- rename_table(:csv_export_logs, :user_exports)
   -> 0.0031s
== 20141228151019 RenameCsvExportLogsToUserExports: migrated (0.0041s) ========

== 20150102113309 CleanUpUserHistory: migrating ===============================
== 20150102113309 CleanUpUserHistory: migrated (0.0026s) ======================

== 20150106215342 RemoveStars: migrating ======================================
-- execute("    INSERT INTO post_actions(user_id, post_id, post_action_type_id, created_at, updated_at)\n    SELECT tu.user_id, p.id, 1, coalesce(tu.starred_at, now()), coalesce(tu.starred_at, now())\n    FROM topic_users tu\n    JOIN posts p ON p.topic_id = tu.topic_id AND p.post_number = 1\n    LEFT JOIN post_actions pa ON\n        pa.post_id = p.id AND\n        pa.user_id = tu.user_id AND\n        pa.post_action_type_id = 1\n    WHERE pa.post_id IS NULL AND tu.starred\n")
   -> 0.0007s
0 stars were converted to bookmarks!
-- execute("   DELETE FROM user_actions WHERE action_type = 10\n")
   -> 0.0002s
-- remove_column(:topic_users, :starred)
   -> 0.0003s
-- remove_column(:topic_users, :starred_at)
   -> 0.0001s
-- remove_column(:topic_users, :unstarred_at)
   -> 0.0002s
-- remove_column(:topics, :star_count)
   -> 0.0003s
== 20150106215342 RemoveStars: migrated (0.0028s) =============================

== 20150108002354 AddLikedAndBookmarkedToTopicUser: migrating =================
-- add_column(:topic_users, :liked, :boolean, {:default=>false})
   -> 0.0014s
-- add_column(:topic_users, :bookmarked, :boolean, {:default=>false})
   -> 0.0012s
-- execute("UPDATE topic_users\n               SET liked = true\n               WHERE EXISTS (SELECT 1 FROM post_actions pa\n                             JOIN posts p ON p.id = pa.post_id\n                             JOIN topics t ON t.id = p.topic_id\n                             WHERE pa.deleted_at IS NULL AND\n                                   p.deleted_at IS NULL AND\n                                   t.deleted_at IS NULL AND\n                                   pa.user_id = topic_users.user_id AND\n                                   p.topic_id = topic_users.topic_id AND\n                                   post_action_type_id = 2)\n    ")
   -> 0.0010s
-- execute("UPDATE topic_users\n               SET bookmarked = true\n               WHERE EXISTS (SELECT 1 FROM post_actions pa\n                             JOIN posts p ON p.id = pa.post_id\n                             JOIN topics t ON t.id = p.topic_id\n                             WHERE pa.deleted_at IS NULL AND\n                                   p.deleted_at IS NULL AND\n                                   t.deleted_at IS NULL AND\n                                   pa.user_id = topic_users.user_id AND\n                                   p.topic_id = topic_users.topic_id AND\n                                   post_action_type_id = 1)\n    ")
   -> 0.0007s
== 20150108002354 AddLikedAndBookmarkedToTopicUser: migrated (0.0054s) ========

== 20150108202057 CreateBookmarkActions: migrating ============================
-- execute("INSERT INTO user_actions (action_type,\n                                       user_id,\n                                       target_topic_id,\n                                       target_post_id,\n                                       acting_user_id,\n                                       created_at,\n                                       updated_at)\n             SELECT DISTINCT 3,\n                    pa.user_id,\n                    p.topic_id,\n                    pa.post_id,\n                    pa.user_id,\n                    pa.created_at,\n                    pa.updated_at\n             FROM post_actions AS pa\n             INNER JOIN posts AS p ON p.id = pa.post_id AND p.post_number = 1\n             WHERE NOT EXISTS (SELECT 1 FROM user_actions AS ua WHERE ua.target_post_id = pa.post_id AND ua.action_type = 3 AND ua.user_id = pa.user_id)\n             AND pa.post_action_type_id = 1\n             AND pa.deleted_at IS NULL")
   -> 0.0008s
== 20150108202057 CreateBookmarkActions: migrated (0.0019s) ===================

== 20150108211557 IndexTopicCustomFieldValues: migrating ======================
-- add_index(:topic_custom_fields, :value)
   -> 0.0012s
== 20150108211557 IndexTopicCustomFieldValues: migrated (0.0031s) =============

== 20150108221703 GroupManagers: migrating ====================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:group_managers, {:id=>:integer})
   -> 0.0011s
-- add_index(:group_managers, [:group_id, :user_id], {:unique=>true})
   -> 0.0010s
== 20150108221703 GroupManagers: migrated (0.0030s) ===========================

== 20150112172258 AddNewSiteCustomizationTypes: migrating =====================
-- add_column(:site_customizations, :head_tag, :text, {})
   -> 0.0002s
-- add_column(:site_customizations, :body_tag, :text, {})
   -> 0.0002s
== 20150112172258 AddNewSiteCustomizationTypes: migrated (0.0011s) ============

== 20150112172259 MigrateSiteTextToSiteCustomization: migrating ===============
-- execute("      DO\n      $do$\n      BEGIN\n        IF EXISTS(SELECT 1 FROM site_texts WHERE (text_type = 'head' OR text_type = 'bottom')) THEN\n          INSERT INTO site_customizations (name, user_id, enabled, key, created_at, updated_at, head_tag, body_tag)\n          VALUES\n          (\n            'Migrated from Site Text',\n            -1,\n            't',\n            '52678fc0-d1c5-4844-b161-78d3f46233c4',\n            now(),\n            now(),\n            (SELECT value FROM site_texts WHERE text_type = 'head' LIMIT 1),\n            (SELECT value FROM site_texts WHERE text_type = 'bottom' LIMIT 1)\n          );\n        END IF;\n      END\n      $do$\n")
   -> 0.0009s
== 20150112172259 MigrateSiteTextToSiteCustomization: migrated (0.0018s) ======

== 20150114093325 AddTopToSiteCustomization: migrating ========================
-- add_column(:site_customizations, :top, :text, {})
   -> 0.0004s
-- add_column(:site_customizations, :mobile_top, :text, {})
   -> 0.0002s
-- execute("      UPDATE site_customizations\n         SET top = (SELECT value FROM site_texts WHERE text_type = 'top' LIMIT 1),\n             mobile_top = (SELECT value FROM site_texts WHERE text_type = 'top' LIMIT 1),\n             head_tag = (SELECT value FROM site_texts WHERE text_type = 'head' LIMIT 1),\n             body_tag = (SELECT value FROM site_texts WHERE text_type = 'bottom' LIMIT 1)\n       WHERE name = 'Migrated from Site Text'\n")
   -> 0.0004s
== 20150114093325 AddTopToSiteCustomization: migrated (0.0020s) ===============

== 20150115172310 RenameUserExportColumn: migrating ===========================
-- rename_column(:user_exports, :export_type, :file_name)
   -> 0.0008s
== 20150115172310 RenameUserExportColumn: migrated (0.0017s) ==================

== 20150119192813 AddPostsIndexIncludingDeleted: migrating ====================
-- add_index(:posts, [:user_id, :created_at])
   -> 0.0012s
== 20150119192813 AddPostsIndexIncludingDeleted: migrated (0.0021s) ===========

== 20150123145128 AddAutomaticMembershipToGroup: migrating ====================
-- add_column(:groups, :automatic_membership_email_domains, :text, {})
   -> 0.0003s
-- add_column(:groups, :automatic_membership_retroactive, :boolean, {:default=>false})
   -> 0.0016s
== 20150123145128 AddAutomaticMembershipToGroup: migrated (0.0027s) ===========

== 20150129204520 AddShowOnProfileToUserFields: migrating =====================
-- add_column(:user_fields, :show_on_profile, :boolean, {:default=>false, :null=>false})
   -> 0.0023s
== 20150129204520 AddShowOnProfileToUserFields: migrated (0.0037s) ============

== 20150203041207 AddApplicationRequests: migrating ===========================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:application_requests, {:id=>:integer})
   -> 0.0017s
-- add_index(:application_requests, [:date, :req_type], {:unique=>true})
   -> 0.0011s
== 20150203041207 AddApplicationRequests: migrated (0.0037s) ==================

== 20150205032808 ResetApplicationRequests: migrating =========================
-- execute("TRUNCATE TABLE application_requests")
   -> 0.0005s
== 20150205032808 ResetApplicationRequests: migrated (0.0013s) ================

== 20150205172051 AddCustomTypeToUserHistories: migrating =====================
-- add_column(:user_histories, :custom_type, :string, {})
   -> 0.0002s
== 20150205172051 AddCustomTypeToUserHistories: migrated (0.0010s) ============

== 20150206004143 FlushApplicationRequests: migrating =========================
-- execute("TRUNCATE TABLE application_requests")
   -> 0.0004s
== 20150206004143 FlushApplicationRequests: migrated (0.0012s) ================

== 20150213174159 CreateDigestUnsubscribeKeys: migrating ======================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:digest_unsubscribe_keys, {:id=>false})
   -> 0.0005s
-- execute("ALTER TABLE digest_unsubscribe_keys ADD PRIMARY KEY (key)")
   -> 0.0004s
-- add_index(:digest_unsubscribe_keys, :created_at)
   -> 0.0019s
== 20150213174159 CreateDigestUnsubscribeKeys: migrated (0.0060s) =============

== 20150224004420 AddPinnedIndexes: migrating =================================
-- add_index(:topics, :pinned_globally, {:where=>"pinned_globally"})
   -> 0.0012s
-- add_index(:topics, :pinned_at, {:where=>"pinned_at IS NOT NULL"})
   -> 0.0011s
== 20150224004420 AddPinnedIndexes: migrated (0.0031s) ========================

== 20150227043622 AddLongDescriptionToBadges: migrating =======================
-- add_column(:badges, :long_description, :text, {})
   -> 0.0003s
== 20150227043622 AddLongDescriptionToBadges: migrated (0.0010s) ==============

== 20150301224250 CreateSuggestedForIndex: migrating ==========================
-- add_index(:topics, [:created_at, :visible], {:where=>"deleted_at IS NULL AND archetype <> 'private_message'"})
   -> 0.0013s
== 20150301224250 CreateSuggestedForIndex: migrated (0.0021s) =================

== 20150306050437 AddAllTimeAndOpLikesToTopTopics: migrating ==================
-- add_column(:top_topics, :all_score, :float, {:default=>0})
   -> 0.0028s
-- add_column(:top_topics, "daily_op_likes_count", :integer, {:default=>0, :null=>false})
   -> 0.0024s
-- add_index(:top_topics, ["daily_op_likes_count"])
   -> 0.0011s
-- add_column(:top_topics, "weekly_op_likes_count", :integer, {:default=>0, :null=>false})
   -> 0.0026s
-- add_index(:top_topics, ["weekly_op_likes_count"])
   -> 0.0012s
-- add_column(:top_topics, "monthly_op_likes_count", :integer, {:default=>0, :null=>false})
   -> 0.0025s
-- add_index(:top_topics, ["monthly_op_likes_count"])
   -> 0.0011s
-- add_column(:top_topics, "yearly_op_likes_count", :integer, {:default=>0, :null=>false})
   -> 0.0028s
-- add_index(:top_topics, ["yearly_op_likes_count"])
   -> 0.0018s
== 20150306050437 AddAllTimeAndOpLikesToTopTopics: migrated (0.0201s) =========

== 20150318143915 CreateDirectoryItems: migrating =============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:directory_items, {:force=>true, :id=>:integer})
   -> 0.0016s
-- add_index(:directory_items, :period_type)
   -> 0.0013s
== 20150318143915 CreateDirectoryItems: migrated (0.0041s) ====================

== 20150323034933 AddAllowPrivateMessagesToUserProfile: migrating =============
-- add_column(:user_profiles, :allow_private_messages, :boolean, {:default=>true, :null=>false})
   -> 0.0020s
== 20150323034933 AddAllowPrivateMessagesToUserProfile: migrated (0.0030s) ====

== 20150323062322 RemoveAllowPrivateMessagesFromUserProfile: migrating ========
-- remove_column(:user_profiles, :allow_private_messages)
   -> 0.0007s
== 20150323062322 RemoveAllowPrivateMessagesFromUserProfile: migrated (0.0018s)

== 20150323234856 AddMutedUsers: migrating ====================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:muted_users, {:force=>true, :id=>:integer})
   -> 0.0011s
-- add_index(:muted_users, [:user_id, :muted_user_id], {:unique=>true})
   -> 0.0011s
-- add_index(:muted_users, [:muted_user_id, :user_id], {:unique=>true})
   -> 0.0010s
== 20150323234856 AddMutedUsers: migrated (0.0045s) ===========================

== 20150324184222 AddMoreToDirectoryItems: migrating ==========================
-- add_column(:directory_items, :days_visited, :integer, {:null=>false, :default=>0})
   -> 0.0011s
-- add_column(:directory_items, :posts_read, :integer, {:null=>false, :default=>0})
   -> 0.0010s
== 20150324184222 AddMoreToDirectoryItems: migrated (0.0031s) =================

== 20150325183400 FixGroupUserCount: migrating ================================
-- execute("UPDATE groups g SET user_count = (SELECT COUNT(user_id) FROM group_users gu WHERE gu.group_id = g.id)")
   -> 0.0005s
== 20150325183400 FixGroupUserCount: migrated (0.0014s) =======================

== 20150325190959 CreateQueuedPosts: migrating ================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:queued_posts, {:force=>true, :id=>:integer})
   -> 0.0020s
-- add_index(:queued_posts, [:queue, :state, :created_at], {:name=>"by_queue_status"})
   -> 0.0025s
-- add_index(:queued_posts, [:topic_id, :queue, :state, :created_at], {:name=>"by_queue_status_topic"})
   -> 0.0015s
== 20150325190959 CreateQueuedPosts: migrated (0.0073s) =======================

== 20150410002033 AddPrimaryGroupToGroups: migrating ==========================
-- add_column(:groups, :primary_group, :boolean, {:default=>false, :null=>false})
   -> 0.0020s
== 20150410002033 AddPrimaryGroupToGroups: migrated (0.0029s) =================

== 20150410002551 AddTitleToGroups: migrating =================================
-- add_column(:groups, :title, :string, {})
   -> 0.0003s
== 20150410002551 AddTitleToGroups: migrated (0.0011s) ========================

== 20150421085850 IncreaseUrlLengthOnTopicEmbed: migrating ====================
-- index_name(:topic_embeds, {:column=>:embed_url})
   -> 0.0000s
-- index_name_exists?(:topic_embeds, "index_topic_embeds_on_embed_url")
   -> 0.0006s
-- remove_index(:topic_embeds, {:column=>:embed_url, :name=>"index_topic_embeds_on_embed_url"})
   -> 0.0012s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:topic_embeds)
   -> 0.0000s
-- execute("ALTER TABLE \"topic_embeds\" ALTER COLUMN \"embed_url\" TYPE character varying(1000)")
   -> 0.0016s
-- change_column_null(:topic_embeds, :embed_url, false, nil)
   -> 0.0002s
-- add_index(:topic_embeds, :embed_url, {:unique=>true})
   -> 0.0011s
== 20150421085850 IncreaseUrlLengthOnTopicEmbed: migrated (0.0057s) ===========

== 20150421190714 AddQueuedPostIdToUserActions: migrating =====================
-- add_column(:user_actions, :queued_post_id, :integer, {:null=>true})
   -> 0.0003s
== 20150421190714 AddQueuedPostIdToUserActions: migrated (0.0011s) ============

== 20150422160235 AddLinkPostIdIndexOnTopicLinks: migrating ===================
-- add_index(:topic_links, [:link_post_id, :reflection])
   -> 0.0012s
== 20150422160235 AddLinkPostIdIndexOnTopicLinks: migrated (0.0020s) ==========

== 20150501152228 RenameTotalVotesToVoters: migrating =========================
== 20150501152228 RenameTotalVotesToVoters: migrated (0.0058s) ================

== 20150505044154 AddStylesheetCache: migrating ===============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:stylesheet_cache, {:id=>:integer})
   -> 0.0017s
-- add_index(:stylesheet_cache, [:target, :digest], {:unique=>true})
   -> 0.0014s
== 20150505044154 AddStylesheetCache: migrated (0.0056s) ======================

== 20150513094042 AddIndexOnPostActions: migrating ============================
-- add_index(:post_actions, [:user_id, :post_action_type_id], {:where=>"deleted_at IS NULL"})
   -> 0.0013s
== 20150513094042 AddIndexOnPostActions: migrated (0.0023s) ===================

== 20150514023016 AddUnreadNotificationsIndex: migrating ======================
-- add_index(:notifications, [:user_id, :notification_type], {:where=>"not read", :name=>"idx_notifications_speedup_unread_count"})
   -> 0.0013s
== 20150514023016 AddUnreadNotificationsIndex: migrated (0.0024s) =============

== 20150514043155 AddUserActionsAllIndex: migrating ===========================
-- add_index(:user_actions, [:user_id, :created_at, :action_type], {:name=>"idx_user_actions_speed_up_user_all"})
   -> 0.0012s
== 20150514043155 AddUserActionsAllIndex: migrated (0.0021s) ==================

== 20150525151759 SetDefaultS3Region: migrating ===============================
-- execute("      UPDATE site_settings\n         SET value = 'us-east-1'\n       WHERE name = 's3_region'\n         AND LENGTH(COALESCE(value, '')) = 0\n")
   -> 0.0002s
== 20150525151759 SetDefaultS3Region: migrated (0.0011s) ======================

== 20150609163211 MigrateEmbeddableHost: migrating ============================
-- execute("UPDATE site_settings SET name = 'embeddable_hosts', data_type = 9 WHERE name = 'embeddable_host'")
   -> 0.0001s
== 20150609163211 MigrateEmbeddableHost: migrated (0.0011s) ===================

== 20150617080349 AddIndexOnPostNotifications: migrating ======================
-- add_index(:notifications, [:user_id, :topic_id, :post_number])
   -> 0.0013s
== 20150617080349 AddIndexOnPostNotifications: migrated (0.0023s) =============

== 20150617233018 AddIndexTargetPostIdOnUserActions: migrating ================
-- add_index(:user_actions, [:target_post_id])
   -> 0.0020s
== 20150617233018 AddIndexTargetPostIdOnUserActions: migrated (0.0031s) =======

== 20150617234511 AddStaffIndexToUsers: migrating =============================
-- add_index(:users, [:id], {:name=>"idx_users_admin", :where=>"admin"})
   -> 0.0018s
-- add_index(:users, [:id], {:name=>"idx_users_moderator", :where=>"moderator"})
   -> 0.0014s
== 20150617234511 AddStaffIndexToUsers: migrated (0.0100s) ====================

== 20150702201926 AddTopicTemplateToCategories: migrating =====================
-- add_column(:categories, :topic_template, :text, {:null=>true})
   -> 0.0003s
== 20150702201926 AddTopicTemplateToCategories: migrated (0.0058s) ============

== 20150706215111 AddMobileToUserVisits: migrating ============================
-- add_column(:user_visits, :mobile, :boolean, {:default=>false})
   -> 0.0014s
== 20150706215111 AddMobileToUserVisits: migrated (0.0023s) ===================

== 20150707163251 AddReportsIndexToUserVisits: migrating ======================
-- add_index(:user_visits, [:visited_at, :mobile])
   -> 0.0017s
== 20150707163251 AddReportsIndexToUserVisits: migrated (0.0030s) =============

== 20150709021818 AddLikeCountToPostMenu: migrating ===========================
-- execute("UPDATE site_settings\nSET value = replace(value, 'like', 'like-count|like')\nWHERE name = 'post_menu'\nAND value NOT LIKE '%like-count%'\n")
   -> 0.0004s
== 20150709021818 AddLikeCountToPostMenu: migrated (0.0020s) ==================

== 20150713203955 EnlargeUsersEmailField: migrating ===========================
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:users)
   -> 0.0000s
-- execute("ALTER TABLE \"users\" ALTER COLUMN \"email\" TYPE character varying(513)")
   -> 0.0009s
== 20150713203955 EnlargeUsersEmailField: migrated (0.0019s) ==================

== 20150724165259 AddIndexToPostCustomFields: migrating =======================
-- execute("      CREATE INDEX index_post_custom_fields_on_name_and_value ON post_custom_fields USING btree (name, left(value, 200))\n")
   -> 0.0005s
== 20150724165259 AddIndexToPostCustomFields: migrated (0.0016s) ==============

== 20150724182342 AddActionCodeToPost: migrating ==============================
-- add_column(:posts, :action_code, :string, {:null=>true})
   -> 0.0005s
== 20150724182342 AddActionCodeToPost: migrated (0.0017s) =====================

== 20150727193414 CreateUserFieldOptions: migrating ===========================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:user_field_options, {:force=>true, :id=>:integer})
   -> 0.0020s
== 20150727193414 CreateUserFieldOptions: migrated (0.0030s) ==================

== 20150727210019 AddPinnedUntilToTopics: migrating ===========================
-- add_column(:topics, :pinned_until, :datetime, {:null=>true})
   -> 0.0004s
== 20150727210019 AddPinnedUntilToTopics: migrated (0.0014s) ==================

== 20150727210748 AddQuarterlyToTopTopics: migrating ==========================
-- add_column(:top_topics, :quarterly_posts_count, :integer, {:default=>0, :null=>false})
   -> 0.0037s
-- add_column(:top_topics, :quarterly_views_count, :integer, {:default=>0, :null=>false})
   -> 0.0048s
-- add_column(:top_topics, :quarterly_likes_count, :integer, {:default=>0, :null=>false})
   -> 0.0047s
-- add_column(:top_topics, :quarterly_score, :float, {:default=>0.0})
   -> 0.0047s
-- add_column(:top_topics, :quarterly_op_likes_count, :integer, {:default=>0, :null=>false})
   -> 0.0035s
-- add_index(:top_topics, [:quarterly_posts_count])
   -> 0.0015s
-- add_index(:top_topics, [:quarterly_views_count])
   -> 0.0012s
-- add_index(:top_topics, [:quarterly_likes_count])
   -> 0.0010s
-- add_index(:top_topics, [:quarterly_op_likes_count])
   -> 0.0011s
== 20150727210748 AddQuarterlyToTopTopics: migrated (0.0276s) =================

== 20150727230537 AddExampleColumnComments: migrating =========================
  COMMENT ON TABLE posts
  COMMENT ON COLUMN posts.post_number
  COMMENT ON COLUMN posts.raw
  COMMENT ON COLUMN posts.cooked
  COMMENT ON COLUMN posts.reply_to_post_number
  COMMENT ON COLUMN posts.reply_quoted
  COMMENT ON TABLE topics
== 20150727230537 AddExampleColumnComments: migrated (0.0016s) ================

== 20150728004647 CorrectCustomFieldsMigration: migrating =====================
-- execute("      DROP INDEX index_post_custom_fields_on_name_and_value\n")
   -> 0.0002s
-- execute("      CREATE INDEX index_post_custom_fields_on_name_and_value ON post_custom_fields USING btree (name, left(value, 200))\n")
   -> 0.0004s
== 20150728004647 CorrectCustomFieldsMigration: migrated (0.0014s) ============

== 20150728210202 MigrateOldModeratorPosts: migrating =========================
-- execute("UPDATE posts SET action_code = 'closed.enabled', raw = '', cooked = '', post_type = 3 where post_type = 2 AND raw = 'translation missing: en.topic_statuses.closed_enabled'")
   -> 0.0004s
-- execute("UPDATE posts SET action_code = 'closed.disabled', raw = '', cooked = '', post_type = 3 where post_type = 2 AND raw = 'translation missing: en.topic_statuses.closed_disabled'")
   -> 0.0003s
-- execute("UPDATE posts SET action_code = 'archived.enabled', raw = '', cooked = '', post_type = 3 where post_type = 2 AND raw = 'translation missing: en.topic_statuses.archived_enabled'")
   -> 0.0011s
-- execute("UPDATE posts SET action_code = 'archived.disabled', raw = '', cooked = '', post_type = 3 where post_type = 2 AND raw = 'translation missing: en.topic_statuses.archived_disabled'")
   -> 0.0002s
-- execute("UPDATE posts SET action_code = 'pinned.enabled', raw = '', cooked = '', post_type = 3 where post_type = 2 AND raw = 'translation missing: en.topic_statuses.pinned_enabled'")
   -> 0.0002s
-- execute("UPDATE posts SET action_code = 'pinned.disabled', raw = '', cooked = '', post_type = 3 where post_type = 2 AND raw = 'translation missing: en.topic_statuses.pinned_disabled'")
   -> 0.0002s
-- execute("UPDATE posts SET action_code = 'pinned_globally.enabled', raw = '', cooked = '', post_type = 3 where post_type = 2 AND raw = 'translation missing: en.topic_statuses.pinned_globally_enabled'")
   -> 0.0002s
-- execute("UPDATE posts SET action_code = 'pinned_globally.disabled', raw = '', cooked = '', post_type = 3 where post_type = 2 AND raw = 'translation missing: en.topic_statuses.pinned_globally_disabled'")
   -> 0.0002s
== 20150728210202 MigrateOldModeratorPosts: migrated (0.0051s) ================

== 20150729150523 MigrateAutoClosePosts: migrating ============================
-- execute("UPDATE posts SET action_code = 'autoclosed.enabled', post_type = 3 WHERE post_type = 2 AND (raw ~* 'This topic was automatically closed after 1 day. New replies are no longer allowed.' OR raw ~* 'This topic was automatically closed after \\d+ days. New replies are no longer allowed.' OR raw ~* 'This topic was automatically closed after 1 hour. New replies are no longer allowed.' OR raw ~* 'This topic was automatically closed after \\d+ hours. New replies are no longer allowed.' OR raw ~* 'This topic was automatically closed 1 day after the last reply. New replies are no longer allowed.' OR raw ~* 'This topic was automatically closed \\d+ days after the last reply. New replies are no longer allowed.' OR raw ~* 'This topic was automatically closed 1 hour after the last reply. New replies are no longer allowed.' OR raw ~* 'This topic was automatically closed \\d+ hours after the last reply. New replies are no longer allowed.' OR raw ~* 'This topic was automatically closed 1 minute after the last reply. New replies are no longer allowed.' OR raw ~* 'This topic was automatically closed \\d+ minutes after the last reply. New replies are no longer allowed.')")
   -> 0.0013s
== 20150729150523 MigrateAutoClosePosts: migrated (0.0029s) ===================

== 20150730154830 AddPositionToUserFields: migrating ==========================
-- add_column(:user_fields, :position, :integer, {:default=>0})
   -> 0.0016s
-- execute("UPDATE user_fields SET position = (SELECT COUNT(*) from user_fields as uf2 where uf2.id < user_fields.id)")
   -> 0.0003s
== 20150730154830 AddPositionToUserFields: migrated (0.0027s) =================

== 20150731225331 MigrateOldMovedPosts: migrating =============================
-- execute("UPDATE posts SET post_type = 3, action_code = 'split_topic' WHERE post_type = 2 AND raw ~* '^I moved [a\\d]+ posts? to a new topic:'")
   -> 0.0003s
-- execute("UPDATE posts SET post_type = 3, action_code = 'split_topic' WHERE post_type = 2 AND raw ~* '^I moved [a\\d]+ posts? to an existing topic:'")
   -> 0.0002s
== 20150731225331 MigrateOldMovedPosts: migrated (0.0014s) ====================

== 20150802233112 AddPostStats: migrating =====================================
-- add_column(:drafts, :revisions, :int, {:null=>false, :default=>1})
   -> 0.0025s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:post_stats, {:id=>:integer})
   -> 0.0017s
-- add_index(:post_stats, [:post_id])
   -> 0.0014s
== 20150802233112 AddPostStats: migrated (0.0066s) ============================

== 20150806210727 AddEmbeddedCssToSiteCustomizations: migrating ===============
-- add_column(:site_customizations, :embedded_css, :text, {})
   -> 0.0003s
-- add_column(:site_customizations, :embedded_css_baked, :text, {})
   -> 0.0002s
== 20150806210727 AddEmbeddedCssToSiteCustomizations: migrated (0.0013s) ======

== 20150818190757 CreateEmbeddableHosts: migrating ============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:embeddable_hosts, {:force=>true, :id=>:integer})
   -> 0.0111s
-- execute("SELECT c.id FROM categories AS c\n                        INNER JOIN site_settings AS s ON s.value = c.name\n                        WHERE s.name = 'embed_category'")
   -> 0.0006s
-- execute("SELECT value FROM site_settings WHERE name = 'uncategorized_category_id'")
   -> 0.0002s
-- execute("SELECT value FROM site_settings WHERE name = 'embeddable_hosts'")
   -> 0.0001s
-- execute("DELETE FROM site_settings WHERE name IN ('embeddable_hosts', 'embed_category')")
   -> 0.0001s
== 20150818190757 CreateEmbeddableHosts: migrated (0.0132s) ===================

== 20150822141540 FixMigratedHosts: migrating =================================
-- execute("UPDATE embeddable_hosts SET host = regexp_replace(host, '^https?://', '', 'i')")
   -> 0.0002s
== 20150822141540 FixMigratedHosts: migrated (0.0010s) ========================

== 20150828155137 AddSuppressFromHomepageToCategory: migrating ================
-- add_column(:categories, :suppress_from_homepage, :boolean, {:default=>false})
   -> 0.0025s
== 20150828155137 AddSuppressFromHomepageToCategory: migrated (0.0034s) =======

== 20150901192313 AddGrantTrustLevelToGroups: migrating =======================
-- add_column(:groups, :grant_trust_level, :integer, {})
   -> 0.0003s
== 20150901192313 AddGrantTrustLevelToGroups: migrated (0.0011s) ==============

== 20150914021445 CreateUserProfileViews: migrating ===========================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:user_profile_views, {:id=>:integer})
   -> 0.0014s
-- add_index(:user_profile_views, :user_profile_id)
   -> 0.0013s
-- add_index(:user_profile_views, :user_id)
   -> 0.0015s
-- add_index(:user_profile_views, [:viewed_at, :ip_address, :user_profile_id], {:where=>"user_id IS NULL", :unique=>true, :name=>"unique_profile_view_ip"})
   -> 0.0015s
-- add_index(:user_profile_views, [:viewed_at, :user_id, :user_profile_id], {:where=>"user_id IS NOT NULL", :unique=>true, :name=>"unique_profile_view_user"})
   -> 0.0011s
== 20150914021445 CreateUserProfileViews: migrated (0.0078s) ==================

== 20150914034541 AddViewsToUserProfile: migrating ============================
-- add_column(:user_profiles, :views, :integer, {:default=>0, :null=>false})
   -> 0.0016s
== 20150914034541 AddViewsToUserProfile: migrated (0.0024s) ===================

== 20150917071017 AddCategoryIdToUserHistories: migrating =====================
-- add_column(:user_histories, :category_id, :integer, {})
   -> 0.0003s
-- add_index(:user_histories, :category_id)
   -> 0.0011s
== 20150917071017 AddCategoryIdToUserHistories: migrated (0.0022s) ============

== 20150918004206 AddUserIdGroupIdIndexToGroupUsers: migrating ================
-- add_index(:group_users, [:user_id, :group_id], {:unique=>true})
   -> 0.0014s
== 20150918004206 AddUserIdGroupIdIndexToGroupUsers: migrated (0.0032s) =======

== 20150924022040 AddFancyTitleToTopic: migrating =============================
-- add_column(:topics, :fancy_title, :string, {:limit=>400, :null=>true})
   -> 0.0003s
== 20150924022040 AddFancyTitleToTopic: migrated (0.0013s) ====================

== 20150925000915 ExcludeWhispersFromBadges: migrating ========================
-- execute("DROP VIEW badge_posts")
   -> 0.0007s
-- execute("CREATE VIEW badge_posts AS\n    SELECT p.*\n    FROM posts p\n    JOIN topics t ON t.id = p.topic_id\n    JOIN categories c ON c.id = t.category_id\n    WHERE c.allow_badges AND\n          p.deleted_at IS NULL AND\n          t.deleted_at IS NULL AND\n          NOT c.read_restricted AND\n          t.visible AND\n          p.post_type IN (1,2,3)\n    ")
   -> 0.0028s
== 20150925000915 ExcludeWhispersFromBadges: migrated (0.0044s) ===============

== 20151016163051 MergePollsVotes: migrating ==================================
== 20151016163051 MergePollsVotes: migrated (0.0015s) =========================

== 20151103233815 AddLowerTitleIndexOnTopics: migrating =======================
-- execute("CREATE INDEX index_topics_on_lower_title ON topics (LOWER(title))")
   -> 0.0005s
== 20151103233815 AddLowerTitleIndexOnTopics: migrated (0.0012s) ==============

== 20151105181635 AddStagedToUser: migrating ==================================
-- add_column(:users, :staged, :boolean, {:null=>false, :default=>false})
   -> 0.0034s
== 20151105181635 AddStagedToUser: migrated (0.0043s) =========================

== 20151107041044 FixIncorrectTopicCreatorAfterMove: migrating ================
-- execute("UPDATE topics SET user_id = p.user_id\n             FROM posts p\n             WHERE p.topic_id = topics.id AND\n              p.post_number = 1 AND\n              p.user_id <> topics.user_id")
   -> 0.0007s
== 20151107041044 FixIncorrectTopicCreatorAfterMove: migrated (0.0018s) =======

== 20151107042241 AddOwnerToGroupUsers: migrating =============================
-- add_column(:group_users, :owner, :boolean, {:null=>false, :default=>false})
   -> 0.0015s
== 20151107042241 AddOwnerToGroupUsers: migrated (0.0037s) ====================

== 20151109124147 DropGroupManagers: migrating ================================
-- execute("UPDATE group_users SET owner = true\n      WHERE exists (SELECT 1 FROM group_managers m\n                    WHERE m.group_id = group_users.group_id AND\n                          m.user_id = group_users.user_id)")
   -> 0.0006s
-- drop_table("group_managers")
   -> 0.0006s
== 20151109124147 DropGroupManagers: migrated (0.0021s) =======================

== 20151113205046 CreateTranslationOverrides: migrating =======================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:translation_overrides, {:force=>true, :id=>:integer})
   -> 0.0017s
-- add_index(:translation_overrides, [:locale, :translation_key], {:unique=>true})
   -> 0.0013s
== 20151113205046 CreateTranslationOverrides: migrated (0.0039s) ==============

== 20151117165756 AddAutomaticallyUnpinTopicsToUsers: migrating ===============
-- add_column(:users, :automatically_unpin_topics, :boolean, {:nullabe=>false, :default=>true})
   -> 0.0036s
== 20151117165756 AddAutomaticallyUnpinTopicsToUsers: migrated (0.0045s) ======

== 20151124172631 AddIsSupportToCategories: migrating =========================
-- add_column(:categories, :is_support, :boolean, {:default=>false, :null=>false})
   -> 0.0035s
== 20151124172631 AddIsSupportToCategories: migrated (0.0045s) ================

== 20151124192339 RenameNinjaEdit: migrating ==================================
-- execute("UPDATE site_settings SET name = 'editing_grace_period' WHERE name = 'ninja_edit_window'")
   -> 0.0002s
== 20151124192339 RenameNinjaEdit: migrated (0.0013s) =========================

== 20151125194322 RemoveSiteText: migrating ===================================
-- execute("INSERT INTO translation_overrides (locale, translation_key, value, created_at, updated_at)\n                    SELECT 'en',\n                           CASE\n                            WHEN text_type = 'usage_tips' THEN 'system_messages.usage_tips.text_body_template'\n                            WHEN text_type = 'education_new_topic' THEN 'education.new-topic'\n                            WHEN text_type = 'education_new_reply' THEN 'education.new-reply'\n                            WHEN text_type = 'login_required_welcome_message' THEN 'login_required.welcome_message'\n                           END,\n                           value,\n                           created_at,\n                           updated_at\n                   FROM site_texts\n                   WHERE text_type in ('usage_tips',\n                                       'education_new_topic',\n                                       'education_new_reply',\n                                       'login_required_welcome_message')")
   -> 0.0004s
-- drop_table(:site_texts)
   -> 0.0005s
== 20151125194322 RemoveSiteText: migrated (0.0019s) ==========================

== 20151126173356 RenameIsSupportToContainsMessages: migrating ================
-- rename_column(:categories, :is_support, :contains_messages)
   -> 0.0024s
== 20151126173356 RenameIsSupportToContainsMessages: migrated (0.0039s) =======

== 20151126233623 AddBakedHeadAndBodyToSiteCustomizations: migrating ==========
-- add_column(:site_customizations, :head_tag_baked, :text, {})
   -> 0.0003s
-- add_column(:site_customizations, :body_tag_baked, :text, {})
   -> 0.0002s
== 20151126233623 AddBakedHeadAndBodyToSiteCustomizations: migrated (0.0052s) =

== 20151127011837 AddHeaderAndFooterBakedToSiteCustomizations: migrating ======
-- add_column(:site_customizations, :header_baked, :text, {})
   -> 0.0003s
-- add_column(:site_customizations, :mobile_header_baked, :text, {})
   -> 0.0004s
-- add_column(:site_customizations, :footer_baked, :text, {})
   -> 0.0003s
-- add_column(:site_customizations, :mobile_footer_baked, :text, {})
   -> 0.0002s
== 20151127011837 AddHeaderAndFooterBakedToSiteCustomizations: migrated (0.0024s)

== 20151201035631 AddGroupMentions: migrating =================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:group_mentions, {:id=>:integer})
   -> 0.0012s
-- add_index(:group_mentions, [:post_id, :group_id], {:unique=>true})
   -> 0.0016s
-- add_index(:group_mentions, [:group_id, :post_id], {:unique=>true})
   -> 0.0015s
== 20151201035631 AddGroupMentions: migrated (0.0063s) ========================

== 20151201161726 AddIncomingEmailToGroups: migrating =========================
-- add_column(:groups, :incoming_email, :string, {:null=>true})
   -> 0.0003s
-- add_index(:groups, :incoming_email, {:unique=>true})
   -> 0.0012s
== 20151201161726 AddIncomingEmailToGroups: migrated (0.0026s) ================

== 20151214165852 AddNotificationLevelToGroupUsers: migrating =================
-- add_column(:group_users, :notification_level, :integer, {:default=>3, :null=>false})
   -> 0.0016s
== 20151214165852 AddNotificationLevelToGroupUsers: migrated (0.0032s) ========

== 20151218232200 AddUniqueIndexToCategoryUsers: migrating ====================
-- execute("DELETE FROM category_users cu USING category_users cu1\n  WHERE cu.user_id = cu1.user_id AND\n        cu.category_id = cu1.category_id AND\n        cu.notification_level = cu1.notification_level AND\n        cu.id < cu1.id\n")
   -> 0.0005s
-- add_index(:category_users, [:user_id, :category_id, :notification_level], {:name=>"idx_category_users_u1", :unique=>true})
   -> 0.0016s
-- add_index(:category_users, [:category_id, :user_id, :notification_level], {:name=>"idx_category_users_u2", :unique=>true})
   -> 0.0020s
== 20151218232200 AddUniqueIndexToCategoryUsers: migrated (0.0060s) ===========

== 20151219045559 AddHasMessagesToGroups: migrating ===========================
-- add_column(:groups, :has_messages, :boolean, {:default=>false, :null=>false})
   -> 0.0019s
-- execute("    UPDATE groups g SET has_messages = true\n    WHERE exists(SELECT group_id FROM topic_allowed_groups WHERE group_id = g.id)\n")
   -> 0.0005s
== 20151219045559 AddHasMessagesToGroups: migrated (0.0033s) ==================

== 20151220232725 AddUserArchivedMessagesGroupArchivedMessages: migrating =====
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:user_archived_messages, {:id=>:integer})
   -> 0.0011s
-- add_index(:user_archived_messages, [:user_id, :topic_id], {:unique=>true})
   -> 0.0013s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:group_archived_messages, {:id=>:integer})
   -> 0.0011s
-- add_index(:group_archived_messages, [:group_id, :topic_id], {:unique=>true})
   -> 0.0012s
== 20151220232725 AddUserArchivedMessagesGroupArchivedMessages: migrated (0.0061s)

== 20160108051129 FixIncorrectUserHistory: migrating ==========================
-- execute("SELECT min(id) FROM user_histories WHERE (action = 16 AND previous_value in ('0','1','2','3','4')) OR\n(action = 19 AND target_user_id IS NULL AND details IS NOT NULL)\n")
   -> 0.0007s
-- execute("SELECT max(id) FROM user_histories WHERE (action = 16 AND previous_value in ('0','1','2','3','4')) OR\n(action = 19 AND target_user_id IS NULL AND details IS NOT NULL)\n")
   -> 0.0004s
== 20160108051129 FixIncorrectUserHistory: migrated (0.0029s) =================

== 20160110053003 ArchiveSystemMessagesWithNoReplies: migrating ===============
-- execute("\n    INSERT INTO user_archived_messages (user_id, topic_id, created_at, updated_at)\n    SELECT p.user_id, p.topic_id, p.created_at, p.updated_at\n    FROM posts p\n    JOIN topics t ON t.id = p.topic_id\n    LEFT JOIN user_archived_messages um ON um.user_id = p.user_id AND um.topic_id = p.topic_id\n    WHERE t.subtype = 'system_message' AND\n          t.posts_count = 1 AND\n          t.archetype = 'private_message' AND\n          um.id IS NULL AND\n          p.user_id IS NOT NULL AND\n          p.topic_id IS NOT NULL AND\n          p.post_number = 1\n")
   -> 0.0014s
== 20160110053003 ArchiveSystemMessagesWithNoReplies: migrated (0.0031s) ======

== 20160112025852 RemoveUsersFromTopicAllowedUsers: migrating =================
-- execute("    DELETE FROM topic_allowed_users tu\n    USING topic_allowed_groups tg\n    JOIN group_users gu ON gu.group_id = tg.group_id\n    WHERE tu.user_id = gu.user_id AND tg.topic_id = tu.topic_id\n")
   -> 0.0009s
== 20160112025852 RemoveUsersFromTopicAllowedUsers: migrated (0.0025s) ========

== 20160112101818 RemoveContainsMessageOnCategory: migrating ==================
-- remove_column(:categories, :contains_messages)
   -> 0.0004s
== 20160112101818 RemoveContainsMessageOnCategory: migrated (0.0045s) =========

== 20160112104733 AddContainsMessagesBackToCategories: migrating ==============
-- add_column(:categories, :contains_messages, :boolean, {})
   -> 0.0010s
== 20160112104733 AddContainsMessagesBackToCategories: migrated (0.0048s) =====

== 20160113160742 CreateIncomingEmails: migrating =============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:incoming_emails, {:id=>:integer})
   -> 0.0021s
-- add_index(:incoming_emails, :created_at)
   -> 0.0014s
-- add_index(:incoming_emails, :message_id)
   -> 0.0013s
-- add_index(:incoming_emails, :error)
   -> 0.0013s
== 20160113160742 CreateIncomingEmails: migrated (0.0138s) ====================

== 20160118174335 RebakeHtmlCustomizations: migrating =========================
-- execute("UPDATE site_customizations SET body_tag_baked = NULL,\n                                            head_tag_baked = NULL,\n                                            header_baked = NULL,\n                                            mobile_header_baked = NULL,\n                                            footer_baked = NULL,\n                                            mobile_footer_baked = NULL")
   -> 0.0003s
== 20160118174335 RebakeHtmlCustomizations: migrated (0.0012s) ================

== 20160118233631 BackfillIncomingEmails: migrating ===========================
-- execute("      INSERT INTO incoming_emails (post_id, created_at, updated_at, user_id, topic_id, message_id, from_address, to_addresses, subject)\n      SELECT posts.id\n           , posts.created_at\n           , posts.created_at\n           , posts.user_id\n           , posts.topic_id\n           , array_to_string(regexp_matches(posts.raw_email, '^ *Message-Id: .*<([^>]+)>', 'im'), '')\n           , users.email\n           , array_to_string(regexp_matches(array_to_string(regexp_matches(posts.raw_email, '^to:.+$', 'im'), ''), '[^< \"''(]+@[^> \"'')]+'), '')\n           , topics.title\n      FROM posts\n      JOIN topics ON posts.topic_id = topics.id\n      JOIN users ON posts.user_id = users.id\n      WHERE posts.user_id IS NOT NULL\n        AND posts.topic_id IS NOT NULL\n        AND posts.via_email = 't'\n        AND posts.raw_email ~* 'Message-Id'\n      ORDER BY posts.id;\n")
   -> 0.0011s
== 20160118233631 BackfillIncomingEmails: migrated (0.0021s) ==================

== 20160127105314 ChangeDefaultNotificationLevelOnGroups: migrating ===========
-- execute("UPDATE group_users SET notification_level = 2")
   -> 0.0001s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:group_users)
   -> 0.0000s
-- execute("ALTER TABLE \"group_users\" ALTER COLUMN \"notification_level\" TYPE integer")
   -> 0.0004s
-- change_column_default(:group_users, :notification_level, 2)
   -> 0.0013s
-- change_column_null(:group_users, :notification_level, false, 2)
   -> 0.0015s
== 20160127105314 ChangeDefaultNotificationLevelOnGroups: migrated (0.0048s) ==

== 20160127222802 MigrateUncategorizedDescriptionSetting: migrating ===========
-- execute("INSERT INTO translation_overrides (locale, translation_key, value, created_at, updated_at)\n             SELECT 'en', 'category.uncategorized_description', value, created_at, updated_at\n             FROM site_settings\n             WHERE name = 'uncategorized_description'\n               AND value <> 'Topics that don''t need a category, or don''t fit into any other existing category.'")
   -> 0.0003s
-- execute("DELETE FROM site_settings WHERE name = 'uncategorized_description'")
   -> 0.0002s
== 20160127222802 MigrateUncategorizedDescriptionSetting: migrated (0.0066s) ==

== 20160201181320 FixEmailLogs: migrating =====================================
-- execute("      UPDATE email_logs\n         SET user_id = u.id\n        FROM email_logs el\n   LEFT JOIN users u ON u.email = el.to_address\n       WHERE email_logs.id = el.id\n         AND email_logs.user_id IS NULL\n         AND NOT email_logs.skipped\n")
   -> 0.0009s
== 20160201181320 FixEmailLogs: migrated (0.0022s) ============================

== 20160206210202 RemoveInvalidWebsites: migrating ============================
-- execute("UPDATE user_profiles SET website = NULL WHERE website = 'http://'")
   -> 0.0003s
== 20160206210202 RemoveInvalidWebsites: migrated (0.0011s) ===================

== 20160215075528 AddUnreadPmIndexToNotifications: migrating ==================
-- add_index(:notifications, [:user_id, :id], {:unique=>true, :where=>"notification_type = 6 AND NOT read"})
   -> 0.0020s
== 20160215075528 AddUnreadPmIndexToNotifications: migrated (0.0038s) =========

== 20160224033122 CreateInstagramUserInfos: migrating =========================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:instagram_user_infos, {:id=>:integer})
   -> 0.0021s
== 20160224033122 CreateInstagramUserInfos: migrated (0.0051s) ================

== 20160225050317 AddUserOptions: migrating ===================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:user_options, {:id=>false})
   -> 0.0019s
-- add_index(:user_options, [:user_id], {:unique=>true})
   -> 0.0011s
-- execute("    INSERT INTO user_options (\n            user_id,\n            email_always,\n            mailing_list_mode,\n            email_digests,\n            email_direct,\n            email_private_messages,\n            external_links_in_new_tab,\n            enable_quoting,\n            dynamic_favicon,\n            disable_jump_reply,\n            edit_history_public,\n            automatically_unpin_topics,\n            digest_after_days\n    )\n    SELECT  id,\n            email_always,\n            mailing_list_mode,\n            email_digests,\n            email_direct,\n            COALESCE(email_private_messages,true),\n            external_links_in_new_tab,\n            enable_quoting,\n            dynamic_favicon,\n            disable_jump_reply,\n            edit_history_public,\n            automatically_unpin_topics,\n            digest_after_days\n    FROM users\n")
   -> 0.0003s
== 20160225050317 AddUserOptions: migrated (0.0045s) ==========================

== 20160225050318 AllowDefaultsOnUsersTable: migrating ========================
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:users)
   -> 0.0000s
-- execute("ALTER TABLE \"users\" ALTER COLUMN \"email_digests\" TYPE boolean")
   -> 0.0003s
-- change_column_default(:users, :email_digests, true)
   -> 0.0034s
-- change_column_null(:users, :email_digests, false, true)
   -> 0.0033s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:users)
   -> 0.0000s
-- execute("ALTER TABLE \"users\" ALTER COLUMN \"external_links_in_new_tab\" TYPE boolean")
   -> 0.0002s
-- change_column_default(:users, :external_links_in_new_tab, false)
   -> 0.0026s
-- change_column_null(:users, :external_links_in_new_tab, false, false)
   -> 0.0029s
== 20160225050318 AllowDefaultsOnUsersTable: migrated (0.0141s) ===============

== 20160225050319 MoveTrackingOptionsToUserOptions: migrating =================
-- add_column(:user_options, :auto_track_topics_after_msecs, :integer, {})
   -> 0.0005s
-- add_column(:user_options, :new_topic_duration_minutes, :integer, {})
   -> 0.0003s
-- add_column(:user_options, :last_redirected_to_top_at, :datetime, {})
   -> 0.0003s
-- execute("    UPDATE user_options\n    SET auto_track_topics_after_msecs = users.auto_track_topics_after_msecs,\n        new_topic_duration_minutes = users.new_topic_duration_minutes,\n        last_redirected_to_top_at = users.last_redirected_to_top_at\n    FROM users\n    WHERE users.id = user_options.user_id\n")
   -> 0.0007s
== 20160225050319 MoveTrackingOptionsToUserOptions: migrated (0.0034s) ========

== 20160225050320 AddEmailPreviousRepliesToUserOptions: migrating =============
-- add_column(:user_options, :email_previous_replies, :integer, {:null=>false, :default=>1})
   -> 0.0016s
== 20160225050320 AddEmailPreviousRepliesToUserOptions: migrated (0.0065s) ====

== 20160225095306 AddEmailInReplyToToUserOptions: migrating ===================
-- add_column(:user_options, :email_in_reply_to, :boolean, {:null=>false, :default=>true})
   -> 0.0012s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:user_options)
   -> 0.0000s
-- execute("ALTER TABLE \"user_options\" ALTER COLUMN \"email_previous_replies\" TYPE integer")
   -> 0.0003s
-- change_column_default(:user_options, :email_previous_replies, 2)
   -> 0.0016s
-- change_column_null(:user_options, :email_previous_replies, false, 2)
   -> 0.0026s
-- execute("UPDATE user_options SET email_previous_replies = 2")
   -> 0.0002s
== 20160225095306 AddEmailInReplyToToUserOptions: migrated (0.0074s) ==========

== 20160302063432 RebuildDirectoryItemWithIndex: migrating ====================
-- index_name(:directory_items, {:column=>[:period_type]})
   -> 0.0000s
-- index_name_exists?(:directory_items, "index_directory_items_on_period_type")
   -> 0.0006s
-- remove_index(:directory_items, {:column=>[:period_type], :name=>"index_directory_items_on_period_type"})
   -> 0.0013s
-- execute("TRUNCATE TABLE directory_items RESTART IDENTITY")
   -> 0.0004s
-- add_index(:directory_items, [:period_type, :user_id], {:unique=>true})
   -> 0.0015s
== 20160302063432 RebuildDirectoryItemWithIndex: migrated (0.0050s) ===========

== 20160302104253 AddLikeNotificationFrequencyToUserOptions: migrating ========
-- add_column(:user_options, :like_notification_frequency, :integer, {:null=>false, :default=>1})
   -> 0.0017s
== 20160302104253 AddLikeNotificationFrequencyToUserOptions: migrated (0.0027s)

== 20160302170230 RenameDigestAfterDaysToDigestAfterMinutes: migrating ========
-- rename_column(:user_options, :digest_after_days, :digest_after_minutes)
   -> 0.0013s
-- execute("UPDATE user_options SET digest_after_minutes = digest_after_minutes * 1440 WHERE digest_after_minutes IS NOT NULL")
   -> 0.0003s
-- execute("UPDATE site_settings SET value = value::integer * 1440 WHERE name = 'default_email_digest_frequency' AND value IS NOT NULL")
   -> 0.0002s
== 20160302170230 RenameDigestAfterDaysToDigestAfterMinutes: migrated (0.0027s)

== 20160303183607 ClearCommonPasswordsCache: migrating ========================
== 20160303183607 ClearCommonPasswordsCache: migrated (0.0011s) ===============

== 20160303234317 AddRejectionMessageToIncomingEmail: migrating ===============
-- add_column(:incoming_emails, :rejection_message, :text, {})
   -> 0.0003s
== 20160303234317 AddRejectionMessageToIncomingEmail: migrated (0.0013s) ======

== 20160307190919 CreateEmailChangeRequests: migrating ========================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:email_change_requests, {:id=>:integer})
   -> 0.0016s
-- add_index(:email_change_requests, :user_id)
   -> 0.0013s
== 20160307190919 CreateEmailChangeRequests: migrated (0.0038s) ===============

== 20160308193142 RenameConfirmTranslationKey: migrating ======================
-- execute("UPDATE translation_overrides SET translation_key = 'user_notifications.confirm_new_email.subject_template'\n               WHERE translation_key = 'user_notifications.authorize_email.subject_template'")
   -> 0.0003s
-- execute("UPDATE translation_overrides SET translation_key = 'user_notifications.confirm_new_email.text_body_template'\n               WHERE translation_key = 'user_notifications.authorize_email.text_body_template'")
   -> 0.0001s
== 20160308193142 RenameConfirmTranslationKey: migrated (0.0014s) =============

== 20160309073132 AddMailingListModeFrequency: migrating ======================
-- add_column(:user_options, :mailing_list_mode_frequency, :integer, {:default=>0, :null=>false})
   -> 0.0022s
== 20160309073132 AddMailingListModeFrequency: migrated (0.0035s) =============

== 20160317174357 CreateGivenDailyLikes: migrating ============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:given_daily_likes, {:id=>false, :force=>true})
   -> 0.0010s
-- add_index(:given_daily_likes, [:user_id, :given_date], {:unique=>true})
   -> 0.0014s
-- add_index(:given_daily_likes, [:limit_reached, :user_id])
   -> 0.0013s
-- execute("SELECT value FROM site_settings WHERE name = 'max_likes_per_day'")
   -> 0.0002s
-- execute("INSERT INTO given_daily_likes (user_id, likes_given, limit_reached, given_date)\n             SELECT pa.user_id,\n                    COUNT(*),\n                    CASE WHEN COUNT(*) >= 50 THEN true\n                    ELSE false\n                    END,\n                    pa.created_at::date\n             FROM post_actions AS pa\n             WHERE pa.post_action_type_id = 2\n               AND pa.deleted_at IS NULL\n             GROUP BY pa.user_id, pa.created_at::date")
   -> 0.0005s
== 20160317174357 CreateGivenDailyLikes: migrated (0.0056s) ===================

== 20160317201955 AddIncludeTl0InDigestsToUserOptions: migrating ==============
-- add_column(:user_options, :include_tl0_in_digests, :boolean, {:default=>false})
   -> 0.0014s
== 20160317201955 AddIncludeTl0InDigestsToUserOptions: migrated (0.0026s) =====

== 20160321164925 ClosePollsInClosedTopics: migrating =========================
== 20160321164925 ClosePollsInClosedTopics: migrated (0.0151s) ================

== 20160326001747 AddUserFirstVisit: migrating ================================
-- add_column(:users, :first_seen_at, :datetime, {})
   -> 0.0004s
== 20160326001747 AddUserFirstVisit: migrated (0.0014s) =======================

== 20160329101122 RemoveWikiColor: migrating ==================================
-- execute("DELETE FROM color_scheme_colors WHERE name = 'wiki'")
   -> 0.0002s
== 20160329101122 RemoveWikiColor: migrated (0.0011s) =========================

== 20160405172827 CreateUserFirsts: migrating =================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:user_firsts, {:force=>true, :id=>:integer})
   -> 0.0014s
-- add_index(:user_firsts, [:user_id, :first_type], {:unique=>true})
   -> 0.0014s
== 20160405172827 CreateUserFirsts: migrated (0.0038s) ========================

== 20160407160756 RemoveUserFirsts: migrating =================================
-- table_exists?(:user_firsts)
   -> 0.0004s
-- drop_table(:user_firsts)
   -> 0.0006s
== 20160407160756 RemoveUserFirsts: migrated (0.0019s) ========================

== 20160407180149 CreateOnceoffLogs: migrating ================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:onceoff_logs, {:id=>:integer})
   -> 0.0017s
-- add_index(:onceoff_logs, :job_name)
   -> 0.0013s
== 20160407180149 CreateOnceoffLogs: migrated (0.0041s) =======================

== 20160408131959 AddShowOnUserCardToUserFields: migrating ====================
-- add_column(:user_fields, :show_on_user_card, :boolean, {:default=>false, :null=>false})
   -> 0.0021s
== 20160408131959 AddShowOnUserCardToUserFields: migrated (0.0032s) ===========

== 20160408175727 AddCompiledJsToTranslationOverrides: migrating ==============
-- add_column(:translation_overrides, :compiled_js, :text, {:null=>true})
   -> 0.0004s
== 20160408175727 AddCompiledJsToTranslationOverrides: migrated (0.0013s) =====

== 20160418065403 AddBounceKeyToEmailLog: migrating ===========================
-- add_column(:email_logs, :bounce_key, :string, {})
   -> 0.0003s
== 20160418065403 AddBounceKeyToEmailLog: migrated (0.0013s) ==================

== 20160420172330 AddIsAutoGeneratedToIncomingEmails: migrating ===============
-- add_column(:incoming_emails, :is_auto_generated, :boolean, {:default=>false})
   -> 0.0019s
== 20160420172330 AddIsAutoGeneratedToIncomingEmails: migrated (0.0028s) ======

== 20160425141954 FixIncomingEmailsIndices: migrating =========================
-- add_index(:incoming_emails, :post_id)
   -> 0.0013s
== 20160425141954 FixIncomingEmailsIndices: migrated (0.0022s) ================

== 20160427202222 AddSupportForBouncedEmails: migrating =======================
-- add_column(:email_logs, :bounced, :boolean, {:null=>false, :default=>false})
   -> 0.0021s
-- add_column(:incoming_emails, :is_bounce, :boolean, {:null=>false, :default=>false})
   -> 0.0019s
-- add_column(:user_stats, :bounce_score, :integer, {:null=>false, :default=>0})
   -> 0.0010s
-- add_column(:user_stats, :reset_bounce_score_after, :datetime, {})
   -> 0.0002s
== 20160427202222 AddSupportForBouncedEmails: migrated (0.0061s) ==============

== 20160503205953 CreateTags: migrating =======================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:tags, {:id=>:integer})
   -> 0.0015s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:topic_tags, {:id=>:integer})
   -> 0.0010s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:tag_users, {:id=>:integer})
   -> 0.0010s
-- add_index(:tags, :name, {:unique=>true})
   -> 0.0010s
-- add_index(:topic_tags, [:topic_id, :tag_id], {:unique=>true})
   -> 0.0011s
-- add_index(:tag_users, [:user_id, :tag_id, :notification_level], {:name=>"idx_tag_users_ix1", :unique=>true})
   -> 0.0012s
-- add_index(:tag_users, [:tag_id, :user_id, :notification_level], {:name=>"idx_tag_users_ix2", :unique=>true})
   -> 0.0015s
== 20160503205953 CreateTags: migrated (0.0095s) ==============================

== 20160514100852 RemoveInvalidTopicUser: migrating ===========================
-- execute("      DELETE FROM topic_users\n       USING topic_users tu\n   LEFT JOIN users u ON u.id = tu.user_id\n       WHERE u.id IS NULL\n         AND topic_users.id = tu.id\n")
   -> 0.0005s
== 20160514100852 RemoveInvalidTopicUser: migrated (0.0014s) ==================

== 20160520022627 ShortenTopicCustomFieldsIndex: migrating ====================
-- index_name(:topic_custom_fields, {:column=>:value})
   -> 0.0000s
-- index_name_exists?(:topic_custom_fields, "index_topic_custom_fields_on_value")
   -> 0.0005s
-- remove_index(:topic_custom_fields, {:column=>:value, :name=>"index_topic_custom_fields_on_value"})
   -> 0.0013s
-- add_index(:topic_custom_fields, [:value, :name], {:name=>"topic_custom_fields_value_key_idx", :where=>"value IS NOT NULL AND char_length(value) < 400"})
   -> 0.0010s
== 20160520022627 ShortenTopicCustomFieldsIndex: migrated (0.0036s) ===========

== 20160527015355 CorrectMailingListModeFrequency: migrating ==================
-- execute("UPDATE user_options SET mailing_list_mode_frequency = 1 where mailing_list_mode")
   -> 0.0003s
== 20160527015355 CorrectMailingListModeFrequency: migrated (0.0011s) =========

== 20160527191614 CreateCategoryTags: migrating ===============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:category_tags, {:id=>:integer})
   -> 0.0014s
-- add_index(:category_tags, [:category_id, :tag_id], {:name=>"idx_category_tags_ix1", :unique=>true})
   -> 0.0013s
-- add_index(:category_tags, [:tag_id, :category_id], {:name=>"idx_category_tags_ix2", :unique=>true})
   -> 0.0011s
== 20160527191614 CreateCategoryTags: migrated (0.0046s) ======================

== 20160530003739 CreateSchedulerStats: migrating =============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:scheduler_stats, {:id=>:integer})
   -> 0.0016s
== 20160530003739 CreateSchedulerStats: migrated (0.0026s) ====================

== 20160530203810 AddMessageIdToEmailLogs: migrating ==========================
-- add_column(:email_logs, :message_id, :string, {})
   -> 0.0003s
-- add_index(:email_logs, :message_id)
   -> 0.0011s
== 20160530203810 AddMessageIdToEmailLogs: migrated (0.0023s) =================

== 20160602164008 CreateTagGroups: migrating ==================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:tag_groups, {:id=>:integer})
   -> 0.0015s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:tag_group_memberships, {:id=>:integer})
   -> 0.0010s
-- add_index(:tag_group_memberships, [:tag_group_id, :tag_id], {:unique=>true})
   -> 0.0010s
== 20160602164008 CreateTagGroups: migrated (0.0045s) =========================

== 20160606204319 CreateCategoryTagGroups: migrating ==========================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:category_tag_groups, {:id=>:integer})
   -> 0.0010s
-- add_index(:category_tag_groups, [:category_id, :tag_group_id], {:name=>"idx_category_tag_groups_ix1", :unique=>true})
   -> 0.0010s
== 20160606204319 CreateCategoryTagGroups: migrated (0.0031s) =================

== 20160607213656 AddTagGroupOptions: migrating ===============================
-- add_column(:tag_groups, :parent_tag_id, :integer, {})
   -> 0.0003s
-- add_column(:tag_groups, :one_per_topic, :boolean, {:default=>false})
   -> 0.0019s
== 20160607213656 AddTagGroupOptions: migrated (0.0032s) ======================

== 20160609203508 RemoveTagCountFromTagGroups: migrating ======================
-- remove_column(:tag_groups, :tag_count)
   -> 0.0003s
== 20160609203508 RemoveTagCountFromTagGroups: migrated (0.0011s) =============

== 20160615024524 RenameDigestUnsbscribeKeys: migrating =======================
-- rename_table(:digest_unsubscribe_keys, :unsubscribe_keys)
   -> 0.0029s
-- add_column(:unsubscribe_keys, :unsubscribe_key_type, :string, {})
   -> 0.0006s
-- add_column(:unsubscribe_keys, :topic_id, :int, {})
   -> 0.0002s
-- add_column(:unsubscribe_keys, :post_id, :int, {})
   -> 0.0001s
-- execute("UPDATE unsubscribe_keys SET unsubscribe_key_type = 'digest' WHERE unsubscribe_key_type IS NULL")
   -> 0.0002s
== 20160615024524 RenameDigestUnsbscribeKeys: migrated (0.0050s) ==============

== 20160615165447 RenameNumFlagsToBlockNewUser: migrating =====================
-- execute("update site_settings set name = 'num_spam_flags_to_block_new_user' where name = 'num_flags_to_block_new_user'")
   -> 0.0002s
== 20160615165447 RenameNumFlagsToBlockNewUser: migrated (0.0009s) ============

== 20160627104436 UseHttpsNameChangeInSiteSettings: migrating =================
-- execute("UPDATE site_settings SET name = 'force_https' WHERE name = 'use_https'")
   -> 0.0002s
== 20160627104436 UseHttpsNameChangeInSiteSettings: migrated (0.0010s) ========

== 20160707195549 AddCompilerVersionToSiteCustomizations: migrating ===========
-- add_column(:site_customizations, :compiler_version, :integer, {:default=>0, :null=>false})
   -> 0.0019s
== 20160707195549 AddCompilerVersionToSiteCustomizations: migrated (0.0042s) ==

== 20160716112354 RemoveEditHistoryPublic: migrating ==========================
-- remove_column(:user_options, :edit_history_public)
   -> 0.0003s
== 20160716112354 RemoveEditHistoryPublic: migrated (0.0017s) =================

== 20160719002225 AddDeletedPostIndexToPosts: migrating =======================
-- add_index(:posts, [:topic_id, :post_number], {:where=>"deleted_at IS NOT NULL", :name=>"idx_posts_deleted_posts"})
   -> 0.0015s
== 20160719002225 AddDeletedPostIndexToPosts: migrated (0.0025s) ==============

== 20160722071221 AddAuthTokenCreatedAtToUsers: migrating =====================
-- add_column(:users, :auth_token_created_at, :datetime, {:null=>true})
   -> 0.0003s
== 20160722071221 AddAuthTokenCreatedAtToUsers: migrated (0.0013s) ============

== 20160725015749 RenameAuthTokenCreatedAt: migrating =========================
-- rename_column(:users, :auth_token_created_at, :auth_token_updated_at)
   -> 0.0028s
== 20160725015749 RenameAuthTokenCreatedAt: migrated (0.0036s) ================

== 20160727233044 CreateDevelopersTable: migrating ============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:developers, {:id=>:integer})
   -> 0.0010s
== 20160727233044 CreateDevelopersTable: migrated (0.0018s) ===================

== 20160815002002 AddUserApiKeys: migrating ===================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:user_api_keys, {:id=>:integer})
   -> 0.0016s
-- add_index(:user_api_keys, [:key], {:unique=>true})
   -> 0.0013s
-- add_index(:user_api_keys, [:user_id])
   -> 0.0016s
-- add_index(:user_api_keys, [:client_id])
   -> 0.0011s
== 20160815002002 AddUserApiKeys: migrated (0.0069s) ==========================

== 20160815210156 AddFlairUrlToGroups: migrating ==============================
-- add_column(:groups, :flair_url, :string, {})
   -> 0.0003s
-- add_column(:groups, :flair_bg_color, :string, {})
   -> 0.0002s
== 20160815210156 AddFlairUrlToGroups: migrated (0.0015s) =====================

== 20160816052836 UserApiClientIdIsUnique: migrating ==========================
-- index_name(:user_api_keys, {:column=>[:client_id]})
   -> 0.0000s
-- index_name_exists?(:user_api_keys, "index_user_api_keys_on_client_id")
   -> 0.0006s
-- remove_index(:user_api_keys, {:column=>[:client_id], :name=>"index_user_api_keys_on_client_id"})
   -> 0.0017s
-- add_index(:user_api_keys, [:client_id], {:unique=>true})
   -> 0.0011s
== 20160816052836 UserApiClientIdIsUnique: migrated (0.0043s) =================

== 20160816063534 AddRevokedAtToUserApiKeys: migrating ========================
-- add_column(:user_api_keys, :revoked_at, :datetime, {})
   -> 0.0003s
== 20160816063534 AddRevokedAtToUserApiKeys: migrated (0.0015s) ===============

== 20160823171911 AddPathWhitelistToEmbeddableHosts: migrating ================
-- add_column(:embeddable_hosts, :path_whitelist, :string, {})
   -> 0.0003s
== 20160823171911 AddPathWhitelistToEmbeddableHosts: migrated (0.0017s) =======

== 20160826195018 AddFlairColorToGroups: migrating ============================
-- add_column(:groups, :flair_color, :string, {})
   -> 0.0004s
== 20160826195018 AddFlairColorToGroups: migrated (0.0013s) ===================

== 20160905082217 CreateWebHookEventTypes: migrating ==========================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:web_hook_event_types, {:id=>:integer})
   -> 0.0014s
== 20160905082217 CreateWebHookEventTypes: migrated (0.0022s) =================

== 20160905082248 CreateWebHooks: migrating ===================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:web_hooks, {:id=>:integer})
   -> 0.0024s
== 20160905082248 CreateWebHooks: migrated (0.0032s) ==========================

== 20160905084502 CreateWebHookEvents: migrating ==============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:web_hook_events, {:id=>:integer})
   -> 0.0030s
== 20160905084502 CreateWebHookEvents: migrated (0.0041s) =====================

== 20160905085445 CreateJoinTableWebHooksWebHookEventTypes: migrating =========
-- create_join_table(:web_hooks, :web_hook_event_types, {:column_options=>{:type=>:integer}})
   -> 0.0004s
-- add_index(:web_hook_event_types_hooks, [:web_hook_event_type_id, :web_hook_id], {:name=>"idx_web_hook_event_types_hooks_on_ids", :unique=>true})
   -> 0.0011s
== 20160905085445 CreateJoinTableWebHooksWebHookEventTypes: migrated (0.0024s)

== 20160905091958 CreateJoinTableWebHooksGroups: migrating ====================
-- create_join_table(:web_hooks, :groups, {:column_options=>{:type=>:integer}})
   -> 0.0004s
-- add_index(:groups_web_hooks, [:web_hook_id, :group_id], {:unique=>true})
   -> 0.0010s
== 20160905091958 CreateJoinTableWebHooksGroups: migrated (0.0023s) ===========

== 20160905092148 CreateJoinTableWebHooksCategories: migrating ================
-- create_join_table(:web_hooks, :categories, {:column_options=>{:type=>:integer}})
   -> 0.0006s
-- add_index(:categories_web_hooks, [:web_hook_id, :category_id], {:unique=>true})
   -> 0.0011s
== 20160905092148 CreateJoinTableWebHooksCategories: migrated (0.0025s) =======

== 20160906200439 AddViaWizardToColorSchemes: migrating =======================
-- add_column(:color_schemes, :via_wizard, :boolean, {:default=>false, :null=>false})
   -> 0.0015s
-- add_column(:color_schemes, :theme_id, :string, {:null=>true})
   -> 0.0002s
== 20160906200439 AddViaWizardToColorSchemes: migrated (0.0027s) ==============

== 20160919003141 AddAvatarUrlToFacebookInfo: migrating =======================
-- add_column(:facebook_user_infos, :avatar_url, :string, {})
   -> 0.0003s
== 20160919003141 AddAvatarUrlToFacebookInfo: migrated (0.0011s) ==============

== 20160919054014 AddFieldsToFacebookUserInfo: migrating ======================
-- add_column(:facebook_user_infos, :about_me, :text, {})
   -> 0.0003s
-- add_column(:facebook_user_infos, :location, :string, {})
   -> 0.0002s
-- add_column(:facebook_user_infos, :website, :text, {})
   -> 0.0002s
== 20160919054014 AddFieldsToFacebookUserInfo: migrated (0.0016s) =============

== 20160920165833 AddModeratorToInvites: migrating ============================
-- add_column(:invites, :moderator, :boolean, {:default=>false, :null=>false})
   -> 0.0017s
== 20160920165833 AddModeratorToInvites: migrated (0.0028s) ===================

== 20160930123330 AddNotificationLevelWhenReplying: migrating =================
-- add_column(:user_options, :notification_level_when_replying, :integer, {})
   -> 0.0003s
== 20160930123330 AddNotificationLevelWhenReplying: migrated (0.0012s) ========

== 20161010230853 SingleSignOnIncreaseExternalAvatarUrl: migrating ============
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:single_sign_on_records)
   -> 0.0000s
-- execute("ALTER TABLE \"single_sign_on_records\" ALTER COLUMN \"external_avatar_url\" TYPE character varying(1000)")
   -> 0.0017s
== 20161010230853 SingleSignOnIncreaseExternalAvatarUrl: migrated (0.0027s) ===

== 20161013012136 AddScopesToUserApiKeys: migrating ===========================
-- add_column(:user_api_keys, :scopes, :text, {:array=>true, :null=>false, :default=>[]})
   -> 0.0020s
-- execute("UPDATE user_api_keys SET scopes = scopes || ARRAY['write'] WHERE write")
   -> 0.0004s
-- execute("UPDATE user_api_keys SET scopes = scopes || ARRAY['read'] WHERE read")
   -> 0.0002s
-- execute("UPDATE user_api_keys SET scopes = scopes || ARRAY['push'] WHERE push")
   -> 0.0001s
-- remove_column(:user_api_keys, :read)
   -> 0.0002s
-- remove_column(:user_api_keys, :write)
   -> 0.0001s
-- remove_column(:user_api_keys, :push)
   -> 0.0001s
== 20161013012136 AddScopesToUserApiKeys: migrated (0.0041s) ==================

== 20161014171034 AddDirectoryItemsIndexes: migrating =========================
-- add_index(:directory_items, :likes_received, {:algorithm=>:concurrently})
   -> 0.0014s
-- add_index(:directory_items, :likes_given, {:algorithm=>:concurrently})
   -> 0.0014s
-- add_index(:directory_items, :topics_entered, {:algorithm=>:concurrently})
   -> 0.0015s
-- add_index(:directory_items, :topic_count, {:algorithm=>:concurrently})
   -> 0.0018s
-- add_index(:directory_items, :post_count, {:algorithm=>:concurrently})
   -> 0.0017s
-- add_index(:directory_items, :posts_read, {:algorithm=>:concurrently})
   -> 0.0018s
-- add_index(:directory_items, :days_visited, {:algorithm=>:concurrently})
   -> 0.0022s
== 20161014171034 AddDirectoryItemsIndexes: migrated (0.0134s) ================

== 20161025083648 FixCategoryLogoAndBackgroundUrls: migrating =================
== 20161025083648 FixCategoryLogoAndBackgroundUrls: migrated (0.0011s) ========

== 20161029181306 AddImageUrlToPosts: migrating ===============================
-- add_column(:posts, :image_url, :string, {})
   -> 0.0003s
== 20161029181306 AddImageUrlToPosts: migrated (0.0012s) ======================

== 20161031183811 AddSortFieldsToCategories: migrating ========================
-- add_column(:categories, :sort_order, :string, {})
   -> 0.0003s
-- add_column(:categories, :sort_ascending, :boolean, {})
   -> 0.0003s
== 20161031183811 AddSortFieldsToCategories: migrated (0.0017s) ===============

== 20161102024700 AddPostUploadsIndexes: migrating ============================
-- add_index(:post_uploads, :post_id)
   -> 0.0013s
-- add_index(:post_uploads, :upload_id)
   -> 0.0012s
== 20161102024700 AddPostUploadsIndexes: migrated (0.0038s) ===================

== 20161102024818 AddUploadedAvatarIdIndexToUsers: migrating ==================
-- add_index(:users, :uploaded_avatar_id)
   -> 0.0017s
== 20161102024818 AddUploadedAvatarIdIndexToUsers: migrated (0.0028s) =========

== 20161102024838 AddUserAvatarsIndexes: migrating ============================
-- add_index(:user_avatars, :custom_upload_id)
   -> 0.0013s
-- add_index(:user_avatars, :gravatar_upload_id)
   -> 0.0011s
== 20161102024838 AddUserAvatarsIndexes: migrated (0.0034s) ===================

== 20161102024900 AddUserProfilesIndexes: migrating ===========================
-- add_index(:user_profiles, :profile_background)
   -> 0.0014s
-- add_index(:user_profiles, :card_background)
   -> 0.0016s
== 20161102024900 AddUserProfilesIndexes: migrated (0.0041s) ==================

== 20161102024920 AddCategoriesIndexes: migrating =============================
-- add_index(:categories, :logo_url)
   -> 0.0015s
-- add_index(:categories, :background_url)
   -> 0.0020s
== 20161102024920 AddCategoriesIndexes: migrated (0.0048s) ====================

== 20161124020918 AddScoresIndexesToTopTopics: migrating ======================
-- add_index(:top_topics, :daily_score)
   -> 0.0019s
-- add_index(:top_topics, :weekly_score)
   -> 0.0014s
-- add_index(:top_topics, :monthly_score)
   -> 0.0013s
-- add_index(:top_topics, :yearly_score)
   -> 0.0011s
-- add_index(:top_topics, :all_score)
   -> 0.0012s
== 20161124020918 AddScoresIndexesToTopTopics: migrated (0.0079s) =============

== 20161202011139 AddWhisperSupportToTopics: migrating ========================
-- remove_column(:topics, :bookmark_count)
   -> 0.0004s
-- remove_column(:topics, :off_topic_count)
   -> 0.0004s
-- remove_column(:topics, :illegal_count)
   -> 0.0003s
-- remove_column(:topics, :inappropriate_count)
   -> 0.0003s
-- remove_column(:topics, :notify_user_count)
   -> 0.0002s
-- add_column(:topics, :highest_staff_post_number, :int, {:default=>0, :null=>false})
   -> 0.0038s
-- execute("UPDATE topics SET highest_staff_post_number = highest_post_number")
   -> 0.0007s
== 20161202011139 AddWhisperSupportToTopics: migrated (0.0074s) ===============

== 20161202034856 AddUploadsToCategories: migrating ===========================
-- add_column(:categories, :uploaded_logo_id, :integer, {:index=>true})
   -> 0.0003s
-- add_column(:categories, :uploaded_background_id, :integer, {:index=>true})
   -> 0.0002s
-- execute("UPDATE categories\nSET uploaded_logo_id = u.id\nFROM categories c\nLEFT JOIN uploads u ON u.url = c.logo_url\nWHERE u.url IS NOT NULL\n")
   -> 0.0007s
-- execute("UPDATE categories\nSET uploaded_background_id = u.id\nFROM categories c\nLEFT JOIN uploads u ON u.url = c.background_url\nWHERE u.url IS NOT NULL\n")
   -> 0.0004s
== 20161202034856 AddUploadsToCategories: migrated (0.0025s) ==================

== 20161205001727 AddTopicColumnsBack: migrating ==============================
-- add_column(:topics, :bookmark_count, :int, {})
   -> 0.0004s
-- add_column(:topics, :off_topic_count, :int, {})
   -> 0.0002s
-- add_column(:topics, :illegal_count, :int, {})
   -> 0.0003s
-- add_column(:topics, :inappropriate_count, :int, {})
   -> 0.0003s
-- add_column(:topics, :notify_user_count, :int, {})
   -> 0.0002s
== 20161205001727 AddTopicColumnsBack: migrated (0.0027s) =====================

== 20161205065743 AddBioToGroups: migrating ===================================
-- add_column(:groups, :bio_raw, :text, {})
   -> 0.0003s
-- add_column(:groups, :bio_cooked, :text, {})
   -> 0.0002s
== 20161205065743 AddBioToGroups: migrated (0.0014s) ==========================

== 20161207030057 AddPublicToGroups: migrating ================================
-- add_column(:groups, :public, :boolean, {:default=>:false, :null=>false})
   -> 0.0024s
== 20161207030057 AddPublicToGroups: migrated (0.0037s) =======================

== 20161208064834 CreateGroupHistories: migrating =============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:group_histories, {:id=>:integer})
   -> 0.0040s
-- add_index(:group_histories, :group_id)
   -> 0.0018s
-- add_index(:group_histories, :acting_user_id)
   -> 0.0015s
-- add_index(:group_histories, :target_user_id)
   -> 0.0012s
== 20161208064834 CreateGroupHistories: migrated (0.0095s) ====================

== 20161212123649 AddAllowMembershipRequestsToGroups: migrating ===============
-- add_column(:groups, :allow_membership_requests, :boolean, {:default=>false, :null=>false})
   -> 0.0025s
== 20161212123649 AddAllowMembershipRequestsToGroups: migrated (0.0034s) ======

== 20161213073938 AddFullNameToGroups: migrating ==============================
-- add_column(:groups, :full_name, :string, {})
   -> 0.0003s
== 20161213073938 AddFullNameToGroups: migrated (0.0011s) =====================

== 20161215201907 MigrateFeaturedLinkFields: migrating ========================
-- add_column(:topics, :featured_link, :string, {})
   -> 0.0003s
-- add_column(:categories, :topic_featured_link_allowed, :boolean, {:default=>true})
   -> 0.0028s
== 20161215201907 MigrateFeaturedLinkFields: migrated (0.0040s) ===============

== 20161216101352 AddAllTopicsWikiToCategories: migrating =====================
-- add_column(:categories, :all_topics_wiki, :boolean, {:default=>false, :null=>false})
   -> 0.0028s
== 20161216101352 AddAllTopicsWikiToCategories: migrated (0.0040s) ============

== 20170124181409 AddUserAuthTokens: migrating ================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:user_auth_tokens, {:id=>:integer})
   -> 0.0023s
-- add_index(:user_auth_tokens, [:auth_token])
   -> 0.0014s
-- add_index(:user_auth_tokens, [:prev_auth_token])
   -> 0.0012s
-- execute("INSERT INTO user_auth_tokens(user_id, auth_token, prev_auth_token, legacy, updated_at, created_at, rotated_at)\nSELECT id, auth_token, auth_token, true, auth_token_updated_at, auth_token_updated_at, auth_token_updated_at\nFROM users\nWHERE auth_token_updated_at IS NOT NULL AND auth_token IS NOT NULL\n")
   -> 0.0004s
== 20170124181409 AddUserAuthTokens: migrated (0.0063s) =======================

== 20170201085745 CreateCustomEmojis: migrating ===============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:custom_emojis, {:id=>:integer})
   -> 0.0017s
-- add_index(:custom_emojis, :name, {:unique=>true})
   -> 0.0012s
== 20170201085745 CreateCustomEmojis: migrated (0.0074s) ======================

== 20170213180857 AddUserAuthTokenLog: migrating ==============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:user_auth_token_logs, {:id=>:integer})
   -> 0.0023s
== 20170213180857 AddUserAuthTokenLog: migrated (0.0047s) =====================

== 20170215151505 AddSeenAtToUserAuthToken: migrating =========================
-- add_column(:user_auth_tokens, :seen_at, :datetime, {})
   -> 0.0003s
== 20170215151505 AddSeenAtToUserAuthToken: migrated (0.0015s) ================

== 20170221204204 AddShowSubcategoryListToCategories: migrating ===============
-- add_column(:categories, :show_subcategory_list, :boolean, {:default=>false})
   -> 0.0028s
-- execute("select count(1) from site_settings where name = 'show_subcategory_list' and value = 't'")
   -> 0.0002s
== 20170221204204 AddShowSubcategoryListToCategories: migrated (0.0039s) ======

== 20170222173036 MakeUserAuthTokenIndexUnique: migrating =====================
-- index_name(:user_auth_tokens, {:column=>[:auth_token]})
   -> 0.0000s
-- index_name_exists?(:user_auth_tokens, "index_user_auth_tokens_on_auth_token")
   -> 0.0006s
-- remove_index(:user_auth_tokens, {:column=>[:auth_token], :name=>"index_user_auth_tokens_on_auth_token"})
   -> 0.0015s
-- index_name(:user_auth_tokens, {:column=>[:prev_auth_token]})
   -> 0.0000s
-- index_name_exists?(:user_auth_tokens, "index_user_auth_tokens_on_prev_auth_token")
   -> 0.0006s
-- remove_index(:user_auth_tokens, {:column=>[:prev_auth_token], :name=>"index_user_auth_tokens_on_prev_auth_token"})
   -> 0.0013s
-- add_index(:user_auth_tokens, [:auth_token], {:unique=>true})
   -> 0.0011s
-- add_index(:user_auth_tokens, [:prev_auth_token], {:unique=>true})
   -> 0.0010s
== 20170222173036 MakeUserAuthTokenIndexUnique: migrated (0.0071s) ============

== 20170227211458 AddFeaturedTopicsToCategories: migrating ====================
-- add_column(:categories, :num_featured_topics, :integer, {:default=>3})
   -> 0.0042s
-- execute("select value from site_settings where name = 'category_featured_topics' and value != '3'")
   -> 0.0002s
== 20170227211458 AddFeaturedTopicsToCategories: migrated (0.0053s) ===========

== 20170301215150 AddDefaultViewToCategories: migrating =======================
-- add_column(:categories, :default_view, :string, {:null=>true, :limit=>50})
   -> 0.0004s
== 20170301215150 AddDefaultViewToCategories: migrated (0.0015s) ==============

== 20170303070706 AddIndexToTopicViewItems: migrating =========================
-- add_index(:topic_views, [:user_id, :viewed_at])
   -> 0.0021s
== 20170303070706 AddIndexToTopicViewItems: migrated (0.0038s) ================

== 20170307181800 AddPathToUserAuthTokenLog: migrating ========================
-- add_column(:user_auth_token_logs, :path, :string, {})
   -> 0.0003s
== 20170307181800 AddPathToUserAuthTokenLog: migrated (0.0012s) ===============

== 20170308201552 AddSubcategoryListStyleToCategories: migrating ==============
-- add_column(:categories, :subcategory_list_style, :string, {:limit=>50, :default=>"rows_with_featured_topics"})
   -> 0.0032s
-- execute("select value from site_settings where name = 'desktop_category_page_style' and value != 'categories_with_featured_topics'")
   -> 0.0003s
== 20170308201552 AddSubcategoryListStyleToCategories: migrated (0.0047s) =====

== 20170313192741 AddThemes: migrating ========================================
-- rename_table(:site_customizations, :themes)
   -> 0.0041s
-- add_column(:themes, :user_selectable, :bool, {:null=>false, :default=>false})
   -> 0.0028s
-- add_column(:themes, :hidden, :bool, {:null=>false, :default=>false})
   -> 0.0034s
-- add_column(:themes, :color_scheme_id, :integer, {})
   -> 0.0004s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:child_themes, {:id=>:integer})
   -> 0.0016s
-- add_index(:child_themes, [:parent_theme_id, :child_theme_id], {:unique=>true})
   -> 0.0016s
-- add_index(:child_themes, [:child_theme_id, :parent_theme_id], {:unique=>true})
   -> 0.0013s
-- execute("DELETE FROM color_schemes WHERE versioned_id IS NOT NULL")
   -> 0.0003s
-- remove_column(:color_schemes, :versioned_id)
   -> 0.0003s
-- execute("SELECT count(*) FROM themes WHERE enabled")
   -> 0.0003s
-- execute("SELECT id FROM color_schemes WHERE enabled")
   -> 0.0002s
-- execute("SELECT key, id FROM themes WHERE enabled")
   -> 0.0002s
-- remove_column(:themes, :enabled)
   -> 0.0003s
-- remove_column(:color_schemes, :enabled)
   -> 0.0003s
== 20170313192741 AddThemes: migrated (0.0204s) ===============================

== 20170322065911 CreateTopicStatusUpdates: migrating =========================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:topic_status_updates, {:id=>:integer})
   -> 0.0018s
-- add_index(:topic_status_updates, :user_id)
   -> 0.0013s
== 20170322065911 CreateTopicStatusUpdates: migrated (0.0043s) ================

== 20170322155537 AddThemeToStylesheetCache: migrating ========================
-- add_column(:stylesheet_cache, :theme_id, :integer, {:default=>-1, :null=>false})
   -> 0.0020s
-- add_column(:stylesheet_cache, :source_map, :text, {})
   -> 0.0006s
== 20170322155537 AddThemeToStylesheetCache: migrated (0.0036s) ===============

== 20170322191305 AddDefaultTopPeriodToCategories: migrating ==================
-- add_column(:categories, :default_top_period, :string, {:limit=>20, :default=>"all"})
   -> 0.0041s
== 20170322191305 AddDefaultTopPeriodToCategories: migrated (0.0057s) =========

== 20170324032913 MoveAutoCloseColumnsToTopicStatusUpdate: migrating ==========
-- execute("INSERT INTO topic_status_updates(topic_id, user_id, execute_at, status_type, based_on_last_post, created_at, updated_at)\nSELECT\n  t.id,\n  t.auto_close_user_id,\n  t.auto_close_at,\n  1,\n  t.auto_close_based_on_last_post,\n  t.auto_close_started_at,\n  t.auto_close_started_at\nFROM topics t\nWHERE t.auto_close_at IS NOT NULL\nAND t.auto_close_user_id IS NOT NULL\nAND t.auto_close_started_at IS NOT NULL\nAND t.deleted_at IS NULL\n")
   -> 0.0009s
-- execute("WITH selected AS (\n  SELECT tsp.id\n  FROM topic_status_updates tsp\n  JOIN topics t\n  ON t.id = tsp.topic_id\n  WHERE tsp.execute_at < now()\n  OR (t.closed AND tsp.execute_at >= now())\n)\n\nUPDATE topic_status_updates\nSET deleted_at = now(), deleted_by_id = -1\nWHERE id in (SELECT * FROM selected)\n")
   -> 0.0008s
== 20170324032913 MoveAutoCloseColumnsToTopicStatusUpdate: migrated (0.0028s) =

== 20170324144456 AmendCssColumnsInTheme: migrating ===========================
-- rename_column(:themes, :stylesheet, :desktop_scss)
   -> 0.0015s
-- rename_column(:themes, :mobile_stylesheet, :mobile_scss)
   -> 0.0013s
-- rename_column(:themes, :embedded_css, :embedded_scss)
   -> 0.0014s
-- add_column(:themes, :common_scss, :text, {})
   -> 0.0003s
-- remove_column(:themes, :stylesheet_baked)
   -> 0.0004s
-- remove_column(:themes, :mobile_stylesheet_baked)
   -> 0.0002s
-- remove_column(:themes, :embedded_css_baked)
   -> 0.0002s
== 20170324144456 AmendCssColumnsInTheme: migrated (0.0072s) ==================

== 20170328163918 BreakUpThemesTable: migrating ===============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:theme_fields, {:id=>:integer})
   -> 0.0021s
-- add_index(:theme_fields, [:theme_id, :target, :name], {:unique=>true})
   -> 0.0018s
-- execute("      INSERT INTO theme_fields (\n        theme_id,\n        target,\n        name,\n        value,\n        created_at,\n        updated_at\n      )\n      SELECT id, 0, 'embedded_scss', embedded_scss, created_at, updated_at\n      FROM themes WHERE embedded_scss IS NOT NULL AND LENGTH(BTRIM(embedded_scss)) > 0\n")
   -> 0.0006s
-- remove_column(:themes, "embedded_scss")
   -> 0.0004s
-- execute("      INSERT INTO theme_fields (\n        theme_id,\n        target,\n        name,\n        value,\n        created_at,\n        updated_at\n      )\n      SELECT id, 0, 'scss', common_scss, created_at, updated_at\n      FROM themes WHERE common_scss IS NOT NULL AND LENGTH(BTRIM(common_scss)) > 0\n")
   -> 0.0004s
-- remove_column(:themes, "common_scss")
   -> 0.0004s
-- execute("      INSERT INTO theme_fields (\n        theme_id,\n        target,\n        name,\n        value,\n        created_at,\n        updated_at\n      )\n      SELECT id, 1, 'scss', desktop_scss, created_at, updated_at\n      FROM themes WHERE desktop_scss IS NOT NULL AND LENGTH(BTRIM(desktop_scss)) > 0\n")
   -> 0.0003s
-- remove_column(:themes, "desktop_scss")
   -> 0.0003s
-- execute("      INSERT INTO theme_fields (\n        theme_id,\n        target,\n        name,\n        value,\n        created_at,\n        updated_at\n      )\n      SELECT id, 2, 'scss', mobile_scss, created_at, updated_at\n      FROM themes WHERE mobile_scss IS NOT NULL AND LENGTH(BTRIM(mobile_scss)) > 0\n")
   -> 0.0003s
-- remove_column(:themes, "mobile_scss")
   -> 0.0003s
-- execute("      INSERT INTO theme_fields (\n        theme_id,\n        target,\n        name,\n        value,\n        created_at,\n        updated_at\n      )\n      SELECT id, 0, 'head_tag', head_tag, created_at, updated_at\n      FROM themes WHERE head_tag IS NOT NULL AND LENGTH(BTRIM(head_tag)) > 0\n")
   -> 0.0002s
-- remove_column(:themes, "head_tag")
   -> 0.0002s
-- execute("      INSERT INTO theme_fields (\n        theme_id,\n        target,\n        name,\n        value,\n        created_at,\n        updated_at\n      )\n      SELECT id, 0, 'body_tag', body_tag, created_at, updated_at\n      FROM themes WHERE body_tag IS NOT NULL AND LENGTH(BTRIM(body_tag)) > 0\n")
   -> 0.0003s
-- remove_column(:themes, "body_tag")
   -> 0.0002s
-- execute("      INSERT INTO theme_fields (\n        theme_id,\n        target,\n        name,\n        value,\n        created_at,\n        updated_at\n      )\n      SELECT id, 1, 'header', header, created_at, updated_at\n      FROM themes WHERE header IS NOT NULL AND LENGTH(BTRIM(header)) > 0\n")
   -> 0.0002s
-- remove_column(:themes, "header")
   -> 0.0002s
-- execute("      INSERT INTO theme_fields (\n        theme_id,\n        target,\n        name,\n        value,\n        created_at,\n        updated_at\n      )\n      SELECT id, 2, 'header', mobile_header, created_at, updated_at\n      FROM themes WHERE mobile_header IS NOT NULL AND LENGTH(BTRIM(mobile_header)) > 0\n")
   -> 0.0003s
-- remove_column(:themes, "mobile_header")
   -> 0.0003s
-- execute("      INSERT INTO theme_fields (\n        theme_id,\n        target,\n        name,\n        value,\n        created_at,\n        updated_at\n      )\n      SELECT id, 1, 'after_header', top, created_at, updated_at\n      FROM themes WHERE top IS NOT NULL AND LENGTH(BTRIM(top)) > 0\n")
   -> 0.0003s
-- remove_column(:themes, "top")
   -> 0.0002s
-- execute("      INSERT INTO theme_fields (\n        theme_id,\n        target,\n        name,\n        value,\n        created_at,\n        updated_at\n      )\n      SELECT id, 2, 'after_header', mobile_top, created_at, updated_at\n      FROM themes WHERE mobile_top IS NOT NULL AND LENGTH(BTRIM(mobile_top)) > 0\n")
   -> 0.0002s
-- remove_column(:themes, "mobile_top")
   -> 0.0002s
-- execute("      INSERT INTO theme_fields (\n        theme_id,\n        target,\n        name,\n        value,\n        created_at,\n        updated_at\n      )\n      SELECT id, 1, 'footer', footer, created_at, updated_at\n      FROM themes WHERE footer IS NOT NULL AND LENGTH(BTRIM(footer)) > 0\n")
   -> 0.0003s
-- remove_column(:themes, "footer")
   -> 0.0002s
-- execute("      INSERT INTO theme_fields (\n        theme_id,\n        target,\n        name,\n        value,\n        created_at,\n        updated_at\n      )\n      SELECT id, 2, 'footer', mobile_footer, created_at, updated_at\n      FROM themes WHERE mobile_footer IS NOT NULL AND LENGTH(BTRIM(mobile_footer)) > 0\n")
   -> 0.0003s
-- remove_column(:themes, "mobile_footer")
   -> 0.0003s
-- remove_column(:themes, "head_tag_baked")
   -> 0.0003s
-- remove_column(:themes, "body_tag_baked")
   -> 0.0002s
-- remove_column(:themes, "header_baked")
   -> 0.0002s
-- remove_column(:themes, "footer_baked")
   -> 0.0002s
-- remove_column(:themes, "mobile_footer_baked")
   -> 0.0002s
-- remove_column(:themes, "mobile_header_baked")
   -> 0.0002s
== 20170328163918 BreakUpThemesTable: migrated (0.0143s) ======================

== 20170328203122 AddCompilerVersionToThemeFields: migrating ==================
-- add_column(:theme_fields, :compiler_version, :integer, {:null=>false, :default=>0})
   -> 0.0021s
== 20170328203122 AddCompilerVersionToThemeFields: migrated (0.0035s) =========

== 20170330041605 AddIndexToTopicStatusUpdates: migrating =====================
-- execute("CREATE UNIQUE INDEX idx_topic_id_status_type_deleted_at\nON topic_status_updates(topic_id, status_type)\nWHERE deleted_at IS NULL\n")
   -> 0.0004s
== 20170330041605 AddIndexToTopicStatusUpdates: migrated (0.0014s) ============

== 20170403062717 AddCategoryIdToTopicStatusUpdates: migrating ================
-- add_column(:topic_status_updates, :category_id, :integer, {})
   -> 0.0003s
== 20170403062717 AddCategoryIdToTopicStatusUpdates: migrated (0.0013s) =======

== 20170407154510 RenameThemeId: migrating ====================================
-- rename_column(:color_schemes, :theme_id, :base_scheme_id)
   -> 0.0011s
== 20170407154510 RenameThemeId: migrated (0.0023s) ===========================

== 20170410170923 AddThemeRemoteFields: migrating =============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:remote_themes, {:id=>:integer})
   -> 0.0021s
-- add_column(:themes, :remote_theme_id, :integer, {})
   -> 0.0013s
-- add_index(:themes, :remote_theme_id, {:unique=>true})
   -> 0.0019s
== 20170410170923 AddThemeRemoteFields: migrated (0.0091s) ====================

== 20170413043152 RenameWarnings: migrating ===================================
-- rename_table(:warnings, :user_warnings)
   -> 0.0035s
== 20170413043152 RenameWarnings: migrated (0.0045s) ==========================

== 20170417164715 AddThemeIdToColorScheme: migrating ==========================
-- add_column(:color_schemes, :theme_id, :int, {})
   -> 0.0004s
== 20170417164715 AddThemeIdToColorScheme: migrated (0.0016s) =================

== 20170419193714 AddErrorToThemeFields: migrating ============================
-- add_column(:theme_fields, :error, :string, {})
   -> 0.0004s
== 20170419193714 AddErrorToThemeFields: migrated (0.0047s) ===================

== 20170420163628 AddDefaultNotificationLevelToGroup: migrating ===============
-- add_column(:groups, :default_notification_level, :integer, {:default=>3, :null=>false})
   -> 0.0021s
-- execute("UPDATE groups SET default_notification_level = 2 WHERE id = 2")
   -> 0.0003s
== 20170420163628 AddDefaultNotificationLevelToGroup: migrated (0.0034s) ======

== 20170425083011 AddDeletedAtToTopicEmbeds: migrating ========================
-- add_column(:topic_embeds, :deleted_at, :datetime, {})
   -> 0.0003s
-- add_column(:topic_embeds, :deleted_by_id, :integer, {:null=>true})
   -> 0.0002s
== 20170425083011 AddDeletedAtToTopicEmbeds: migrated (0.0014s) ===============

== 20170425172415 AddErrorToSchedulerStats: migrating =========================
-- add_column(:scheduler_stats, :error, :text, {})
   -> 0.0005s
== 20170425172415 AddErrorToSchedulerStats: migrated (0.0015s) ================

== 20170501191912 AddUploadIdToThemeFields: migrating =========================
-- index_name(:theme_fields, {:column=>[:theme_id, :target, :name]})
   -> 0.0000s
-- index_name_exists?(:theme_fields, "index_theme_fields_on_theme_id_and_target_and_name")
   -> 0.0008s
-- remove_index(:theme_fields, {:column=>[:theme_id, :target, :name], :name=>"index_theme_fields_on_theme_id_and_target_and_name"})
   -> 0.0017s
-- rename_column(:theme_fields, :target, :target_id)
   -> 0.0010s
-- add_column(:theme_fields, :target, :integer, {})
   -> 0.0003s
-- execute("UPDATE theme_fields SET target = target_id")
   -> 0.0002s
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:theme_fields)
   -> 0.0000s
-- execute("ALTER TABLE \"theme_fields\" ALTER COLUMN \"name\" TYPE character varying(30)")
   -> 0.0015s
-- change_column_null(:theme_fields, :name, false, nil)
   -> 0.0001s
-- add_column(:theme_fields, :upload_id, :integer, {})
   -> 0.0002s
-- add_column(:theme_fields, :type_id, :integer, {:null=>false, :default=>0})
   -> 0.0015s
-- add_index(:theme_fields, [:theme_id, :target_id, :type_id, :name], {:unique=>true, :name=>"theme_field_unique_index"})
   -> 0.0013s
-- execute("UPDATE theme_fields SET type_id = 1 WHERE name IN ('scss', 'embedded_scss')")
   -> 0.0002s
== 20170501191912 AddUploadIdToThemeFields: migrated (0.0103s) ================

== 20170505035229 MigrateMailingListDailyUpdatesUsersToDailySummary: migrating
-- change_column_default(:user_options, :mailing_list_mode_frequency, 1)
   -> 0.0016s
-- execute("UPDATE user_options\nSET digest_after_minutes = 1440, email_digests = 't', mailing_list_mode = 'f'\nWHERE mailing_list_mode_frequency = 0 AND mailing_list_mode\n")
   -> 0.0002s
== 20170505035229 MigrateMailingListDailyUpdatesUsersToDailySummary: migrated (0.0027s)

== 20170508183819 AddCssClassNameToEmbeddableHosts: migrating =================
-- add_column(:embeddable_hosts, :class_name, :string, {})
   -> 0.0003s
== 20170508183819 AddCssClassNameToEmbeddableHosts: migrated (0.0012s) ========

== 20170511071355 RemoveConvertPastedImageSiteSetting: migrating ==============
-- execute("DELETE FROM site_settings WHERE name = 'convert_pasted_images_to_hq_jpg'")
   -> 0.0002s
== 20170511071355 RemoveConvertPastedImageSiteSetting: migrated (0.0018s) =====

== 20170511080007 RenameConvertPastedImagesQualitySiteSetting: migrating ======
-- execute("UPDATE site_settings SET name = 'png_to_jpg_quality' WHERE name = 'convert_pasted_images_quality'")
   -> 0.0002s
== 20170511080007 RenameConvertPastedImagesQualitySiteSetting: migrated (0.0009s)

== 20170511184842 RenameTopicStatusUpdatesToTopicTimers: migrating ============
-- rename_table(:topic_status_updates, :topic_timers)
   -> 0.0028s
== 20170511184842 RenameTopicStatusUpdatesToTopicTimers: migrated (0.0038s) ===

== 20170512153318 AddThemeKeyToUserOptions: migrating =========================
-- add_column(:user_options, :theme_key, :string, {})
   -> 0.0007s
== 20170512153318 AddThemeKeyToUserOptions: migrated (0.0016s) ================

== 20170512185227 CreateTopicStatusUpdatesAgain: migrating ====================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:topic_status_updates, {:id=>:integer})
   -> 0.0020s
== 20170512185227 CreateTopicStatusUpdatesAgain: migrated (0.0051s) ===========

== 20170515152725 AddThemeKeySeqToUserOptions: migrating ======================
-- add_column(:user_options, :theme_key_seq, :integer, {:null=>false, :default=>0})
   -> 0.0021s
== 20170515152725 AddThemeKeySeqToUserOptions: migrated (0.0031s) =============

== 20170515203721 AddPublicTypeToTopicTimers: migrating =======================
-- add_column(:topic_timers, :public_type, :boolean, {:default=>true})
   -> 0.0014s
-- execute("DROP INDEX IF EXISTS idx_topic_id_status_type_deleted_at")
   -> 0.0002s
-- execute("CREATE UNIQUE INDEX idx_topic_id_public_type_deleted_at\nON topic_timers (topic_id)\nWHERE public_type = TRUE\nAND deleted_at IS NULL\n")
   -> 0.0004s
== 20170515203721 AddPublicTypeToTopicTimers: migrated (0.0030s) ==============

== 20170602132735 FixGroupAllowMembershipRequests: migrating ==================
-- execute("UPDATE groups g\nSET allow_membership_requests = 'f'\nWHERE NOT EXISTS (SELECT 1 FROM group_users gu WHERE gu.owner = 't' AND gu.group_id = g.id LIMIT 1)\n")
   -> 0.0004s
== 20170602132735 FixGroupAllowMembershipRequests: migrated (0.0012s) =========

== 20170605014820 RemoveAutoCloseColumnsFromTopics: migrating =================
== 20170605014820 RemoveAutoCloseColumnsFromTopics: migrated (0.0008s) ========

== 20170609115401 AddExtensionToTopicLinks: migrating =========================
-- add_column(:topic_links, :extension, :string, {:limit=>10})
   -> 0.0003s
-- add_index(:topic_links, :extension)
   -> 0.0012s
== 20170609115401 AddExtensionToTopicLinks: migrated (0.0026s) ================

== 20170628152322 CreateWatchedWords: migrating ===============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:watched_words, {:id=>:integer})
   -> 0.0018s
-- add_index(:watched_words, [:action, :word], {:unique=>true})
   -> 0.0015s
== 20170628152322 CreateWatchedWords: migrated (0.0043s) ======================

== 20170630083540 AddCustomMessageToInvite: migrating =========================
-- add_column(:invites, :custom_message, :text, {})
   -> 0.0002s
== 20170630083540 AddCustomMessageToInvite: migrated (0.0010s) ================

== 20170703115216 AddExtensionToUploads: migrating ============================
-- add_column(:uploads, :extension, :string, {:limit=>10})
   -> 0.0002s
-- execute("CREATE INDEX index_uploads_on_extension ON uploads(lower(extension))")
   -> 0.0004s
== 20170703115216 AddExtensionToUploads: migrated (0.0015s) ===================

== 20170703144855 AddVisibilityLevelToGroups: migrating =======================
-- add_column(:groups, :visibility_level, :integer, {:default=>0, :null=>false})
   -> 0.0026s
-- execute("UPDATE groups\nSET visibility_level = 1\nWHERE NOT visible\n")
   -> 0.0003s
-- remove_column(:groups, :visible)
   -> 0.0003s
== 20170703144855 AddVisibilityLevelToGroups: migrated (0.0041s) ==============

== 20170704142141 AddVisibleBackToGroups: migrating ===========================
-- add_column(:groups, :visible, :boolean, {:default=>true, :null=>false})
   -> 0.0019s
-- execute("UPDATE groups set visible = false where visibility_level > 0")
   -> 0.0003s
== 20170704142141 AddVisibleBackToGroups: migrated (0.0033s) ==================

== 20170713164357 CreateSearchLogs: migrating =================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:search_logs, {:id=>:integer})
   -> 0.0014s
== 20170713164357 CreateSearchLogs: migrated (0.0024s) ========================

== 20170717084947 CreateUserEmails: migrating =================================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:user_emails, {:id=>:integer})
   -> 0.0016s
-- add_index(:user_emails, :user_id)
   -> 0.0012s
-- add_index(:user_emails, [:user_id, :primary], {:unique=>true})
   -> 0.0012s
-- execute("CREATE UNIQUE INDEX index_user_emails_on_email ON user_emails (lower(email));")
   -> 0.0004s
-- execute("INSERT INTO user_emails (\n  id,\n  user_id,\n  email,\n  \"primary\",\n  created_at,\n  updated_at\n) SELECT\n  id,\n  id,\n  email,\n  'TRUE',\n  created_at,\n  updated_at\nFROM users\n")
   -> 0.0002s
-- change_column_null(:users, :email, true)
   -> 0.0002s
== 20170717084947 CreateUserEmails: migrated (0.0066s) ========================

== 20170725075535 CorrectDefaultEmailMailingListModeFrequency: migrating ======
-- execute("UPDATE site_settings SET value = '1' WHERE value = '0' AND name = 'default_email_mailing_list_mode_frequency';")
   -> 0.0002s
== 20170725075535 CorrectDefaultEmailMailingListModeFrequency: migrated (0.0010s)

== 20170728012754 SplitPublicInGroups: migrating ==============================
-- add_column(:groups, :public_exit, :boolean, {:default=>false, :null=>false})
   -> 0.0028s
-- add_column(:groups, :public_admission, :boolean, {:default=>false, :null=>false})
   -> 0.0026s
== 20170728012754 SplitPublicInGroups: migrated (0.0066s) =====================

== 20170731075604 AddMembershipRequestTemplateToGroups: migrating =============
-- add_column(:groups, :membership_request_template, :text, {})
   -> 0.0006s
== 20170731075604 AddMembershipRequestTemplateToGroups: migrated (0.0016s) ====

== 20170803123704 AddVersionToSearchData: migrating ===========================
-- add_column(:post_search_data, :version, :integer, {:default=>0})
   -> 0.0022s
-- add_column(:topic_search_data, :version, :integer, {:default=>0})
   -> 0.0015s
-- add_column(:category_search_data, :version, :integer, {:default=>0})
   -> 0.0014s
-- add_column(:user_search_data, :version, :integer, {:default=>0})
   -> 0.0016s
== 20170803123704 AddVersionToSearchData: migrated (0.0078s) ==================

== 20170818191909 SplitAliasLevels: migrating =================================
-- add_column(:groups, :messageable_level, :integer, {:default=>0})
   -> 0.0030s
-- add_column(:groups, :mentionable_level, :integer, {:default=>0})
   -> 0.0030s
-- execute("UPDATE groups SET messageable_level = alias_level, mentionable_level = alias_level")
   -> 0.0003s
== 20170818191909 SplitAliasLevels: migrated (0.0073s) ========================

== 20170823173427 CreateTagSearchData: migrating ==============================
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- adapter_name()
   -> 0.0000s
-- create_table(:tag_search_data, {:primary_key=>:tag_id, :id=>:integer})
   -> 0.0019s
-- execute("create index idx_search_tag on tag_search_data using gin(search_data)")
   -> 0.0004s
== 20170823173427 CreateTagSearchData: migrated (0.0057s) =====================

== 20170824172615 AddSlugIndexOnTopic: migrating ==============================
-- execute("CREATE INDEX idxTopicSlug ON topics(slug) WHERE deleted_at IS NULL AND slug IS NOT NULL")
   -> 0.0006s
== 20170824172615 AddSlugIndexOnTopic: migrated (0.0023s) =====================

== 20170831180419 RemoveWhisperTopicLinks: migrating ==========================
-- execute("      DELETE FROM topic_links\n       USING topic_links tl\n   LEFT JOIN posts p ON p.id = tl.post_id\n       WHERE p.post_type = 4\n         AND topic_links.id = tl.id\n")
   -> 0.0011s
== 20170831180419 RemoveWhisperTopicLinks: migrated (0.0021s) =================

== 20171003180951 RenameForgotPasswordStrictSetting: migrating ================
-- execute("UPDATE site_settings SET name = 'hide_email_address_taken' WHERE name = 'forgot_password_strict'")
   -> 0.0001s
== 20171003180951 RenameForgotPasswordStrictSetting: migrated (0.0009s) =======

== 20171006030028 AddAllowPrivateMessagesToUserOptions: migrating =============
-- add_column(:user_options, :allow_private_messages, :boolean, {:default=>true, :null=>false})
   -> 0.0016s
== 20171006030028 AddAllowPrivateMessagesToUserOptions: migrated (0.0026s) ====

== 20171026014317 AddUserOptionHome: migrating ================================
-- add_column(:user_options, :homepage_id, :integer, {:null=>true, :default=>nil})
   -> 0.0004s
== 20171026014317 AddUserOptionHome: migrated (0.0012s) =======================

== 20171110174413 RenameBlockedSilence: migrating =============================
-- add_column(:users, :silenced, :boolean, {:default=>false, :null=>false})
   -> 0.0035s
-- execute("UPDATE users set silenced = blocked")
   -> 0.0004s
-- execute("UPDATE site_settings SET name='notify_mods_when_user_silenced' where name='notify_mods_when_user_blocked'")
   -> 0.0002s
-- execute("UPDATE site_settings SET name='auto_silence_fast_typers_on_first_post' where name='auto_block_fast_typers_on_first_post'")
   -> 0.0001s
-- execute("UPDATE site_settings SET name='auto_silence_fast_typers_max_trust_level' where name='auto_block_fast_typers_max_trust_level'")
   -> 0.0001s
-- execute("UPDATE site_settings SET name='auto_silence_first_post_regex' where name='auto_block_first_post_regex'")
   -> 0.0001s
-- execute("UPDATE site_settings SET name='num_spam_flags_to_silence_new_user' where name='num_spam_flags_to_block_new_user'")
   -> 0.0001s
-- execute("UPDATE site_settings SET name='num_users_to_silence_new_user' where name='num_users_to_block_new_user'")
   -> 0.0001s
-- execute("UPDATE site_settings SET name='num_tl3_flags_to_silence_new_user' where name='num_tl3_flags_to_block_new_user'")
   -> 0.0001s
-- execute("UPDATE site_settings SET name='num_tl3_users_to_silence_new_user' where name='num_tl3_users_to_block_new_user'")
   -> 0.0001s
== 20171110174413 RenameBlockedSilence: migrated (0.0059s) ====================

== 20171113175414 AddSilencedTillToUsers: migrating ===========================
-- add_column(:users, :silenced_till, :timestamp, {:null=>true})
   -> 0.0004s
-- execute("UPDATE users\n  SET silenced_till = CURRENT_TIMESTAMP + INTERVAL '1000 YEAR'\n  WHERE silenced\n")
   -> 0.0005s
== 20171113175414 AddSilencedTillToUsers: migrated (0.0018s) ==================

== 20171113214725 AddTimeReadToUserVisits: migrating ==========================
-- add_column(:user_visits, :time_read, :integer, {:null=>false, :default=>0})
   -> 0.0013s
-- add_index(:user_visits, [:user_id, :visited_at, :time_read])
   -> 0.0013s
== 20171113214725 AddTimeReadToUserVisits: migrated (0.0035s) =================

== 20171115170858 AddMailinglistMirrorToCategories: migrating =================
-- add_column(:categories, :mailinglist_mirror, :boolean, {:default=>false, :null=>false})
   -> 0.0028s
== 20171115170858 AddMailinglistMirrorToCategories: migrated (0.0037s) ========

== 20171123200157 AddTrustLevelLocksToUsers: migrating ========================
-- add_column(:users, :group_locked_trust_level, :integer, {:null=>true})
   -> 0.0004s
-- add_column(:users, :manual_locked_trust_level, :integer, {:null=>true})
   -> 0.0002s
-- execute("UPDATE users SET manual_locked_trust_level = trust_level WHERE trust_level_locked\n")
   -> 0.0003s
-- execute("UPDATE users SET group_locked_trust_level = x.tl\nFROM users AS u\nINNER JOIN (\n  SELECT gu.user_id, MAX(g.grant_trust_level) AS tl\n  FROM group_users AS gu\n  INNER JOIN groups AS g ON gu.group_id = g.id\n    WHERE g.grant_trust_level IS NOT NULL\n  GROUP BY gu.user_id\n) AS x ON x.user_id = u.id\nWHERE users.id = u.id\n")
   -> 0.0007s
== 20171123200157 AddTrustLevelLocksToUsers: migrated (0.0025s) ===============

== 20171128172835 RenameClickedTopicIdToSearchResultId: migrating =============
-- rename_column(:search_logs, :clicked_topic_id, :search_result_id)
   -> 0.0009s
-- add_column(:search_logs, :search_result_type, :integer, {:null=>true})
   -> 0.0003s
-- execute("UPDATE search_logs SET search_result_type = 1 WHERE search_result_id is NOT NULL")
   -> 0.0003s
== 20171128172835 RenameClickedTopicIdToSearchResultId: migrated (0.0023s) ====

== 20171213105921 ReplaceInviteMailerTranslationOverride: migrating ===========
-- execute("UPDATE translation_overrides\nSET value = replace(value, '%{invitee_name}', '%{inviter_name}')\nWHERE translation_key IN ('invite_mailer.subject_template', 'invite_mailer.text_body_template',\n                          'invite_forum_mailer.subject_template', 'invite_forum_mailer.text_body_template',\n                          'custom_invite_mailer.subject_template', 'custom_invite_mailer.text_body_template',\n                          'custom_invite_forum_mailer.subject_template', 'custom_invite_forum_mailer.text_body_template');\n")
   -> 0.0003s
== 20171213105921 ReplaceInviteMailerTranslationOverride: migrated (0.0013s) ==

== 20171214040346 AddEmailToTwitterUserInfo: migrating ========================
-- add_column(:twitter_user_infos, :email, :string, {:limit=>1000, :null=>true})
   -> 0.0003s
== 20171214040346 AddEmailToTwitterUserInfo: migrated (0.0014s) ===============

== 20171220181249 ChangeUserEmailsPrimaryIndex: migrating =====================
-- remove_index(:user_emails, [:user_id, :primary])
   -> 0.0018s
-- add_index(:user_emails, [:user_id, :primary], {:unique=>true, :where=>"\"primary\""})
   -> 0.0014s
== 20171220181249 ChangeUserEmailsPrimaryIndex: migrated (0.0041s) ============

== 20171228122834 ReplaceBlockedSilenceTranslation: migrating =================
-- execute("UPDATE translation_overrides\nSET translation_key = 'system_messages.silenced_by_staff.subject_template'\nWHERE translation_key = 'system_messages.blocked_by_staff.subject_template'\nAND NOT EXISTS (SELECT 1 FROM translation_overrides WHERE translation_key = 'system_messages.silenced_by_staff.subject_template');\n")
   -> 0.0003s
-- execute("UPDATE translation_overrides\nSET translation_key = 'system_messages.silenced_by_staff.text_body_template'\nWHERE translation_key = 'system_messages.blocked_by_staff.text_body_template'\nAND NOT EXISTS (SELECT 1 FROM translation_overrides WHERE translation_key = 'system_messages.silenced_by_staff.text_body_template');\n")
   -> 0.0003s
== 20171228122834 ReplaceBlockedSilenceTranslation: migrated (0.0018s) ========

== 20180109222722 CreateUserSecondFactors: migrating ==========================
-- adapter_name()
   -> 0.0000s
-- create_table(:user_second_factors, {})
   -> 0.0016s
== 20180109222722 CreateUserSecondFactors: migrated (0.0025s) =================

== 20180111092141 AddIndexesToEmailLogs: migrating ============================
-- add_index(:email_logs, :post_id)
   -> 0.0014s
-- add_index(:email_logs, :topic_id)
   -> 0.0014s
== 20180111092141 AddIndexesToEmailLogs: migrated (0.0037s) ===================

== 20180118215249 CreateThemeSettings: migrating ==============================
-- adapter_name()
   -> 0.0000s
-- create_table(:theme_settings, {})
   -> 0.0021s
== 20180118215249 CreateThemeSettings: migrated (0.0032s) =====================

== 20180125185717 AddLockedByToPosts: migrating ===============================
-- add_column(:posts, :locked_by_id, :integer)
   -> 0.0003s
== 20180125185717 AddLockedByToPosts: migrated (0.0017s) ======================

== 20180127005644 RemoveOldGaSiteSettings: migrating ==========================
-- execute("DELETE FROM site_settings WHERE name = 'ga_tracking_code'")
   -> 0.0002s
-- execute("DELETE FROM site_settings WHERE name = 'ga_domain_name'")
   -> 0.0001s
== 20180127005644 RemoveOldGaSiteSettings: migrated (0.0019s) =================

== 20180131052859 RenamePrivatePersonal: migrating ============================
-- execute("UPDATE site_settings SET name='min_personal_message_post_length' where name='min_private_message_post_length'")
   -> 0.0002s
-- execute("UPDATE site_settings SET name='min_personal_message_title_length' where name='min_private_message_title_length'")
   -> 0.0001s
-- execute("UPDATE site_settings SET name='enable_personal_messages' where name='enable_private_messages'")
   -> 0.0001s
-- execute("UPDATE site_settings SET name='enable_personal_email_messages' where name='enable_private_email_messages'")
   -> 0.0001s
-- execute("UPDATE site_settings SET name='personal_email_time_window_seconds' where name='private_email_time_window_seconds'")
   -> 0.0001s
-- execute("UPDATE site_settings SET name='max_personal_messages_per_day' where name='max_private_messages_per_day'")
   -> 0.0001s
-- execute("UPDATE site_settings SET name='default_email_personal_messages' where name='default_email_private_messages'")
   -> 0.0001s
== 20180131052859 RenamePrivatePersonal: migrated (0.0020s) ===================

== 20180207161422 AddSkippedCreatedAtUserIdIndexOnEmailLogs: migrating ========
-- execute("CREATE INDEX idx_email_logs_user_created_filtered ON email_logs(user_id, created_at) WHERE skipped = 'f'")
   -> 0.0005s
== 20180207161422 AddSkippedCreatedAtUserIdIndexOnEmailLogs: migrated (0.0014s)

== 20180207163946 CreateCategoryTagStats: migrating ===========================
-- adapter_name()
   -> 0.0000s
-- create_table(:category_tag_stats, {})
   -> 0.0042s
-- add_index(:category_tag_stats, [:category_id, :topic_count])
   -> 0.0015s
-- add_index(:category_tag_stats, [:category_id, :tag_id], {:unique=>true})
   -> 0.0030s
== 20180207163946 CreateCategoryTagStats: migrated (0.0132s) ==================

== 20180221215641 AddSuppressFromLatestToCategories: migrating ================
-- add_column(:categories, :suppress_from_latest, :boolean, {:default=>false})
   -> 0.0035s
-- execute("UPDATE categories SET suppress_from_latest = suppress_from_homepage\n")
   -> 0.0004s
== 20180221215641 AddSuppressFromLatestToCategories: migrated (0.0050s) =======

== 20180223041147 FixGoogleOauth2PromptDataType: migrating ====================
-- execute("UPDATE site_settings\nSET data_type=8\nWHERE data_type=7\nAND name='google_oauth2_prompt'\n")
   -> 0.0002s
== 20180223041147 FixGoogleOauth2PromptDataType: migrated (0.0012s) ===========

== 20180223222415 RemoveCensoredPatternSiteSetting: migrating =================
-- execute("INSERT INTO user_histories\n  (action, acting_user_id, subject, previous_value,\n   new_value, admin_only, created_at, updated_at)\nSELECT 3, -1, 'censored_pattern', value, '', true, now(), now()\n  FROM site_settings\n WHERE name = 'censored_pattern'\n   AND value != ''\n")
   -> 0.0004s
-- execute("DELETE FROM site_settings WHERE name = 'censored_pattern'")
   -> 0.0002s
== 20180223222415 RemoveCensoredPatternSiteSetting: migrated (0.0020s) ========

== 20180308071922 DropRaiseReadOnlyFunction: migrating ========================
== 20180308071922 DropRaiseReadOnlyFunction: migrated (0.0013s) ===============

== 20180309014014 AddPrivateKeyToRemoteTheme: migrating =======================
-- add_column(:remote_themes, :private_key, :text)
   -> 0.0003s
== 20180309014014 AddPrivateKeyToRemoteTheme: migrated (0.0011s) ==============

== 20180316092939 AddExternalProfileAndCardBackgroundUrlToSingleSignOnRecord: migrating
-- add_column(:single_sign_on_records, :external_profile_background_url, :string)
   -> 0.0003s
-- add_column(:single_sign_on_records, :external_card_background_url, :string)
   -> 0.0002s
== 20180316092939 AddExternalProfileAndCardBackgroundUrlToSingleSignOnRecord: migrated (0.0012s)

== 20180316165104 CreateSharedDrafts: migrating ===============================
-- adapter_name()
   -> 0.0000s
-- create_table(:shared_drafts, {:id=>false})
   -> 0.0005s
-- add_index(:shared_drafts, :topic_id, {:unique=>true})
   -> 0.0010s
== 20180316165104 CreateSharedDrafts: migrated (0.0024s) ======================

== 20180320190339 CreateWebCrawlerRequests: migrating =========================
-- adapter_name()
   -> 0.0000s
-- create_table(:web_crawler_requests, {})
   -> 0.0020s
-- add_index(:web_crawler_requests, [:date, :user_agent], {:unique=>true})
   -> 0.0018s
== 20180320190339 CreateWebCrawlerRequests: migrated (0.0048s) ================

== 20180323154826 CreateTagGroupPermissions: migrating ========================
-- adapter_name()
   -> 0.0000s
-- create_table(:tag_group_permissions, {})
   -> 0.0035s
== 20180323154826 CreateTagGroupPermissions: migrated (0.0044s) ===============

== 20180323161659 AddIdToSharedDrafts: migrating ==============================
-- add_column(:shared_drafts, :id, :primary_key)
   -> 0.0015s
== 20180323161659 AddIdToSharedDrafts: migrated (0.0024s) =====================

== 20180327062911 AddPostCustomFieldsAkismetIndex: migrating ==================
-- add_index(:post_custom_fields, [:post_id], {:name=>"idx_post_custom_fields_akismet", :where=>"name = 'AKISMET_STATE' AND value = 'needs_review'"})
   -> 0.0012s
== 20180327062911 AddPostCustomFieldsAkismetIndex: migrated (0.0020s) =========

== 20180328180317 AddCategoryIndexToSharedDrafts: migrating ===================
-- add_index(:shared_drafts, :category_id)
   -> 0.0015s
== 20180328180317 AddCategoryIndexToSharedDrafts: migrated (0.0023s) ==========

== 20180331125522 AddMinimumRequiredTagsToCategories: migrating ===============
-- add_column(:categories, :minimum_required_tags, :integer, {:default=>0})
   -> 0.0031s
== 20180331125522 AddMinimumRequiredTagsToCategories: migrated (0.0040s) ======

== 20180419095326 AddUploadIdToUserExports: migrating =========================
-- add_column(:user_exports, :upload_id, :integer)
   -> 0.0002s
== 20180419095326 AddUploadIdToUserExports: migrated (0.0010s) ================

== 20180420141134 RemoveStaffTagsSetting: migrating ===========================
-- execute("INSERT INTO tag_group_permissions\n      (tag_group_id, group_id, permission_type, created_at, updated_at)\n      SELECT id, 0,\n             1,\n             now(), now()\n        FROM tag_groups\n       WHERE id NOT IN (SELECT tag_group_id FROM tag_group_permissions)")
   -> 0.0006s
-- execute("SELECT value FROM site_settings WHERE name = 'staff_tags'")
   -> 0.0001s
-- execute("DELETE FROM site_settings WHERE name = 'staff_tags'")
   -> 0.0001s
== 20180420141134 RemoveStaffTagsSetting: migrated (0.0029s) ==================

== 20180425152503 DropUserCardBadgeColumns: migrating =========================
-- execute("INSERT INTO user_custom_fields (user_id, name, value, created_at, updated_at)\n      SELECT user_id, 'card_image_badge_id', card_image_badge_id, now(), now()\n        FROM user_profiles\n       WHERE card_image_badge_id IS NOT NULL\n         AND user_id NOT IN (\n            SELECT user_id\n              FROM user_custom_fields\n             WHERE name = 'card_image_badge_id'\n         )")
   -> 0.0005s
== 20180425152503 DropUserCardBadgeColumns: migrated (0.0012s) ================

== 20180425185749 CreatePushSubscription: migrating ===========================
-- adapter_name()
   -> 0.0000s
-- create_table(:push_subscriptions, {})
   -> 0.0018s
== 20180425185749 CreatePushSubscription: migrated (0.0029s) ==================

== 20180508142711 RemoveInvitePassthroughHours: migrating =====================
-- execute("DELETE FROM site_settings WHERE name = 'invite_passthrough_hours'")
   -> 0.0002s
== 20180508142711 RemoveInvitePassthroughHours: migrated (0.0011s) ============

== 20180514133440 AddPmTopicCountToTags: migrating ============================
-- add_column(:tags, :pm_topic_count, :integer, {:null=>false, :default=>0})
   -> 0.0016s
== 20180514133440 AddPmTopicCountToTags: migrated (0.0024s) ===================

== 20180519053933 DeleteConfirmOldEmailTemplateOverrides: migrating ===========
-- execute("DELETE FROM translation_overrides WHERE translation_key = 'user_notifications.confirm_old_email.title'")
   -> 0.0002s
-- execute("DELETE FROM translation_overrides WHERE translation_key = 'user_notifications.confirm_old_email.subject_template'")
   -> 0.0002s
-- execute("DELETE FROM translation_overrides WHERE translation_key = 'user_notifications.confirm_old_email.text_body_template'")
   -> 0.0001s
== 20180519053933 DeleteConfirmOldEmailTemplateOverrides: migrated (0.0013s) ==

== 20180521175611 ChangeIndexesTopicViewItem: migrating =======================
-- remove_index(:topic_views, {:column=>[:ip_address, :topic_id], :name=>:ip_address_topic_id_topic_views, :unique=>true})
   -> 0.0022s
-- remove_index(:topic_views, {:column=>[:user_id, :topic_id], :name=>:user_id_topic_id_topic_views, :unique=>true})
   -> 0.0017s
== 20180521175611 ChangeIndexesTopicViewItem: migrated (0.0047s) ==============

== 20180521184439 AllowNullIpSearchLog: migrating =============================
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:search_logs)
   -> 0.0000s
-- execute("ALTER TABLE \"search_logs\" ALTER COLUMN \"ip_address\" TYPE inet")
   -> 0.0002s
-- change_column_null(:search_logs, :ip_address, true, nil)
   -> 0.0002s
== 20180521184439 AllowNullIpSearchLog: migrated (0.0013s) ====================

== 20180521190040 AllowNullIpTopicLinkClick: migrating ========================
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:topic_link_clicks)
   -> 0.0000s
-- execute("ALTER TABLE \"topic_link_clicks\" ALTER COLUMN \"ip_address\" TYPE inet")
   -> 0.0003s
-- change_column_null(:topic_link_clicks, :ip_address, true, nil)
   -> 0.0002s
== 20180521190040 AllowNullIpTopicLinkClick: migrated (0.0014s) ===============

== 20180521191418 AllowNullIpUserProfileView: migrating =======================
-- adapter_name()
   -> 0.0000s
-- clear_cache!()
   -> 0.0000s
-- quote_table_name(:user_profile_views)
   -> 0.0000s
-- execute("ALTER TABLE \"user_profile_views\" ALTER COLUMN \"ip_address\" TYPE inet")
   -> 0.0007s
-- change_column_null(:user_profile_views, :ip_address, true, nil)
   -> 0.0001s
-- remove_index(:user_profile_views, {:column=>[:viewed_at, :ip_address, :user_profile_id], :name=>:unique_profile_view_ip, :unique=>true})
   -> 0.0024s
-- remove_index(:user_profile_views, {:column=>[:viewed_at, :user_id, :user_profile_id], :name=>:unique_profile_view_user, :unique=>true})
   -> 0.0017s
-- add_index(:user_profile_views, [:viewed_at, :user_id, :ip_address, :user_profile_id], {:name=>:unique_profile_view_user_or_ip, :unique=>true})
   -> 0.0013s
== 20180521191418 AllowNullIpUserProfileView: migrated (0.0074s) ==============

== 20180607095414 MigrateDisableEmails: migrating =============================
-- execute("UPDATE site_settings SET data_type = 7 WHERE name = 'disable_emails';")
   -> 0.0001s
-- execute("UPDATE site_settings SET value = 'yes' WHERE value = 't' AND name = 'disable_emails';")
   -> 0.0001s
-- execute("UPDATE site_settings SET value = 'no' WHERE value = 'f' AND name = 'disable_emails';")
   -> 0.0001s
== 20180607095414 MigrateDisableEmails: migrated (0.0012s) ====================

== 20180621013807 AddIndexTopicIdPercentRankOnPosts: migrating ================
-- add_index(:posts, [:topic_id, :percent_rank], {:order=>{:percent_rank=>:asc}})
   -> 0.0017s
== 20180621013807 AddIndexTopicIdPercentRankOnPosts: migrated (0.0027s) =======

== 20180706054922 DropKeyColumnFromThemes: migrating ==========================
-- add_column(:user_options, :theme_ids, :integer, {:array=>true, :null=>false, :default=>[]})
   -> 0.0022s
-- execute("UPDATE user_options AS uo\n       SET theme_ids = (\n         SELECT array_agg(themes.id)\n         FROM themes\n         INNER JOIN user_options\n         ON themes.key = user_options.theme_key\n         WHERE user_options.user_id = uo.user_id\n       ) WHERE uo.theme_key IN (SELECT key FROM themes)")
   -> 0.0007s
-- execute("INSERT INTO site_settings (name, data_type, value, created_at, updated_at)\n       SELECT 'default_theme_id', 3, id, now(), now()\n         FROM themes\n       WHERE key = (SELECT value FROM site_settings WHERE name = 'default_theme_key')")
   -> 0.0003s
-- execute("DELETE FROM site_settings WHERE name = 'default_theme_key'")
   -> 0.0001s
== 20180706054922 DropKeyColumnFromThemes: migrated (0.0042s) =================

== 20180710075119 AddIndexTopicIdSortOrderOnPosts: migrating ==================
-- add_index(:posts, [:topic_id, :sort_order], {:order=>{:sort_order=>:asc}})
   -> 0.0013s
== 20180710075119 AddIndexTopicIdSortOrderOnPosts: migrated (0.0021s) =========

== 20180710172959 DisallowMultiLevelsThemeComponents: migrating ===============
-- execute("\n      UPDATE themes\n      SET user_selectable = false\n      FROM child_themes\n      WHERE themes.id = child_themes.child_theme_id\n      AND themes.user_selectable = true\n    ")
   -> 0.0003s
== 20180710172959 DisallowMultiLevelsThemeComponents: migrated (0.0013s) ======

== 20180716062012 AddIndexUserIdOnUserSecondFactors: migrating ================
-- add_index(:user_second_factors, :user_id)
   -> 0.0013s
== 20180716062012 AddIndexUserIdOnUserSecondFactors: migrated (0.0021s) =======

== 20180716062405 AddNavigateToFirstPostAfterReadToCategories: migrating ======
-- add_column(:categories, :navigate_to_first_post_after_read, :bool, {:null=>false, :default=>false})
   -> 0.0032s
== 20180716062405 AddNavigateToFirstPostAfterReadToCategories: migrated (0.0042s)

== 20180716072125 AlterBounceKeyOnEmailLogs: migrating ========================
-- change_column(:email_logs, :bounce_key, "uuid USING bounce_key::uuid")
   -> 0.0026s
== 20180716072125 AlterBounceKeyOnEmailLogs: migrated (0.0035s) ===============

== 20180716140323 AddUniqIpOrUserIdTopicViews: migrating ======================
-- index_exists?(:topic_views, [:user_id, :ip_address, :topic_id], {:name=>:uniq_ip_or_user_id_topic_views})
   -> 0.0016s
-- add_index(:topic_views, [:user_id, :ip_address, :topic_id], {:name=>:uniq_ip_or_user_id_topic_views, :unique=>true, :algorithm=>:concurrently})
   -> 0.0013s
== 20180716140323 AddUniqIpOrUserIdTopicViews: migrated (0.0038s) =============

== 20180716200103 AddThemeKeyDefault: migrating ===============================
-- column_exists?(:themes, :key)
   -> 0.0016s
-- execute("ALTER TABLE themes ALTER COLUMN key SET DEFAULT 'deprecated'")
   -> 0.0003s
== 20180716200103 AddThemeKeyDefault: migrated (0.0027s) ======================

== 20180717025038 DropNotNullIpAddressOnTopicViews: migrating =================
-- change_column_null(:topic_views, :ip_address, true)
   -> 0.0002s
== 20180717025038 DropNotNullIpAddressOnTopicViews: migrated (0.0010s) ========

== 20180717084758 AlterReplyKeyOnEmailLogs: migrating =========================
-- change_column(:email_logs, :reply_key, "uuid USING reply_key::uuid")
   -> 0.0028s
== 20180717084758 AlterReplyKeyOnEmailLogs: migrated (0.0037s) ================

== 20180718062728 CreatePostReplyKeys: migrating ==============================
-- create_table(:post_reply_keys)
   -> 0.0013s
-- add_index(:post_reply_keys, :reply_key, {:unique=>true})
   -> 0.0011s
-- execute("DELETE FROM email_logs\nWHERE id IN (\n  SELECT id\n  FROM (\n    SELECT\n      id,\n      ROW_NUMBER() OVER(PARTITION BY post_id, user_id ORDER BY id DESC) AS row_num\n    FROM email_logs\n  ) t\n  WHERE t.row_num > 1\n)\n")
   -> 0.0006s
-- execute("INSERT INTO post_reply_keys(\n  user_id, post_id, reply_key, updated_at, created_at\n) SELECT\n    user_id,\n    post_id,\n    reply_key,\n    updated_at,\n    created_at\n  FROM email_logs\n  WHERE reply_key IS NOT NULL AND post_id IS NOT NULL AND user_id IS NOT NULL\n")
   -> 0.0002s
-- add_index(:post_reply_keys, [:user_id, :post_id], {:unique=>true})
   -> 0.0012s
== 20180718062728 CreatePostReplyKeys: migrated (0.0062s) =====================

== 20180719103905 AlterIndexesOnEmailLogs: migrating ==========================
-- remove_index(:email_logs, {:name=>"index_email_logs_on_user_id_and_created_at", :column=>[:user_id, :created_at]})
   -> 0.0027s
-- add_index(:email_logs, :user_id)
   -> 0.0011s
-- remove_index(:email_logs, [:skipped, :created_at])
   -> 0.0026s
-- add_index(:email_logs, [:skipped, :bounced, :created_at])
   -> 0.0012s
== 20180719103905 AlterIndexesOnEmailLogs: migrated (0.0086s) =================

== 20180720054856 CreateSkippedEmailLogs: migrating ===========================
-- create_table(:skipped_email_logs)
   -> 0.0015s
-- add_index(:skipped_email_logs, :created_at)
   -> 0.0011s
-- add_index(:skipped_email_logs, :user_id)
   -> 0.0013s
-- add_index(:skipped_email_logs, :post_id)
   -> 0.0018s
-- add_index(:skipped_email_logs, :reason_type)
   -> 0.0012s
-- execute("INSERT INTO skipped_email_logs (\n  email_type,\n  to_address,\n  user_id,\n  post_id,\n  reason_type,\n  custom_reason,\n  created_at,\n  updated_at\n) SELECT\n    email_type,\n    to_address,\n    user_id,\n    post_id,\n    1,\n    skipped_reason,\n    created_at,\n    updated_at\n  FROM email_logs\n  WHERE skipped IS TRUE\n")
   -> 0.0004s
== 20180720054856 CreateSkippedEmailLogs: migrated (0.0088s) ==================

== 20180724070554 DropTopicIdOnEmailLogs: migrating ===========================
-- remove_index(:email_logs, :topic_id)
   -> 0.0026s
== 20180724070554 DropTopicIdOnEmailLogs: migrated (0.0034s) ==================

== 20180727042448 DropReplyKeySkippedSkippedReasonFromEmailLogs: migrating ====
-- remove_index(:email_logs, [:skipped, :bounced, :created_at])
   -> 0.0023s
-- remove_index(:email_logs, {:name=>"idx_email_logs_user_created_filtered"})
   -> 0.0003s
-- add_index(:email_logs, [:user_id, :created_at])
   -> 0.0012s
== 20180727042448 DropReplyKeySkippedSkippedReasonFromEmailLogs: migrated (0.0048s)

== 20180729092926 RemoveTrackExternalRightClicks: migrating ===================
-- execute("DELETE FROM site_settings WHERE name = 'track_external_right_clicks'")
   -> 0.0002s
== 20180729092926 RemoveTrackExternalRightClicks: migrated (0.0010s) ==========

== 20180803085321 AddIndexEmailLogsOnBounced: migrating =======================
-- add_index(:email_logs, :bounced)
   -> 0.0011s
-- remove_index(:email_logs, [:user_id, :created_at])
   -> 0.0023s
== 20180803085321 AddIndexEmailLogsOnBounced: migrated (0.0043s) ==============

== 20180812150839 AddUserApiKeysLastUsedAt: migrating =========================
-- add_column(:user_api_keys, :last_used_at, :datetime, {:null=>false, :default=>#<Proc:0x00005556171640a0@/var/www/discourse/db/migrate/20180812150839_add_user_api_keys_last_used_at.rb:3 (lambda)>})
   -> 0.0019s
== 20180812150839 AddUserApiKeysLastUsedAt: migrated (0.0027s) ================

== 20180813074843 AddComponentToThemes: migrating =============================
-- add_column(:themes, :component, :boolean, {:null=>false, :default=>false})
   -> 0.0023s
-- execute("\n      UPDATE themes\n      SET component = true, color_scheme_id = NULL, user_selectable = false\n      WHERE id IN (SELECT child_theme_id FROM child_themes)\n    ")
   -> 0.0004s
-- execute("\n      UPDATE site_settings\n      SET value = -1\n      WHERE name = 'default_theme_id' AND value::integer IN (SELECT id FROM themes WHERE component)\n    ")
   -> 0.0003s
-- execute("\n      DELETE FROM child_themes\n      WHERE parent_theme_id IN (SELECT id FROM themes WHERE component)\n    ")
   -> 0.0002s
== 20180813074843 AddComponentToThemes: migrated (0.0043s) ====================

== 20180820073549 CreatePollsTables: migrating ================================
-- create_table(:polls)
   -> 0.0036s
-- add_index(:polls, [:post_id, :name], {:unique=>true})
   -> 0.0010s
-- create_table(:poll_options)
   -> 0.0027s
-- add_index(:poll_options, [:poll_id, :digest], {:unique=>true})
   -> 0.0011s
-- create_table(:poll_votes, {:id=>false})
   -> 0.0042s
-- add_index(:poll_votes, [:poll_id, :poll_option_id, :user_id], {:unique=>true})
   -> 0.0010s
== 20180820073549 CreatePollsTables: migrated (0.0147s) =======================

== 20180820080623 MigratePollsData: migrating =================================
-- execute("INSERT INTO post_custom_fields (name, value, post_id, created_at, updated_at)\nSELECT 'has_polls', 't', post_id, MIN(created_at), MIN(updated_at)\n  FROM polls\n GROUP BY post_id\n")
   -> 0.0006s
== 20180820080623 MigratePollsData: migrated (0.0026s) ========================

== 20180827053514 AddFilesizeToOptimizedImages: migrating =====================
-- add_column(:optimized_images, :filesize, :integer)
   -> 0.0003s
-- add_column(:uploads, :thumbnail_width, :integer)
   -> 0.0002s
-- add_column(:uploads, :thumbnail_height, :integer)
   -> 0.0002s
== 20180827053514 AddFilesizeToOptimizedImages: migrated (0.0015s) ============

== 20180828065005 ChangeBounceScoreToFloat: migrating =========================
-- change_column(:user_stats, :bounce_score, :float)
   -> 0.0010s
== 20180828065005 ChangeBounceScoreToFloat: migrated (0.0017s) ================

== 20180831182853 AddBranchToRemoteTheme: migrating ===========================
-- add_column(:remote_themes, :branch, :string)
   -> 0.0002s
== 20180831182853 AddBranchToRemoteTheme: migrated (0.0010s) ==================

== 20180907075713 AddLastErrorTextToRemoteThemes: migrating ===================
-- add_column(:remote_themes, :last_error_text, :text)
   -> 0.0002s
== 20180907075713 AddLastErrorTextToRemoteThemes: migrated (0.0009s) ==========

== 20180913200027 RemoveEnforceSquareEmoji: migrating =========================
-- execute("DELETE FROM site_settings WHERE name = 'enforce_square_emoji'")
   -> 0.0001s
== 20180913200027 RemoveEnforceSquareEmoji: migrated (0.0008s) ================

== 20180916195601 MigrateS3BackupSiteSettings: migrating ======================
-- execute("UPDATE site_settings\nSET name      = 'backup_location',\n    data_type = 7,\n    value     = 's3'\nWHERE name = 'enable_s3_backups' AND value = 't';\n")
   -> 0.0002s
-- execute("DELETE\nFROM site_settings\nWHERE name = 'enable_s3_backups';\n")
   -> 0.0002s
== 20180916195601 MigrateS3BackupSiteSettings: migrated (0.0013s) =============

== 20180917024729 RemoveSuperfluousColumns: migrating =========================
== 20180917024729 RemoveSuperfluousColumns: migrated (0.0320s) ================

== 20180917034056 RemoveSuperfluousTables: migrating ==========================
== 20180917034056 RemoveSuperfluousTables: migrated (0.0024s) =================

== 20180920023559 AddExternalDetailsToUserFields: migrating ===================
-- add_column(:user_fields, :external_name, :string)
   -> 0.0003s
-- add_column(:user_fields, :external_type, :string)
   -> 0.0002s
== 20180920023559 AddExternalDetailsToUserFields: migrated (0.0012s) ==========

== 20180920042415 CreateUserUploads: migrating ================================
-- create_table(:user_uploads)
   -> 0.0011s
-- add_index(:user_uploads, [:upload_id, :user_id], {:unique=>true})
   -> 0.0012s
-- execute("INSERT INTO user_uploads(upload_id, user_id, created_at)\nSELECT id, user_id, COALESCE(created_at, current_timestamp)\nFROM uploads\nWHERE user_id IS NOT NULL\n")
   -> 0.0003s
== 20180920042415 CreateUserUploads: migrated (0.0034s) =======================

== 20180927135248 CreateJavascriptCaches: migrating ===========================
-- create_table(:javascript_caches)
   -> 0.0036s
== 20180927135248 CreateJavascriptCaches: migrated (0.0046s) ==================

== 20180928105835 AddIndexToTags: migrating ===================================
-- execute("UPDATE tags\nSET name = name || id\nWHERE EXISTS(SELECT * FROM tags t WHERE lower(t.name) = lower(tags.name) AND t.id < tags.id)\n")
   -> 0.0005s
-- add_index(:tags, "lower(name)", {:unique=>true})
   -> 0.0011s
== 20180928105835 AddIndexToTags: migrated (0.0025s) ==========================

== 20181005084357 AddSsoProviderSecretsToSiteSettings: migrating ==============
== 20181005084357 AddSsoProviderSecretsToSiteSettings: migrated (0.0007s) =====

== 20181005144357 AddViaEmailToInvites: migrating =============================
-- add_column(:invites, :via_email, :boolean, {:default=>false, :null=>false})
   -> 0.0019s
== 20181005144357 AddViaEmailToInvites: migrated (0.0026s) ====================

== 20181010150631 AddHideProfileAndPresenceToUserOptions: migrating ===========
-- add_column(:user_options, :hide_profile_and_presence, :boolean, {:default=>false, :null=>false})
   -> 0.0017s
== 20181010150631 AddHideProfileAndPresenceToUserOptions: migrated (0.0025s) ==

== 20181012123001 DropGroupLockedTrustLevelFromUser: migrating ================
== 20181012123001 DropGroupLockedTrustLevelFromUser: migrated (0.0017s) =======

== 20181031165343 AddFlagStatsToUser: migrating ===============================
-- add_column(:user_stats, :flags_agreed, :integer, {:default=>0, :null=>false})
   -> 0.0012s
-- add_column(:user_stats, :flags_disagreed, :integer, {:default=>0, :null=>false})
   -> 0.0009s
-- add_column(:user_stats, :flags_ignored, :integer, {:default=>0, :null=>false})
   -> 0.0010s
-- execute("UPDATE user_stats\nSET flags_agreed = x.flags_agreed,\n  flags_disagreed = x.flags_disagreed,\n  flags_ignored = x.flags_ignored\nFROM (\n  SELECT u.id AS user_id,\n    SUM(CASE WHEN pa.disagreed_at IS NOT NULL THEN 1 ELSE 0 END) as flags_disagreed,\n    SUM(CASE WHEN pa.agreed_at IS NOT NULL THEN 1 ELSE 0 END) as flags_agreed,\n    SUM(CASE WHEN pa.deferred_at IS NOT NULL THEN 1 ELSE 0 END) as flags_ignored\n  FROM post_actions AS pa\n  INNER JOIN users AS u ON u.id = pa.user_id\n  WHERE pa.post_action_type_id IN (3, 4, 8, 7)\n  AND pa.user_id > 0\n  GROUP BY u.id\n) AS x\nWHERE x.user_id = user_stats.user_id\n")
   -> 0.0006s
== 20181031165343 AddFlagStatsToUser: migrated (0.0046s) ======================

== 20181108115009 CreateUserAssociatedAccounts: migrating =====================
-- create_table(:user_associated_accounts)
   -> 0.0020s
-- add_index(:user_associated_accounts, [:provider_name, :provider_uid], {:unique=>true, :name=>"associated_accounts_provider_uid"})
   -> 0.0013s
-- add_index(:user_associated_accounts, [:provider_name, :user_id], {:unique=>true, :name=>"associated_accounts_provider_user"})
   -> 0.0012s
== 20181108115009 CreateUserAssociatedAccounts: migrated (0.0054s) ============

== 20181112013117 MigrateUrlSiteSettings: migrating ===========================
== 20181112013117 MigrateUrlSiteSettings: migrated (0.0008s) ==================

== 20181120140552 MigrateCorporateSiteSettings: migrating =====================
-- execute("UPDATE site_settings\nSET name      = 'company_name'\nWHERE name = 'company_full_name';\n")
   -> 0.0002s
-- execute("DELETE\nFROM site_settings\nWHERE name IN ('company_short_name', 'company_domain');\n")
   -> 0.0001s
== 20181120140552 MigrateCorporateSiteSettings: migrated (0.0014s) ============

== 20181128140547 MigrateFacebookUserInfo: migrating ==========================
-- execute("INSERT INTO user_associated_accounts (\n  provider_name,\n  provider_uid,\n  user_id,\n  info,\n  last_used,\n  created_at,\n  updated_at\n) SELECT\n  'facebook',\n  facebook_user_id,\n  user_id,\n  json_build_object('email', email, 'first_name', first_name, 'last_name', last_name, 'name', name),\n  updated_at,\n  created_at,\n  updated_at\nFROM facebook_user_infos\n")
   -> 0.0005s
== 20181128140547 MigrateFacebookUserInfo: migrated (0.0012s) =================

== 20181129094518 AddNotNullMinimumRequiredTagsOnCategories: migrating ========
-- change_column_null(:categories, :minimum_required_tags, false, 0)
   -> 0.0026s
== 20181129094518 AddNotNullMinimumRequiredTagsOnCategories: migrated (0.0034s)

== 20181204123042 AddUploadedMetaIdToCategories: migrating ====================
-- add_column(:categories, :uploaded_meta_id, :integer)
   -> 0.0003s
== 20181204123042 AddUploadedMetaIdToCategories: migrated (0.0010s) ===========

== 20181204193426 CreateJoinTableWebHooksTags: migrating ======================
-- create_join_table(:web_hooks, :tags)
   -> 0.0015s
== 20181204193426 CreateJoinTableWebHooksTags: migrated (0.0023s) =============

== 20181207141900 MigrateTwitterUserInfo: migrating ===========================
-- execute("INSERT INTO user_associated_accounts (\n  provider_name,\n  provider_uid,\n  user_id,\n  info,\n  last_used,\n  created_at,\n  updated_at\n) SELECT\n  'twitter',\n  twitter_user_id,\n  user_id,\n  json_build_object('email', email, 'nickname', screen_name),\n  updated_at,\n  created_at,\n  updated_at\nFROM twitter_user_infos\n")
   -> 0.0003s
== 20181207141900 MigrateTwitterUserInfo: migrated (0.0010s) ==================

== 20181210122522 RemoveNotNullUserAssociatedAccountUser: migrating ===========
-- change_column_null(:user_associated_accounts, :user_id, true)
   -> 0.0002s
== 20181210122522 RemoveNotNullUserAssociatedAccountUser: migrated (0.0009s) ==

== 20181218071253 AddEtagToUploads: migrating =================================
-- add_column(:uploads, :etag, :string)
   -> 0.0003s
-- add_index(:uploads, [:etag])
   -> 0.0011s
-- add_column(:optimized_images, :etag, :string)
   -> 0.0002s
-- add_index(:optimized_images, [:etag])
   -> 0.0011s
== 20181218071253 AddEtagToUploads: migrated (0.0036s) ========================

== 20181221121805 CreateThemeTranslationOverride: migrating ===================
-- create_table(:theme_translation_overrides)
   -> 0.0032s
== 20181221121805 CreateThemeTranslationOverride: migrated (0.0040s) ==========

== 20190103051737 AddVersionToOptimizedImages: migrating ======================
-- add_column(:optimized_images, :version, :integer)
   -> 0.0002s
== 20190103051737 AddVersionToOptimizedImages: migrated (0.0011s) =============

== 20190103060819 ForceRebakeOnPostsWithImages: migrating =====================
-- execute("UPDATE posts SET baked_version = 0\nWHERE id IN (SELECT post_id FROM post_uploads)\n")
   -> 0.0006s
== 20190103060819 ForceRebakeOnPostsWithImages: migrated (0.0014s) ============

== 20190103065652 RemoveUploadedMetaIdFromCategory: migrating =================
== 20190103065652 RemoveUploadedMetaIdFromCategory: migrated (0.0013s) ========

== 20190106041015 AddTopicIdIndexToUserHistories: migrating ===================
-- add_index(:user_histories, [:topic_id, :target_user_id, :action])
   -> 0.0017s
== 20190106041015 AddTopicIdIndexToUserHistories: migrated (0.0026s) ==========

== 20190108110630 AddTextSizeKeyToUserOptions: migrating ======================
-- add_column(:user_options, :text_size_key, :integer, {:null=>false, :default=>0})
   -> 0.0018s
== 20190108110630 AddTextSizeKeyToUserOptions: migrated (0.0026s) =============

== 20190110142917 EnableContentSecurityPolicyForNewSites: migrating ===========
== 20190110142917 EnableContentSecurityPolicyForNewSites: migrated (0.0006s) ==

== 20190110201340 RemoveGooglePlusFromShareLinksSiteSetting: migrating ========
-- execute("UPDATE site_settings\nSET value = array_to_string(array_remove(regexp_split_to_array(value, '\\|'), 'google+'), '|')\nWHERE name = 'share_links'\n")
   -> 0.0002s
== 20190110201340 RemoveGooglePlusFromShareLinksSiteSetting: migrated (0.0008s)

== 20190122132732 AddFieldsToRemoteThemes: migrating ==========================
-- add_column(:remote_themes, :authors, :string)
   -> 0.0003s
-- add_column(:remote_themes, :theme_version, :string)
   -> 0.0002s
-- add_column(:remote_themes, :minimum_discourse_version, :string)
   -> 0.0002s
-- add_column(:remote_themes, :maximum_discourse_version, :string)
   -> 0.0002s
== 20190122132732 AddFieldsToRemoteThemes: migrated (0.0017s) =================

== 20190125103246 CopyLoginRequiredWelcomeMessage: migrating ==================
-- execute("INSERT INTO translation_overrides (locale, translation_key, value, created_at, updated_at)\nSELECT locale, 'login_required.welcome_message_invite_only', value, created_at, updated_at\nFROM translation_overrides\nWHERE translation_key = 'login_required.welcome_message'\nAND NOT EXISTS (SELECT 1 FROM translation_overrides WHERE translation_key = 'login_required.welcome_message_invite_only');\n")
   -> 0.0003s
== 20190125103246 CopyLoginRequiredWelcomeMessage: migrated (0.0010s) =========

== 20190125153345 AddTextSizeSeqToUserOption: migrating =======================
-- add_column(:user_options, :text_size_seq, :integer, {:null=>false, :default=>0})
   -> 0.0016s
== 20190125153345 AddTextSizeSeqToUserOption: migrated (0.0025s) ==============

== 20190130013015 AddIndexOnUserIdToSingleSignOnRecords: migrating ============
-- add_index(:single_sign_on_records, :user_id)
   -> 0.0012s
== 20190130013015 AddIndexOnUserIdToSingleSignOnRecords: migrated (0.0020s) ===

== 20190205104116 DropUnusedAuthTables: migrating =============================
== 20190205104116 DropUnusedAuthTables: migrated (0.0008s) ====================

== 20190208144706 DropUnusedAuthTablesAgain: migrating ========================
== 20190208144706 DropUnusedAuthTablesAgain: migrated (0.0018s) ===============

== 20190225133654 AddIgnoredUsersTable: migrating =============================
-- create_table(:ignored_users)
   -> 0.0010s
-- add_index(:ignored_users, [:user_id, :ignored_user_id], {:unique=>true})
   -> 0.0010s
-- add_index(:ignored_users, [:ignored_user_id, :user_id], {:unique=>true})
   -> 0.0010s
== 20190225133654 AddIgnoredUsersTable: migrated (0.0040s) ====================

== 20190227150413 MigrateInstagramUserInfo: migrating =========================
-- execute("INSERT INTO user_associated_accounts (\n  provider_name,\n  provider_uid,\n  user_id,\n  info,\n  last_used,\n  created_at,\n  updated_at\n)\n  SELECT\n    'instagram',\n    instagram_user_id,\n    user_id,\n    json_build_object('nickname', screen_name),\n    updated_at,\n    created_at,\n    updated_at\n  FROM instagram_user_infos\n  ORDER BY updated_at DESC\nON CONFLICT (provider_name, provider_uid)\nDO NOTHING\n")
   -> 0.0004s
== 20190227150413 MigrateInstagramUserInfo: migrated (0.0016s) ================

== 20190227210035 AddMissingTopicIdSiteSettings: migrating ====================
-- execute("INSERT INTO site_settings(name, data_type, value, created_at, updated_at)\nSELECT 'welcome_topic_id', 3, topic_id, created_at, updated_at\nFROM topic_custom_fields\nWHERE name = 'is_welcome_topic' AND value = 'true' AND NOT EXISTS(\n    SELECT 1\n    FROM site_settings\n    WHERE name = 'welcome_topic_id'\n  )\nLIMIT 1\n")
   -> 0.0005s
-- execute("DELETE FROM topic_custom_fields\nWHERE name = 'is_welcome_topic' AND value = 'true'\n")
   -> 0.0002s
-- execute("INSERT INTO site_settings(name, data_type, value, created_at, updated_at)\nSELECT 'lounge_welcome_topic_id', 3, id, created_at, updated_at\nFROM topics\nWHERE title = 'Welcome to the Lounge' AND NOT EXISTS(\n    SELECT 1\n    FROM site_settings\n    WHERE name = 'lounge_welcome_topic_id'\n  ) AND category_id = (\n  SELECT value::INT\n  FROM site_settings\n  WHERE name = 'lounge_category_id'\n)\nORDER BY created_at\nLIMIT 1\n")
   -> 0.0006s
-- execute("INSERT INTO site_settings(name, data_type, value, created_at, updated_at)\nSELECT 'admin_quick_start_topic_id', 3, id, created_at, updated_at\nFROM topics\nWHERE title IN ('READ ME FIRST: Admin Quick Start Guide', 'READ ME FIRST: Getting Started') AND NOT EXISTS(\n    SELECT 1\n    FROM site_settings\n    WHERE name = 'admin_quick_start_topic_id'\n  )\nORDER BY created_at\nLIMIT 1\n")
   -> 0.0003s
== 20190227210035 AddMissingTopicIdSiteSettings: migrated (0.0024s) ===========

== 20190304170931 MigrateUncategorizedCategoryName: migrating =================
-- execute("INSERT INTO translation_overrides (locale, translation_key, value, created_at, updated_at)\nSELECT 'en', 'uncategorized_category_name', name, now(), now()\nFROM categories\nWHERE id = -1 AND LOWER(name) <> 'uncategorized';\n")
   -> 0.0003s
== 20190304170931 MigrateUncategorizedCategoryName: migrated (0.0011s) ========

== 20190306154335 MigrateGoogleUserInfo: migrating ============================
-- execute("INSERT INTO user_associated_accounts (\n  provider_name,\n  provider_uid,\n  user_id,\n  info,\n  last_used,\n  created_at,\n  updated_at\n) SELECT\n  'google_oauth2',\n  google_user_id,\n  user_id,\n  json_build_object('email', email, 'first_name', first_name, 'last_name', last_name, 'name', name),\n  updated_at,\n  created_at,\n  updated_at\nFROM google_user_infos\n")
   -> 0.0004s
== 20190306154335 MigrateGoogleUserInfo: migrated (0.0011s) ===================

== 20190312181641 MigrateEmailUserOptions: migrating ==========================
-- add_column(:user_options, :email_level, :integer, {:default=>1, :null=>false})
   -> 0.0018s
-- add_column(:user_options, :email_messages_level, :integer, {:default=>0, :null=>false})
   -> 0.0017s
-- execute("UPDATE user_options\nSET email_level = CASE\n  WHEN email_direct AND email_always\n  THEN 0\n  WHEN email_direct AND email_always IS NOT TRUE\n  THEN 1\n  ELSE 2\nEND,\nemail_messages_level = CASE\n  WHEN email_private_messages\n  THEN 0\n  ELSE 2\nEND\n")
   -> 0.0003s
== 20190312181641 MigrateEmailUserOptions: migrated (0.0046s) =================

== 20190312194528 DropEmailUserOptionsColumns: migrating ======================
== 20190312194528 DropEmailUserOptionsColumns: migrated (0.0026s) =============

== 20190313134642 MigrateDefaultUserEmailOptions: migrating ===================
-- execute("DELETE from site_settings where name in ('default_email_always', 'default_email_direct', 'default_email_personal_messages')")
   -> 0.0001s
== 20190313134642 MigrateDefaultUserEmailOptions: migrated (0.0012s) ==========

== 20190313205652 RenameModeratorSiteSettings: migrating ======================
-- execute("UPDATE site_settings SET name = 'moderators_view_emails' WHERE name = 'show_email_on_profile'")
   -> 0.0001s
-- execute("UPDATE site_settings SET name = 'moderators_create_categories' WHERE name = 'allow_moderators_to_create_categories'")
   -> 0.0001s
== 20190313205652 RenameModeratorSiteSettings: migrated (0.0011s) =============

== 20190314082018 AddSearchPriorityToCategories: migrating ====================
-- add_column(:categories, :search_priority, :integer, {:default=>0})
   -> 0.0026s
-- add_index(:categories, :search_priority)
   -> 0.0012s
== 20190314082018 AddSearchPriorityToCategories: migrated (0.0045s) ===========

== 20190314144755 AddSummarizedAtColumnToIgnoredUsersTable: migrating =========
-- add_column(:ignored_users, :summarized_at, :datetime)
   -> 0.0003s
== 20190314144755 AddSummarizedAtColumnToIgnoredUsersTable: migrated (0.0009s)

== 20190315025804 MigrateBlankOverrideForUploadSiteSettings: migrating ========
== 20190315025804 MigrateBlankOverrideForUploadSiteSettings: migrated (0.0014s)

== 20190315055432 MigrateNullOverrideForUploadSiteSettings: migrating =========
== 20190315055432 MigrateNullOverrideForUploadSiteSettings: migrated (0.0022s)

== 20190320091323 AddIndexPostActionTypeIdDisagreedAtOnPostActions: migrating =
-- add_index(:post_actions, [:post_action_type_id, :disagreed_at], {:where=>"(disagreed_at IS NULL)"})
   -> 0.0012s
== 20190320091323 AddIndexPostActionTypeIdDisagreedAtOnPostActions: migrated (0.0021s)

== 20190320104640 RemoveS3ForcePathStyle: migrating ===========================
-- execute("DELETE FROM site_settings WHERE name = 's3_force_path_style'")
   -> 0.0001s
== 20190320104640 RemoveS3ForcePathStyle: migrated (0.0009s) ==================

== 20190321072029 AddIndexMethodEnabledOnUserSecondFactors: migrating =========
-- add_index(:user_second_factors, [:method, :enabled])
   -> 0.0011s
== 20190321072029 AddIndexMethodEnabledOnUserSecondFactors: migrated (0.0019s)

== 20190322152347 ForceRebakeOnPostsWithLightboxes: migrating =================
-- execute("UPDATE posts SET baked_version = 0\nWHERE cooked LIKE '%lightbox-wrapper%'\n")
   -> 0.0002s
== 20190322152347 ForceRebakeOnPostsWithLightboxes: migrated (0.0009s) ========


== Seed from /var/www/discourse/db/fixtures/001_refresh.rb

== Seed from /var/www/discourse/db/fixtures/002_groups.rb

== Seed from /var/www/discourse/db/fixtures/003_post_action_types.rb
 - PostActionType {:id=>1, :name_key=>"bookmark", :is_flag=>false, :position=>1}
 - PostActionType {:id=>2, :name_key=>"like", :is_flag=>false, :icon=>"heart", :position=>2}
 - PostActionType {:id=>3, :name_key=>"off_topic", :is_flag=>true, :position=>3}
 - PostActionType {:id=>4, :name_key=>"inappropriate", :is_flag=>true, :position=>4}
 - PostActionType {:id=>8, :name_key=>"spam", :is_flag=>true, :position=>6}
 - PostActionType {:id=>6, :name_key=>"notify_user", :is_flag=>true, :position=>7}
 - PostActionType {:id=>7, :name_key=>"notify_moderators", :is_flag=>true, :position=>8}

== Seed from /var/www/discourse/db/fixtures/004_screened_ip_addresses.rb
 - ScreenedIpAddress {:id=>1, :ip_address=>"10.0.0.0/8", :action_type=>2}
 - ScreenedIpAddress {:id=>2, :ip_address=>"192.168.0.0/16", :action_type=>2}
 - ScreenedIpAddress {:id=>3, :ip_address=>"127.0.0.0/8", :action_type=>2}
 - ScreenedIpAddress {:id=>4, :ip_address=>"172.16.0.0/12", :action_type=>2}
 - ScreenedIpAddress {:id=>5, :ip_address=>"fc00::/7", :action_type=>2}

== Seed from /var/www/discourse/db/fixtures/005_badge_types.rb
 - BadgeType {:id=>1, :name=>"Gold"}
 - BadgeType {:id=>2, :name=>"Silver"}
 - BadgeType {:id=>3, :name=>"Bronze"}

== Seed from /var/www/discourse/db/fixtures/006_badges.rb
 - BadgeGrouping {:id=>1, :name=>"Getting Started", :default_position=>10}
 - BadgeGrouping {:id=>2, :name=>"Community", :default_position=>11}
 - BadgeGrouping {:id=>3, :name=>"Posting", :default_position=>12}
 - BadgeGrouping {:id=>4, :name=>"Trust Level", :default_position=>13}
 - BadgeGrouping {:id=>5, :name=>"Other", :default_position=>14}
 - Badge {:id=>1, :name=>"Basic User", :badge_type_id=>3, :query=>"\n      SELECT u.id user_id, current_timestamp granted_at FROM users u\n      WHERE trust_level >= 1 AND (\n        :backfill OR u.id IN (:user_ids)\n      )\n    ", :default_badge_grouping_id=>4, :trigger=>4, :default_allow_title=>false, :default_icon=>"fa-user", :system=>true}
 - Badge {:id=>2, :name=>"Member", :badge_type_id=>3, :query=>"\n      SELECT u.id user_id, current_timestamp granted_at FROM users u\n      WHERE trust_level >= 2 AND (\n        :backfill OR u.id IN (:user_ids)\n      )\n    ", :default_badge_grouping_id=>4, :trigger=>4, :default_allow_title=>false, :default_icon=>"fa-user", :system=>true}
 - Badge {:id=>3, :name=>"Regular", :badge_type_id=>2, :query=>"\n      SELECT u.id user_id, current_timestamp granted_at FROM users u\n      WHERE trust_level >= 3 AND (\n        :backfill OR u.id IN (:user_ids)\n      )\n    ", :default_badge_grouping_id=>4, :trigger=>4, :default_allow_title=>true, :default_icon=>"fa-user", :system=>true}
 - Badge {:id=>4, :name=>"Leader", :badge_type_id=>1, :query=>"\n      SELECT u.id user_id, current_timestamp granted_at FROM users u\n      WHERE trust_level >= 4 AND (\n        :backfill OR u.id IN (:user_ids)\n      )\n    ", :default_badge_grouping_id=>4, :trigger=>4, :default_allow_title=>true, :default_icon=>"fa-user", :system=>true}
 - Badge {:id=>17, :name=>"Reader", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>false, :show_posts=>false, :query=>"  SELECT id user_id, current_timestamp granted_at\n  FROM users\n  WHERE id IN\n  (\n    SELECT pt.user_id\n    FROM post_timings pt\n    JOIN badge_posts b ON b.post_number = pt.post_number AND\n                          b.topic_id = pt.topic_id\n    JOIN topics t ON t.id = pt.topic_id\n    LEFT JOIN user_badges ub ON ub.badge_id = 17 AND ub.user_id = pt.user_id\n    WHERE ub.id IS NULL AND t.posts_count > 100\n    GROUP BY pt.user_id, pt.topic_id, t.posts_count\n    HAVING count(*) >= t.posts_count\n  )\n", :default_badge_grouping_id=>1, :auto_revoke=>false, :system=>true}
 - Badge {:id=>16, :name=>"Read Guidelines", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>false, :show_posts=>false, :query=>"  SELECT user_id, read_faq granted_at\n  FROM user_stats\n  WHERE read_faq IS NOT NULL AND (user_id IN (:user_ids) OR :backfill)\n", :default_badge_grouping_id=>1, :trigger=>8, :system=>true}
 - Badge {:id=>14, :name=>"First Link", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :show_posts=>true, :query=>"  SELECT l.user_id, l.post_id, l.created_at granted_at\n  FROM\n  (\n    SELECT MIN(l1.id) id\n    FROM topic_links l1\n    JOIN badge_posts p1 ON p1.id = l1.post_id\n    JOIN badge_posts p2 ON p2.id = l1.link_post_id\n    WHERE NOT reflection AND p1.topic_id <> p2.topic_id AND not quote AND\n      (:backfill OR ( p1.id in (:post_ids) ))\n    GROUP BY l1.user_id\n  ) ids\n  JOIN topic_links l ON l.id = ids.id\n", :default_badge_grouping_id=>1, :trigger=>2, :system=>true}
 - Badge {:id=>15, :name=>"First Quote", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :show_posts=>true, :query=>"  SELECT ids.user_id, q.post_id, q.created_at granted_at\n  FROM\n  (\n    SELECT p1.user_id, MIN(q1.id) id\n    FROM quoted_posts q1\n    JOIN badge_posts p1 ON p1.id = q1.post_id\n    JOIN badge_posts p2 ON p2.id = q1.quoted_post_id\n    WHERE (:backfill OR ( p1.id IN (:post_ids) ))\n    GROUP BY p1.user_id\n  ) ids\n  JOIN quoted_posts q ON q.id = ids.id\n", :default_badge_grouping_id=>1, :trigger=>2, :system=>true}
 - Badge {:id=>11, :name=>"First Like", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :show_posts=>true, :query=>"  SELECT pa1.user_id, pa1.created_at granted_at, pa1.post_id\n  FROM (\n    SELECT pa.user_id, min(pa.id) id\n    FROM post_actions pa\n    JOIN badge_posts p on p.id = pa.post_id\n    WHERE post_action_type_id = 2 AND\n      (:backfill OR pa.post_id IN (:post_ids) )\n    GROUP BY pa.user_id\n  ) x\n  JOIN post_actions pa1 on pa1.id = x.id\n", :default_badge_grouping_id=>1, :trigger=>1, :system=>true}
 - Badge {:id=>13, :name=>"First Flag", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :show_posts=>false, :query=>"  SELECT pa1.user_id, pa1.created_at granted_at, pa1.post_id\n  FROM (\n    SELECT pa.user_id, min(pa.id) id\n    FROM post_actions pa\n    JOIN badge_posts p on p.id = pa.post_id\n    WHERE post_action_type_id IN (3,4,8) AND\n      (:backfill OR pa.post_id IN (:post_ids) )\n    GROUP BY pa.user_id\n  ) x\n  JOIN post_actions pa1 on pa1.id = x.id\n", :default_badge_grouping_id=>1, :trigger=>1, :auto_revoke=>false, :system=>true}
 - Badge {:id=>25, :name=>"Promoter", :default_icon=>"fa-user-plus", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>false, :show_posts=>false, :query=>"\n      SELECT u.id user_id, current_timestamp granted_at\n      FROM users u\n      WHERE u.id IN (\n        SELECT invited_by_id\n        FROM invites i\n        JOIN users u2 ON u2.id = i.user_id\n        WHERE i.deleted_at IS NULL AND u2.active AND u2.trust_level >= 0 AND u2.silenced_till IS NULL\n        GROUP BY invited_by_id\n        HAVING COUNT(*) >= 1\n      ) AND u.active AND u.silenced_till IS NULL AND u.id > 0 AND\n        (:backfill OR u.id IN (:user_ids) )\n    ", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>true, :system=>true}
 - Badge {:id=>26, :name=>"Campaigner", :default_icon=>"fa-user-plus", :badge_type_id=>2, :multiple_grant=>false, :target_posts=>false, :show_posts=>false, :query=>"\n      SELECT u.id user_id, current_timestamp granted_at\n      FROM users u\n      WHERE u.id IN (\n        SELECT invited_by_id\n        FROM invites i\n        JOIN users u2 ON u2.id = i.user_id\n        WHERE i.deleted_at IS NULL AND u2.active AND u2.trust_level >= 1 AND u2.silenced_till IS NULL\n        GROUP BY invited_by_id\n        HAVING COUNT(*) >= 3\n      ) AND u.active AND u.silenced_till IS NULL AND u.id > 0 AND\n        (:backfill OR u.id IN (:user_ids) )\n    ", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>true, :system=>true}
 - Badge {:id=>27, :name=>"Champion", :default_icon=>"fa-user-plus", :badge_type_id=>1, :multiple_grant=>false, :target_posts=>false, :show_posts=>false, :query=>"\n      SELECT u.id user_id, current_timestamp granted_at\n      FROM users u\n      WHERE u.id IN (\n        SELECT invited_by_id\n        FROM invites i\n        JOIN users u2 ON u2.id = i.user_id\n        WHERE i.deleted_at IS NULL AND u2.active AND u2.trust_level >= 2 AND u2.silenced_till IS NULL\n        GROUP BY invited_by_id\n        HAVING COUNT(*) >= 5\n      ) AND u.active AND u.silenced_till IS NULL AND u.id > 0 AND\n        (:backfill OR u.id IN (:user_ids) )\n    ", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>true, :system=>true}
 - Badge {:id=>12, :name=>"First Share", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :show_posts=>true, :query=>"  SELECT views.user_id, i2.post_id, i2.created_at granted_at\n  FROM\n  (\n    SELECT i.user_id, MIN(i.id) i_id\n    FROM incoming_links i\n    JOIN badge_posts p on p.id = i.post_id\n    WHERE i.user_id IS NOT NULL\n    GROUP BY i.user_id\n  ) as views\n  JOIN incoming_links i2 ON i2.id = views.i_id\n", :default_badge_grouping_id=>1, :trigger=>0, :system=>true}
 - Badge {:id=>21, :name=>"Nice Share", :badge_type_id=>3, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"  SELECT views.user_id, i2.post_id, current_timestamp granted_at\n  FROM\n  (\n    SELECT i.user_id, MIN(i.id) i_id\n    FROM incoming_links i\n    JOIN badge_posts p on p.id = i.post_id\n    WHERE i.user_id IS NOT NULL\n    GROUP BY i.user_id,i.post_id\n    HAVING COUNT(*) > 25\n  ) as views\n  JOIN incoming_links i2 ON i2.id = views.i_id\n", :default_badge_grouping_id=>2, :trigger=>0, :system=>true}
 - Badge {:id=>22, :name=>"Good Share", :badge_type_id=>2, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"  SELECT views.user_id, i2.post_id, current_timestamp granted_at\n  FROM\n  (\n    SELECT i.user_id, MIN(i.id) i_id\n    FROM incoming_links i\n    JOIN badge_posts p on p.id = i.post_id\n    WHERE i.user_id IS NOT NULL\n    GROUP BY i.user_id,i.post_id\n    HAVING COUNT(*) > 300\n  ) as views\n  JOIN incoming_links i2 ON i2.id = views.i_id\n", :default_badge_grouping_id=>2, :trigger=>0, :system=>true}
 - Badge {:id=>23, :name=>"Great Share", :badge_type_id=>1, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"  SELECT views.user_id, i2.post_id, current_timestamp granted_at\n  FROM\n  (\n    SELECT i.user_id, MIN(i.id) i_id\n    FROM incoming_links i\n    JOIN badge_posts p on p.id = i.post_id\n    WHERE i.user_id IS NOT NULL\n    GROUP BY i.user_id,i.post_id\n    HAVING COUNT(*) > 1000\n  ) as views\n  JOIN incoming_links i2 ON i2.id = views.i_id\n", :default_badge_grouping_id=>2, :trigger=>0, :system=>true}
 - Badge {:id=>5, :name=>"Welcome", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :show_posts=>true, :query=>"  SELECT p.user_id, min(post_id) post_id, min(pa.created_at) granted_at\n  FROM post_actions pa\n  JOIN badge_posts p on p.id = pa.post_id\n  WHERE post_action_type_id = 2 AND\n      (:backfill OR pa.post_id IN (:post_ids) )\n  GROUP BY p.user_id\n", :default_badge_grouping_id=>2, :trigger=>1, :system=>true}
 - Badge {:id=>9, :name=>"Autobiographer", :badge_type_id=>3, :multiple_grant=>false, :query=>"  SELECT u.id user_id, current_timestamp granted_at\n  FROM users u\n  JOIN user_profiles up on u.id = up.user_id\n  WHERE bio_raw IS NOT NULL AND LENGTH(TRIM(bio_raw)) > 10 AND\n        uploaded_avatar_id IS NOT NULL AND\n        (:backfill OR u.id IN (:user_ids) )\n", :default_badge_grouping_id=>1, :trigger=>8, :system=>true}
 - Badge {:id=>10, :name=>"Editor", :badge_type_id=>3, :multiple_grant=>false, :query=>"  SELECT p.user_id, min(p.id) post_id, min(p.created_at) granted_at\n  FROM badge_posts p\n  WHERE p.self_edits > 0 AND\n      (:backfill OR p.id IN (:post_ids) )\n  GROUP BY p.user_id\n", :default_badge_grouping_id=>1, :trigger=>2, :system=>true}
 - Badge {:id=>48, :name=>"Wiki Editor", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :query=>"SELECT DISTINCT ON (pr.user_id) pr.user_id, pr.post_id, pr.created_at granted_at\nFROM post_revisions pr\nJOIN badge_posts p on p.id = pr.post_id\nWHERE p.wiki\n    AND NOT pr.hidden\n    AND (:backfill OR p.id IN (:post_ids))\n", :default_badge_grouping_id=>1, :trigger=>2, :system=>true}
 - Badge {:id=>6, :name=>"Nice Post", :badge_type_id=>3, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"\n      SELECT p.user_id, p.id post_id, p.updated_at granted_at\n      FROM badge_posts p\n      WHERE p.post_number > 1 AND p.like_count >= 10 AND\n        (:backfill OR p.id IN (:post_ids) )\n    ", :default_badge_grouping_id=>3, :trigger=>1, :system=>true}
 - Badge {:id=>7, :name=>"Good Post", :badge_type_id=>2, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"\n      SELECT p.user_id, p.id post_id, p.updated_at granted_at\n      FROM badge_posts p\n      WHERE p.post_number > 1 AND p.like_count >= 25 AND\n        (:backfill OR p.id IN (:post_ids) )\n    ", :default_badge_grouping_id=>3, :trigger=>1, :system=>true}
 - Badge {:id=>8, :name=>"Great Post", :badge_type_id=>1, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"\n      SELECT p.user_id, p.id post_id, p.updated_at granted_at\n      FROM badge_posts p\n      WHERE p.post_number > 1 AND p.like_count >= 50 AND\n        (:backfill OR p.id IN (:post_ids) )\n    ", :default_badge_grouping_id=>3, :trigger=>1, :system=>true}
 - Badge {:id=>18, :name=>"Nice Topic", :badge_type_id=>3, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"\n      SELECT p.user_id, p.id post_id, p.updated_at granted_at\n      FROM badge_posts p\n      WHERE p.post_number = 1 AND p.like_count >= 10 AND\n        (:backfill OR p.id IN (:post_ids) )\n    ", :default_badge_grouping_id=>3, :trigger=>1, :system=>true}
 - Badge {:id=>19, :name=>"Good Topic", :badge_type_id=>2, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"\n      SELECT p.user_id, p.id post_id, p.updated_at granted_at\n      FROM badge_posts p\n      WHERE p.post_number = 1 AND p.like_count >= 25 AND\n        (:backfill OR p.id IN (:post_ids) )\n    ", :default_badge_grouping_id=>3, :trigger=>1, :system=>true}
 - Badge {:id=>20, :name=>"Great Topic", :badge_type_id=>1, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"\n      SELECT p.user_id, p.id post_id, p.updated_at granted_at\n      FROM badge_posts p\n      WHERE p.post_number = 1 AND p.like_count >= 50 AND\n        (:backfill OR p.id IN (:post_ids) )\n    ", :default_badge_grouping_id=>3, :trigger=>1, :system=>true}
 - Badge {:id=>24, :name=>"Anniversary", :default_icon=>"fa-clock-o", :badge_type_id=>2, :default_badge_grouping_id=>2, :query=>nil, :trigger=>0, :auto_revoke=>false, :system=>true, :multiple_grant=>true}
 - Badge {:id=>28, :name=>"Popular Link", :badge_type_id=>3, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"        SELECT tl.user_id, post_id, current_timestamp granted_at\n          FROM topic_links tl\n          JOIN badge_posts p ON p.id = post_id\n         WHERE NOT tl.internal\n           AND tl.clicks >= 50\n      GROUP BY tl.user_id, tl.post_id\n", :default_badge_grouping_id=>3, :trigger=>0, :system=>true}
 - Badge {:id=>29, :name=>"Hot Link", :badge_type_id=>2, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"        SELECT tl.user_id, post_id, current_timestamp granted_at\n          FROM topic_links tl\n          JOIN badge_posts p ON p.id = post_id\n         WHERE NOT tl.internal\n           AND tl.clicks >= 300\n      GROUP BY tl.user_id, tl.post_id\n", :default_badge_grouping_id=>3, :trigger=>0, :system=>true}
 - Badge {:id=>30, :name=>"Famous Link", :badge_type_id=>1, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"        SELECT tl.user_id, post_id, current_timestamp granted_at\n          FROM topic_links tl\n          JOIN badge_posts p ON p.id = post_id\n         WHERE NOT tl.internal\n           AND tl.clicks >= 1000\n      GROUP BY tl.user_id, tl.post_id\n", :default_badge_grouping_id=>3, :trigger=>0, :system=>true}
 - Badge {:id=>36, :name=>"Appreciated", :default_icon=>"fa-heart", :badge_type_id=>3, :query=>"      SELECT p.user_id, current_timestamp AS granted_at\n      FROM posts AS p\n      WHERE p.like_count >= 1\n        AND (:backfill OR p.user_id IN (:user_ids))\n      GROUP BY p.user_id\n      HAVING count(*) > 20\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>37, :name=>"Respected", :default_icon=>"fa-heart", :badge_type_id=>2, :query=>"      SELECT p.user_id, current_timestamp AS granted_at\n      FROM posts AS p\n      WHERE p.like_count >= 2\n        AND (:backfill OR p.user_id IN (:user_ids))\n      GROUP BY p.user_id\n      HAVING count(*) > 100\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>31, :name=>"Admired", :default_icon=>"fa-heart", :badge_type_id=>1, :query=>"      SELECT p.user_id, current_timestamp AS granted_at\n      FROM posts AS p\n      WHERE p.like_count >= 5\n        AND (:backfill OR p.user_id IN (:user_ids))\n      GROUP BY p.user_id\n      HAVING count(*) > 300\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>38, :name=>"Thank You", :default_icon=>"fa-heart", :badge_type_id=>3, :query=>"      SELECT us.user_id, current_timestamp AS granted_at\n      FROM user_stats AS us\n      INNER JOIN posts AS p ON p.user_id = us.user_id\n      WHERE p.like_count > 0\n        AND us.likes_given >= 10\n        AND (:backfill OR us.user_id IN (:user_ids))\n      GROUP BY us.user_id, us.likes_given\n      HAVING COUNT(*) > 20\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>32, :name=>"Gives Back", :default_icon=>"fa-heart", :badge_type_id=>2, :query=>"      SELECT us.user_id, current_timestamp AS granted_at\n      FROM user_stats AS us\n      INNER JOIN posts AS p ON p.user_id = us.user_id\n      WHERE p.like_count > 0\n        AND us.likes_given >= 100\n        AND (:backfill OR us.user_id IN (:user_ids))\n      GROUP BY us.user_id, us.likes_given\n      HAVING COUNT(*) > 100\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>39, :name=>"Empathetic", :default_icon=>"fa-heart", :badge_type_id=>1, :query=>"      SELECT us.user_id, current_timestamp AS granted_at\n      FROM user_stats AS us\n      INNER JOIN posts AS p ON p.user_id = us.user_id\n      WHERE p.like_count > 0\n        AND us.likes_given >= 1000\n        AND (:backfill OR us.user_id IN (:user_ids))\n      GROUP BY us.user_id, us.likes_given\n      HAVING COUNT(*) > 500\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>33, :name=>"Out of Love", :default_icon=>"fa-heart", :badge_type_id=>3, :query=>"      SELECT gdl.user_id, current_timestamp AS granted_at\n      FROM given_daily_likes AS gdl\n      WHERE gdl.limit_reached\n        AND (:backfill OR gdl.user_id IN (:user_ids))\n      GROUP BY gdl.user_id\n      HAVING COUNT(*) >= 1\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>34, :name=>"Higher Love", :default_icon=>"fa-heart", :badge_type_id=>2, :query=>"      SELECT gdl.user_id, current_timestamp AS granted_at\n      FROM given_daily_likes AS gdl\n      WHERE gdl.limit_reached\n        AND (:backfill OR gdl.user_id IN (:user_ids))\n      GROUP BY gdl.user_id\n      HAVING COUNT(*) >= 5\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>35, :name=>"Crazy in Love", :default_icon=>"fa-heart", :badge_type_id=>1, :query=>"      SELECT gdl.user_id, current_timestamp AS granted_at\n      FROM given_daily_likes AS gdl\n      WHERE gdl.limit_reached\n        AND (:backfill OR gdl.user_id IN (:user_ids))\n      GROUP BY gdl.user_id\n      HAVING COUNT(*) >= 20\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>40, :name=>"First Mention", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :show_posts=>true, :query=>"  SELECT acting_user_id AS user_id, min(target_post_id) AS post_id, min(p.created_at) AS granted_at\n  FROM user_actions\n  JOIN posts p ON p.id = target_post_id\n  JOIN topics t ON t.id = topic_id\n  JOIN categories c on c.id = category_id\n  WHERE action_type = 7\n    AND NOT read_restricted\n    AND p.deleted_at IS  NULL\n    AND t.deleted_at IS  NULL\n    AND t.visible\n    AND t.archetype <> 'private_message'\n    AND (:backfill OR p.id IN (:post_ids))\n  GROUP BY acting_user_id\n", :default_badge_grouping_id=>1, :trigger=>2, :system=>true}
 - Badge {:id=>41, :name=>"First Emoji", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :show_posts=>true, :query=>nil, :default_badge_grouping_id=>1, :trigger=>0, :system=>true}
 - Badge {:id=>42, :name=>"First Onebox", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :show_posts=>true, :query=>nil, :default_badge_grouping_id=>1, :trigger=>0, :system=>true}
 - Badge {:id=>43, :name=>"First Reply By Email", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :show_posts=>true, :query=>nil, :default_badge_grouping_id=>1, :trigger=>0, :system=>true}
 - Badge {:id=>44, :name=>"New User of the Month", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>false, :show_posts=>false, :query=>nil, :default_badge_grouping_id=>1, :trigger=>0, :system=>true}
 - Badge {:id=>45, :name=>"Enthusiast", :default_icon=>"fa-eye", :badge_type_id=>3, :query=>"WITH consecutive_visits AS (\n  SELECT user_id\n       , visited_at\n       , visited_at - (DENSE_RANK() OVER (PARTITION BY user_id ORDER BY visited_at))::int s\n    FROM user_visits\n), visits AS (\n  SELECT user_id\n       , MIN(visited_at) \"start\"\n       , DENSE_RANK() OVER (PARTITION BY user_id ORDER BY s) \"rank\"\n    FROM consecutive_visits\nGROUP BY user_id, s\n  HAVING COUNT(*) >= 10\n)\nSELECT user_id\n     , \"start\" + interval '10 days' \"granted_at\"\n  FROM visits\n WHERE \"rank\" = 1\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>46, :name=>"Aficionado", :default_icon=>"fa-eye", :badge_type_id=>2, :query=>"WITH consecutive_visits AS (\n  SELECT user_id\n       , visited_at\n       , visited_at - (DENSE_RANK() OVER (PARTITION BY user_id ORDER BY visited_at))::int s\n    FROM user_visits\n), visits AS (\n  SELECT user_id\n       , MIN(visited_at) \"start\"\n       , DENSE_RANK() OVER (PARTITION BY user_id ORDER BY s) \"rank\"\n    FROM consecutive_visits\nGROUP BY user_id, s\n  HAVING COUNT(*) >= 100\n)\nSELECT user_id\n     , \"start\" + interval '100 days' \"granted_at\"\n  FROM visits\n WHERE \"rank\" = 1\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>47, :name=>"Devotee", :default_icon=>"fa-eye", :badge_type_id=>1, :query=>"WITH consecutive_visits AS (\n  SELECT user_id\n       , visited_at\n       , visited_at - (DENSE_RANK() OVER (PARTITION BY user_id ORDER BY visited_at))::int s\n    FROM user_visits\n), visits AS (\n  SELECT user_id\n       , MIN(visited_at) \"start\"\n       , DENSE_RANK() OVER (PARTITION BY user_id ORDER BY s) \"rank\"\n    FROM consecutive_visits\nGROUP BY user_id, s\n  HAVING COUNT(*) >= 365\n)\nSELECT user_id\n     , \"start\" + interval '365 days' \"granted_at\"\n  FROM visits\n WHERE \"rank\" = 1\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}

== Seed from /var/www/discourse/db/fixtures/007_web_hook_event_types.rb
 - WebHookEventType {:id=>1, :name=>"topic"}
 - WebHookEventType {:id=>2, :name=>"post"}
 - WebHookEventType {:id=>3, :name=>"user"}
 - WebHookEventType {:id=>4, :name=>"group"}
 - WebHookEventType {:id=>5, :name=>"category"}
 - WebHookEventType {:id=>6, :name=>"tag"}
 - WebHookEventType {:id=>7, :name=>"flag"}
 - WebHookEventType {:id=>8, :name=>"queued_post"}

== Seed from /var/www/discourse/db/fixtures/009_users.rb
 - UserEmail {:id=>-1, :email=>"no_email", :primary=>true, :user_id=>-1}
 - User {:id=>-1, :name=>"system", :username=>"system", :username_lower=>"system", :password=>"0ada858ea96ec97dae06e3b449315dce", :active=>true, :admin=>true, :moderator=>true, :approved=>true, :trust_level=>4}

== Seed from /var/www/discourse/db/fixtures/010_uploads.rb
 - Upload {:id=>-1, :user_id=>-1, :original_filename=>"d-logo-sketch.png", :url=>"/images/d-logo-sketch.png", :filesize=>14461, :extension=>"png"}
 - Upload {:id=>-2, :user_id=>-1, :original_filename=>"d-logo-sketch-small.png", :url=>"/images/d-logo-sketch-small.png", :filesize=>6175, :extension=>"png"}
 - Upload {:id=>-3, :user_id=>-1, :original_filename=>"default-favicon.ico", :url=>"/images/default-favicon.ico", :filesize=>6518, :extension=>"ico"}
 - Upload {:id=>-4, :user_id=>-1, :original_filename=>"default-apple-touch-icon.png", :url=>"/images/default-apple-touch-icon.png", :filesize=>8166, :extension=>"png"}

== Seed from /var/www/discourse/db/fixtures/500_categories.rb

== Seed from /var/www/discourse/db/fixtures/600_themes.rb
> Seeding dark and light themes

== Seed from /var/www/discourse/db/fixtures/990_settings.rb

== Seed from /var/www/discourse/db/fixtures/990_topics.rb

== Seed from /var/www/discourse/plugins/discourse-narrative-bot/db/fixtures/001_discobot.rb
 - UserEmail {:id=>-2, :email=>"discobot_email", :primary=>true, :user_id=>-2}
 - User {:id=>-2, :name=>"discobot", :username=>"discobot", :username_lower=>"discobot", :password=>"84ce680bd3271e1699f370170fd38a3b", :active=>true, :approved=>true, :trust_level=>4}

== Seed from /var/www/discourse/plugins/discourse-narrative-bot/db/fixtures/002_badges.rb
-- enable_extension("hstore")
   -> 0.0164s
-- enable_extension("pg_trgm")
   -> 0.0055s
-- enable_extension("plpgsql")
   -> 0.0016s
-- create_table("api_keys", {:id=>:serial, :force=>:cascade})
   -> 0.0049s
-- create_table("application_requests", {:id=>:serial, :force=>:cascade})
   -> 0.0024s
-- create_table("badge_groupings", {:id=>:serial, :force=>:cascade})
   -> 0.0014s
-- create_table("badge_types", {:id=>:serial, :force=>:cascade})
   -> 0.0023s
-- create_table("badges", {:id=>:serial, :force=>:cascade})
   -> 0.0047s
-- create_table("categories", {:id=>:serial, :force=>:cascade})
   -> 0.0100s
-- create_table("categories_web_hooks", {:id=>false, :force=>:cascade})
   -> 0.0015s
-- create_table("category_custom_fields", {:id=>:serial, :force=>:cascade})
   -> 0.0025s
-- create_table("category_featured_topics", {:id=>:serial, :force=>:cascade})
   -> 0.0031s
-- create_table("category_groups", {:id=>:serial, :force=>:cascade})
   -> 0.0012s
-- create_table("category_search_data", {:primary_key=>"category_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0021s
-- create_table("category_tag_groups", {:id=>:serial, :force=>:cascade})
   -> 0.0019s
-- create_table("category_tag_stats", {:force=>:cascade})
   -> 0.0052s
-- create_table("category_tags", {:id=>:serial, :force=>:cascade})
   -> 0.0029s
-- create_table("category_users", {:id=>:serial, :force=>:cascade})
   -> 0.0029s
-- create_table("child_themes", {:id=>:serial, :force=>:cascade})
   -> 0.0034s
-- create_table("color_scheme_colors", {:id=>:serial, :force=>:cascade})
   -> 0.0024s
-- create_table("color_schemes", {:id=>:serial, :force=>:cascade})
   -> 0.0017s
-- create_table("custom_emojis", {:id=>:serial, :force=>:cascade})
   -> 0.0024s
-- create_table("developers", {:id=>:serial, :force=>:cascade})
   -> 0.0011s
-- create_table("directory_items", {:id=>:serial, :force=>:cascade})
   -> 0.0087s
-- create_table("draft_sequences", {:id=>:serial, :force=>:cascade})
   -> 0.0027s
-- create_table("drafts", {:id=>:serial, :force=>:cascade})
   -> 0.0029s
-- create_table("email_change_requests", {:id=>:serial, :force=>:cascade})
   -> 0.0023s
-- create_table("email_logs", {:id=>:serial, :force=>:cascade})
   -> 0.0071s
-- create_table("email_tokens", {:id=>:serial, :force=>:cascade})
   -> 0.0040s
-- create_table("embeddable_hosts", {:id=>:serial, :force=>:cascade})
   -> 0.0014s
-- create_table("github_user_infos", {:id=>:serial, :force=>:cascade})
   -> 0.0033s
-- create_table("given_daily_likes", {:id=>false, :force=>:cascade})
   -> 0.0026s
-- create_table("google_user_infos", {:id=>:serial, :force=>:cascade})
   -> 0.0033s
-- create_table("group_archived_messages", {:id=>:serial, :force=>:cascade})
   -> 0.0019s
-- create_table("group_custom_fields", {:id=>:serial, :force=>:cascade})
   -> 0.0023s
-- create_table("group_histories", {:id=>:serial, :force=>:cascade})
   -> 0.0051s
-- create_table("group_mentions", {:id=>:serial, :force=>:cascade})
   -> 0.0029s
-- create_table("group_users", {:id=>:serial, :force=>:cascade})
   -> 0.0032s
-- create_table("groups", {:id=>:serial, :force=>:cascade})
   -> 0.0053s
-- create_table("groups_web_hooks", {:id=>false, :force=>:cascade})
   -> 0.0015s
-- create_table("ignored_users", {:force=>:cascade})
   -> 0.0029s
-- create_table("incoming_domains", {:id=>:serial, :force=>:cascade})
   -> 0.0022s
-- create_table("incoming_emails", {:id=>:serial, :force=>:cascade})
   -> 0.0058s
-- create_table("incoming_links", {:id=>:serial, :force=>:cascade})
   -> 0.0037s
-- create_table("incoming_referers", {:id=>:serial, :force=>:cascade})
   -> 0.0025s
-- create_table("instagram_user_infos", {:id=>:serial, :force=>:cascade})
   -> 0.0015s
-- create_table("invited_groups", {:id=>:serial, :force=>:cascade})
   -> 0.0011s
-- create_table("invites", {:id=>:serial, :force=>:cascade})
   -> 0.0039s
-- create_table("javascript_caches", {:force=>:cascade})
   -> 0.0036s
-- create_table("message_bus", {:id=>:serial, :force=>:cascade})
   -> 0.0023s
-- create_table("muted_users", {:id=>:serial, :force=>:cascade})
   -> 0.0030s
-- create_table("notifications", {:id=>:serial, :force=>:cascade})
   -> 0.0065s
-- create_table("oauth2_user_infos", {:id=>:serial, :force=>:cascade})
   -> 0.0026s
-- create_table("onceoff_logs", {:id=>:serial, :force=>:cascade})
   -> 0.0024s
-- create_table("optimized_images", {:id=>:serial, :force=>:cascade})
   -> 0.0144s
-- create_table("permalinks", {:id=>:serial, :force=>:cascade})
   -> 0.0024s
-- create_table("plugin_store_rows", {:id=>:serial, :force=>:cascade})
   -> 0.0023s
-- create_table("poll_options", {:force=>:cascade})
   -> 0.0036s
-- create_table("poll_votes", {:id=>false, :force=>:cascade})
   -> 0.0046s
-- create_table("polls", {:force=>:cascade})
   -> 0.0042s
-- create_table("post_action_types", {:id=>:serial, :force=>:cascade})
   -> 0.0016s
-- create_table("post_actions", {:id=>:serial, :force=>:cascade})
   -> 0.0064s
-- create_table("post_custom_fields", {:id=>:serial, :force=>:cascade})
   -> 0.0047s
-- create_table("post_details", {:id=>:serial, :force=>:cascade})
   -> 0.0027s
-- create_table("post_replies", {:id=>false, :force=>:cascade})
   -> 0.0015s
-- create_table("post_reply_keys", {:force=>:cascade})
   -> 0.0031s
-- create_table("post_revisions", {:id=>:serial, :force=>:cascade})
   -> 0.0037s
-- create_table("post_search_data", {:primary_key=>"post_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0021s
-- create_table("post_stats", {:id=>:serial, :force=>:cascade})
   -> 0.0021s
-- create_table("post_timings", {:id=>false, :force=>:cascade})
   -> 0.0034s
-- create_table("post_uploads", {:id=>:serial, :force=>:cascade})
   -> 0.0038s
-- create_table("posts", {:id=>:serial, :comment=>"If you want to query public posts only, use the badge_posts view.", :force=>:cascade})
   -> 0.0136s
-- create_table("push_subscriptions", {:force=>:cascade})
   -> 0.0013s
-- create_table("queued_posts", {:id=>:serial, :force=>:cascade})
   -> 0.0034s
-- create_table("quoted_posts", {:id=>:serial, :force=>:cascade})
   -> 0.0028s
-- create_table("remote_themes", {:id=>:serial, :force=>:cascade})
   -> 0.0015s
-- create_table("scheduler_stats", {:id=>:serial, :force=>:cascade})
   -> 0.0014s
-- create_table("schema_migration_details", {:id=>:serial, :force=>:cascade})
   -> 0.0023s
-- create_table("screened_emails", {:id=>:serial, :force=>:cascade})
   -> 0.0033s
-- create_table("screened_ip_addresses", {:id=>:serial, :force=>:cascade})
   -> 0.0033s
-- create_table("screened_urls", {:id=>:serial, :force=>:cascade})
   -> 0.0036s
-- create_table("search_logs", {:id=>:serial, :force=>:cascade})
   -> 0.0015s
-- create_table("shared_drafts", {:force=>:cascade})
   -> 0.0028s
-- create_table("single_sign_on_records", {:id=>:serial, :force=>:cascade})
   -> 0.0036s
-- create_table("site_settings", {:id=>:serial, :force=>:cascade})
   -> 0.0014s
-- create_table("skipped_email_logs", {:force=>:cascade})
   -> 0.0051s
-- create_table("stylesheet_cache", {:id=>:serial, :force=>:cascade})
   -> 0.0030s
-- create_table("tag_group_memberships", {:id=>:serial, :force=>:cascade})
   -> 0.0023s
-- create_table("tag_group_permissions", {:force=>:cascade})
   -> 0.0032s
-- create_table("tag_groups", {:id=>:serial, :force=>:cascade})
   -> 0.0015s
-- create_table("tag_search_data", {:primary_key=>"tag_id", :id=>:serial, :force=>:cascade})
   -> 0.0024s
-- create_table("tag_users", {:id=>:serial, :force=>:cascade})
   -> 0.0031s
-- create_table("tags", {:id=>:serial, :force=>:cascade})
   -> 0.0034s
-- create_table("tags_web_hooks", {:id=>false, :force=>:cascade})
   -> 0.0014s
-- create_table("theme_fields", {:id=>:serial, :force=>:cascade})
   -> 0.0028s
-- create_table("theme_settings", {:force=>:cascade})
   -> 0.0015s
-- create_table("theme_translation_overrides", {:force=>:cascade})
   -> 0.0034s
-- create_table("themes", {:id=>:serial, :force=>:cascade})
   -> 0.0028s
-- create_table("top_topics", {:id=>:serial, :force=>:cascade})
   -> 0.0304s
-- create_table("topic_allowed_groups", {:id=>:serial, :force=>:cascade})
   -> 0.0036s
-- create_table("topic_allowed_users", {:id=>:serial, :force=>:cascade})
   -> 0.0035s
-- create_table("topic_custom_fields", {:id=>:serial, :force=>:cascade})
   -> 0.0034s
-- create_table("topic_embeds", {:id=>:serial, :force=>:cascade})
   -> 0.0027s
-- create_table("topic_invites", {:id=>:serial, :force=>:cascade})
   -> 0.0031s
-- create_table("topic_link_clicks", {:id=>:serial, :force=>:cascade})
   -> 0.0024s
-- create_table("topic_links", {:id=>:serial, :force=>:cascade})
   -> 0.0070s
-- create_table("topic_search_data", {:primary_key=>"topic_id", :id=>:serial, :force=>:cascade})
   -> 0.0027s
-- create_table("topic_tags", {:id=>:serial, :force=>:cascade})
   -> 0.0023s
-- create_table("topic_timers", {:id=>:serial, :force=>:cascade})
   -> 0.0037s
-- create_table("topic_users", {:id=>:serial, :force=>:cascade})
   -> 0.0040s
-- create_table("topic_views", {:id=>false, :force=>:cascade})
   -> 0.0049s
-- create_table("topics", {:id=>:serial, :comment=>"To query public topics only: SELECT ... FROM topics t LEFT INNER JOIN categories c ON (t.category_id = c.id AND c.read_restricted = false)", :force=>:cascade})
   -> 0.0142s
-- create_table("translation_overrides", {:id=>:serial, :force=>:cascade})
   -> 0.0025s
-- create_table("unsubscribe_keys", {:primary_key=>"key", :id=>:string, :limit=>64, :force=>:cascade})
   -> 0.0020s
-- create_table("uploads", {:id=>:serial, :force=>:cascade})
   -> 0.0074s
-- create_table("user_actions", {:id=>:serial, :force=>:cascade})
   -> 0.0061s
-- create_table("user_api_keys", {:id=>:serial, :force=>:cascade})
   -> 0.0043s
-- create_table("user_archived_messages", {:id=>:serial, :force=>:cascade})
   -> 0.0020s
-- create_table("user_associated_accounts", {:force=>:cascade})
   -> 0.0040s
-- create_table("user_auth_token_logs", {:id=>:serial, :force=>:cascade})
   -> 0.0014s
-- create_table("user_auth_tokens", {:id=>:serial, :force=>:cascade})
   -> 0.0037s
-- create_table("user_avatars", {:id=>:serial, :force=>:cascade})
   -> 0.0039s
-- create_table("user_badges", {:id=>:serial, :force=>:cascade})
   -> 0.0049s
-- create_table("user_custom_fields", {:id=>:serial, :force=>:cascade})
   -> 0.0025s
-- create_table("user_emails", {:id=>:serial, :force=>:cascade})
   -> 0.0043s
-- create_table("user_exports", {:id=>:serial, :force=>:cascade})
   -> 0.0014s
-- create_table("user_field_options", {:id=>:serial, :force=>:cascade})
   -> 0.0013s
-- create_table("user_fields", {:id=>:serial, :force=>:cascade})
   -> 0.0021s
-- create_table("user_histories", {:id=>:serial, :force=>:cascade})
   -> 0.0078s
-- create_table("user_open_ids", {:id=>:serial, :force=>:cascade})
   -> 0.0025s
-- create_table("user_options", {:id=>false, :force=>:cascade})
   -> 0.0045s
-- create_table("user_profile_views", {:id=>:serial, :force=>:cascade})
   -> 0.0040s
-- create_table("user_profiles", {:primary_key=>"user_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0044s
-- create_table("user_search_data", {:primary_key=>"user_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0023s
-- create_table("user_second_factors", {:force=>:cascade})
   -> 0.0034s
-- create_table("user_stats", {:primary_key=>"user_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0028s
-- create_table("user_uploads", {:force=>:cascade})
   -> 0.0020s
-- create_table("user_visits", {:id=>:serial, :force=>:cascade})
   -> 0.0042s
-- create_table("user_warnings", {:id=>:serial, :force=>:cascade})
   -> 0.0029s
-- create_table("users", {:id=>:serial, :force=>:cascade})
   -> 0.0105s
-- create_table("watched_words", {:id=>:serial, :force=>:cascade})
   -> 0.0026s
-- create_table("web_crawler_requests", {:force=>:cascade})
   -> 0.0026s
-- create_table("web_hook_event_types", {:id=>:serial, :force=>:cascade})
   -> 0.0014s
-- create_table("web_hook_event_types_hooks", {:id=>false, :force=>:cascade})
   -> 0.0017s
-- create_table("web_hook_events", {:id=>:serial, :force=>:cascade})
   -> 0.0027s
-- create_table("web_hooks", {:id=>:serial, :force=>:cascade})
   -> 0.0024s
-- add_foreign_key("poll_options", "polls")
   -> 0.0012s
-- add_foreign_key("poll_votes", "poll_options")
   -> 0.0009s
-- add_foreign_key("poll_votes", "polls")
   -> 0.0008s
-- add_foreign_key("poll_votes", "users")
   -> 0.0012s
-- add_foreign_key("polls", "posts")
   -> 0.0012s

== Seed from /var/www/discourse/db/fixtures/001_refresh.rb

== Seed from /var/www/discourse/db/fixtures/002_groups.rb

== Seed from /var/www/discourse/db/fixtures/003_post_action_types.rb
 - PostActionType {:id=>1, :name_key=>"bookmark", :is_flag=>false, :position=>1}
 - PostActionType {:id=>2, :name_key=>"like", :is_flag=>false, :icon=>"heart", :position=>2}
 - PostActionType {:id=>3, :name_key=>"off_topic", :is_flag=>true, :position=>3}
 - PostActionType {:id=>4, :name_key=>"inappropriate", :is_flag=>true, :position=>4}
 - PostActionType {:id=>8, :name_key=>"spam", :is_flag=>true, :position=>6}
 - PostActionType {:id=>6, :name_key=>"notify_user", :is_flag=>true, :position=>7}
 - PostActionType {:id=>7, :name_key=>"notify_moderators", :is_flag=>true, :position=>8}

== Seed from /var/www/discourse/db/fixtures/004_screened_ip_addresses.rb
 - ScreenedIpAddress {:id=>1, :ip_address=>"10.0.0.0/8", :action_type=>2}
 - ScreenedIpAddress {:id=>2, :ip_address=>"192.168.0.0/16", :action_type=>2}
 - ScreenedIpAddress {:id=>3, :ip_address=>"127.0.0.0/8", :action_type=>2}
 - ScreenedIpAddress {:id=>4, :ip_address=>"172.16.0.0/12", :action_type=>2}
 - ScreenedIpAddress {:id=>5, :ip_address=>"fc00::/7", :action_type=>2}

== Seed from /var/www/discourse/db/fixtures/005_badge_types.rb
 - BadgeType {:id=>1, :name=>"Gold"}
 - BadgeType {:id=>2, :name=>"Silver"}
 - BadgeType {:id=>3, :name=>"Bronze"}

== Seed from /var/www/discourse/db/fixtures/006_badges.rb
 - BadgeGrouping {:id=>1, :name=>"Getting Started", :default_position=>10}
 - BadgeGrouping {:id=>2, :name=>"Community", :default_position=>11}
 - BadgeGrouping {:id=>3, :name=>"Posting", :default_position=>12}
 - BadgeGrouping {:id=>4, :name=>"Trust Level", :default_position=>13}
 - BadgeGrouping {:id=>5, :name=>"Other", :default_position=>14}
 - Badge {:id=>1, :name=>"Basic User", :badge_type_id=>3, :query=>"\n      SELECT u.id user_id, current_timestamp granted_at FROM users u\n      WHERE trust_level >= 1 AND (\n        :backfill OR u.id IN (:user_ids)\n      )\n    ", :default_badge_grouping_id=>4, :trigger=>4, :default_allow_title=>false, :default_icon=>"fa-user", :system=>true}
 - Badge {:id=>2, :name=>"Member", :badge_type_id=>3, :query=>"\n      SELECT u.id user_id, current_timestamp granted_at FROM users u\n      WHERE trust_level >= 2 AND (\n        :backfill OR u.id IN (:user_ids)\n      )\n    ", :default_badge_grouping_id=>4, :trigger=>4, :default_allow_title=>false, :default_icon=>"fa-user", :system=>true}
 - Badge {:id=>3, :name=>"Regular", :badge_type_id=>2, :query=>"\n      SELECT u.id user_id, current_timestamp granted_at FROM users u\n      WHERE trust_level >= 3 AND (\n        :backfill OR u.id IN (:user_ids)\n      )\n    ", :default_badge_grouping_id=>4, :trigger=>4, :default_allow_title=>true, :default_icon=>"fa-user", :system=>true}
 - Badge {:id=>4, :name=>"Leader", :badge_type_id=>1, :query=>"\n      SELECT u.id user_id, current_timestamp granted_at FROM users u\n      WHERE trust_level >= 4 AND (\n        :backfill OR u.id IN (:user_ids)\n      )\n    ", :default_badge_grouping_id=>4, :trigger=>4, :default_allow_title=>true, :default_icon=>"fa-user", :system=>true}
 - Badge {:id=>17, :name=>"Reader", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>false, :show_posts=>false, :query=>"  SELECT id user_id, current_timestamp granted_at\n  FROM users\n  WHERE id IN\n  (\n    SELECT pt.user_id\n    FROM post_timings pt\n    JOIN badge_posts b ON b.post_number = pt.post_number AND\n                          b.topic_id = pt.topic_id\n    JOIN topics t ON t.id = pt.topic_id\n    LEFT JOIN user_badges ub ON ub.badge_id = 17 AND ub.user_id = pt.user_id\n    WHERE ub.id IS NULL AND t.posts_count > 100\n    GROUP BY pt.user_id, pt.topic_id, t.posts_count\n    HAVING count(*) >= t.posts_count\n  )\n", :default_badge_grouping_id=>1, :auto_revoke=>false, :system=>true}
 - Badge {:id=>16, :name=>"Read Guidelines", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>false, :show_posts=>false, :query=>"  SELECT user_id, read_faq granted_at\n  FROM user_stats\n  WHERE read_faq IS NOT NULL AND (user_id IN (:user_ids) OR :backfill)\n", :default_badge_grouping_id=>1, :trigger=>8, :system=>true}
 - Badge {:id=>14, :name=>"First Link", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :show_posts=>true, :query=>"  SELECT l.user_id, l.post_id, l.created_at granted_at\n  FROM\n  (\n    SELECT MIN(l1.id) id\n    FROM topic_links l1\n    JOIN badge_posts p1 ON p1.id = l1.post_id\n    JOIN badge_posts p2 ON p2.id = l1.link_post_id\n    WHERE NOT reflection AND p1.topic_id <> p2.topic_id AND not quote AND\n      (:backfill OR ( p1.id in (:post_ids) ))\n    GROUP BY l1.user_id\n  ) ids\n  JOIN topic_links l ON l.id = ids.id\n", :default_badge_grouping_id=>1, :trigger=>2, :system=>true}
 - Badge {:id=>15, :name=>"First Quote", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :show_posts=>true, :query=>"  SELECT ids.user_id, q.post_id, q.created_at granted_at\n  FROM\n  (\n    SELECT p1.user_id, MIN(q1.id) id\n    FROM quoted_posts q1\n    JOIN badge_posts p1 ON p1.id = q1.post_id\n    JOIN badge_posts p2 ON p2.id = q1.quoted_post_id\n    WHERE (:backfill OR ( p1.id IN (:post_ids) ))\n    GROUP BY p1.user_id\n  ) ids\n  JOIN quoted_posts q ON q.id = ids.id\n", :default_badge_grouping_id=>1, :trigger=>2, :system=>true}
 - Badge {:id=>11, :name=>"First Like", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :show_posts=>true, :query=>"  SELECT pa1.user_id, pa1.created_at granted_at, pa1.post_id\n  FROM (\n    SELECT pa.user_id, min(pa.id) id\n    FROM post_actions pa\n    JOIN badge_posts p on p.id = pa.post_id\n    WHERE post_action_type_id = 2 AND\n      (:backfill OR pa.post_id IN (:post_ids) )\n    GROUP BY pa.user_id\n  ) x\n  JOIN post_actions pa1 on pa1.id = x.id\n", :default_badge_grouping_id=>1, :trigger=>1, :system=>true}
 - Badge {:id=>13, :name=>"First Flag", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :show_posts=>false, :query=>"  SELECT pa1.user_id, pa1.created_at granted_at, pa1.post_id\n  FROM (\n    SELECT pa.user_id, min(pa.id) id\n    FROM post_actions pa\n    JOIN badge_posts p on p.id = pa.post_id\n    WHERE post_action_type_id IN (3,4,8) AND\n      (:backfill OR pa.post_id IN (:post_ids) )\n    GROUP BY pa.user_id\n  ) x\n  JOIN post_actions pa1 on pa1.id = x.id\n", :default_badge_grouping_id=>1, :trigger=>1, :auto_revoke=>false, :system=>true}
 - Badge {:id=>25, :name=>"Promoter", :default_icon=>"fa-user-plus", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>false, :show_posts=>false, :query=>"\n      SELECT u.id user_id, current_timestamp granted_at\n      FROM users u\n      WHERE u.id IN (\n        SELECT invited_by_id\n        FROM invites i\n        JOIN users u2 ON u2.id = i.user_id\n        WHERE i.deleted_at IS NULL AND u2.active AND u2.trust_level >= 0 AND u2.silenced_till IS NULL\n        GROUP BY invited_by_id\n        HAVING COUNT(*) >= 1\n      ) AND u.active AND u.silenced_till IS NULL AND u.id > 0 AND\n        (:backfill OR u.id IN (:user_ids) )\n    ", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>true, :system=>true}
 - Badge {:id=>26, :name=>"Campaigner", :default_icon=>"fa-user-plus", :badge_type_id=>2, :multiple_grant=>false, :target_posts=>false, :show_posts=>false, :query=>"\n      SELECT u.id user_id, current_timestamp granted_at\n      FROM users u\n      WHERE u.id IN (\n        SELECT invited_by_id\n        FROM invites i\n        JOIN users u2 ON u2.id = i.user_id\n        WHERE i.deleted_at IS NULL AND u2.active AND u2.trust_level >= 1 AND u2.silenced_till IS NULL\n        GROUP BY invited_by_id\n        HAVING COUNT(*) >= 3\n      ) AND u.active AND u.silenced_till IS NULL AND u.id > 0 AND\n        (:backfill OR u.id IN (:user_ids) )\n    ", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>true, :system=>true}
 - Badge {:id=>27, :name=>"Champion", :default_icon=>"fa-user-plus", :badge_type_id=>1, :multiple_grant=>false, :target_posts=>false, :show_posts=>false, :query=>"\n      SELECT u.id user_id, current_timestamp granted_at\n      FROM users u\n      WHERE u.id IN (\n        SELECT invited_by_id\n        FROM invites i\n        JOIN users u2 ON u2.id = i.user_id\n        WHERE i.deleted_at IS NULL AND u2.active AND u2.trust_level >= 2 AND u2.silenced_till IS NULL\n        GROUP BY invited_by_id\n        HAVING COUNT(*) >= 5\n      ) AND u.active AND u.silenced_till IS NULL AND u.id > 0 AND\n        (:backfill OR u.id IN (:user_ids) )\n    ", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>true, :system=>true}
 - Badge {:id=>12, :name=>"First Share", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :show_posts=>true, :query=>"  SELECT views.user_id, i2.post_id, i2.created_at granted_at\n  FROM\n  (\n    SELECT i.user_id, MIN(i.id) i_id\n    FROM incoming_links i\n    JOIN badge_posts p on p.id = i.post_id\n    WHERE i.user_id IS NOT NULL\n    GROUP BY i.user_id\n  ) as views\n  JOIN incoming_links i2 ON i2.id = views.i_id\n", :default_badge_grouping_id=>1, :trigger=>0, :system=>true}
 - Badge {:id=>21, :name=>"Nice Share", :badge_type_id=>3, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"  SELECT views.user_id, i2.post_id, current_timestamp granted_at\n  FROM\n  (\n    SELECT i.user_id, MIN(i.id) i_id\n    FROM incoming_links i\n    JOIN badge_posts p on p.id = i.post_id\n    WHERE i.user_id IS NOT NULL\n    GROUP BY i.user_id,i.post_id\n    HAVING COUNT(*) > 25\n  ) as views\n  JOIN incoming_links i2 ON i2.id = views.i_id\n", :default_badge_grouping_id=>2, :trigger=>0, :system=>true}
 - Badge {:id=>22, :name=>"Good Share", :badge_type_id=>2, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"  SELECT views.user_id, i2.post_id, current_timestamp granted_at\n  FROM\n  (\n    SELECT i.user_id, MIN(i.id) i_id\n    FROM incoming_links i\n    JOIN badge_posts p on p.id = i.post_id\n    WHERE i.user_id IS NOT NULL\n    GROUP BY i.user_id,i.post_id\n    HAVING COUNT(*) > 300\n  ) as views\n  JOIN incoming_links i2 ON i2.id = views.i_id\n", :default_badge_grouping_id=>2, :trigger=>0, :system=>true}
 - Badge {:id=>23, :name=>"Great Share", :badge_type_id=>1, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"  SELECT views.user_id, i2.post_id, current_timestamp granted_at\n  FROM\n  (\n    SELECT i.user_id, MIN(i.id) i_id\n    FROM incoming_links i\n    JOIN badge_posts p on p.id = i.post_id\n    WHERE i.user_id IS NOT NULL\n    GROUP BY i.user_id,i.post_id\n    HAVING COUNT(*) > 1000\n  ) as views\n  JOIN incoming_links i2 ON i2.id = views.i_id\n", :default_badge_grouping_id=>2, :trigger=>0, :system=>true}
 - Badge {:id=>5, :name=>"Welcome", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :show_posts=>true, :query=>"  SELECT p.user_id, min(post_id) post_id, min(pa.created_at) granted_at\n  FROM post_actions pa\n  JOIN badge_posts p on p.id = pa.post_id\n  WHERE post_action_type_id = 2 AND\n      (:backfill OR pa.post_id IN (:post_ids) )\n  GROUP BY p.user_id\n", :default_badge_grouping_id=>2, :trigger=>1, :system=>true}
 - Badge {:id=>9, :name=>"Autobiographer", :badge_type_id=>3, :multiple_grant=>false, :query=>"  SELECT u.id user_id, current_timestamp granted_at\n  FROM users u\n  JOIN user_profiles up on u.id = up.user_id\n  WHERE bio_raw IS NOT NULL AND LENGTH(TRIM(bio_raw)) > 10 AND\n        uploaded_avatar_id IS NOT NULL AND\n        (:backfill OR u.id IN (:user_ids) )\n", :default_badge_grouping_id=>1, :trigger=>8, :system=>true}
 - Badge {:id=>10, :name=>"Editor", :badge_type_id=>3, :multiple_grant=>false, :query=>"  SELECT p.user_id, min(p.id) post_id, min(p.created_at) granted_at\n  FROM badge_posts p\n  WHERE p.self_edits > 0 AND\n      (:backfill OR p.id IN (:post_ids) )\n  GROUP BY p.user_id\n", :default_badge_grouping_id=>1, :trigger=>2, :system=>true}
 - Badge {:id=>48, :name=>"Wiki Editor", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :query=>"SELECT DISTINCT ON (pr.user_id) pr.user_id, pr.post_id, pr.created_at granted_at\nFROM post_revisions pr\nJOIN badge_posts p on p.id = pr.post_id\nWHERE p.wiki\n    AND NOT pr.hidden\n    AND (:backfill OR p.id IN (:post_ids))\n", :default_badge_grouping_id=>1, :trigger=>2, :system=>true}
 - Badge {:id=>6, :name=>"Nice Post", :badge_type_id=>3, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"\n      SELECT p.user_id, p.id post_id, p.updated_at granted_at\n      FROM badge_posts p\n      WHERE p.post_number > 1 AND p.like_count >= 10 AND\n        (:backfill OR p.id IN (:post_ids) )\n    ", :default_badge_grouping_id=>3, :trigger=>1, :system=>true}
 - Badge {:id=>7, :name=>"Good Post", :badge_type_id=>2, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"\n      SELECT p.user_id, p.id post_id, p.updated_at granted_at\n      FROM badge_posts p\n      WHERE p.post_number > 1 AND p.like_count >= 25 AND\n        (:backfill OR p.id IN (:post_ids) )\n    ", :default_badge_grouping_id=>3, :trigger=>1, :system=>true}
 - Badge {:id=>8, :name=>"Great Post", :badge_type_id=>1, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"\n      SELECT p.user_id, p.id post_id, p.updated_at granted_at\n      FROM badge_posts p\n      WHERE p.post_number > 1 AND p.like_count >= 50 AND\n        (:backfill OR p.id IN (:post_ids) )\n    ", :default_badge_grouping_id=>3, :trigger=>1, :system=>true}
 - Badge {:id=>18, :name=>"Nice Topic", :badge_type_id=>3, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"\n      SELECT p.user_id, p.id post_id, p.updated_at granted_at\n      FROM badge_posts p\n      WHERE p.post_number = 1 AND p.like_count >= 10 AND\n        (:backfill OR p.id IN (:post_ids) )\n    ", :default_badge_grouping_id=>3, :trigger=>1, :system=>true}
 - Badge {:id=>19, :name=>"Good Topic", :badge_type_id=>2, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"\n      SELECT p.user_id, p.id post_id, p.updated_at granted_at\n      FROM badge_posts p\n      WHERE p.post_number = 1 AND p.like_count >= 25 AND\n        (:backfill OR p.id IN (:post_ids) )\n    ", :default_badge_grouping_id=>3, :trigger=>1, :system=>true}
 - Badge {:id=>20, :name=>"Great Topic", :badge_type_id=>1, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"\n      SELECT p.user_id, p.id post_id, p.updated_at granted_at\n      FROM badge_posts p\n      WHERE p.post_number = 1 AND p.like_count >= 50 AND\n        (:backfill OR p.id IN (:post_ids) )\n    ", :default_badge_grouping_id=>3, :trigger=>1, :system=>true}
 - Badge {:id=>24, :name=>"Anniversary", :default_icon=>"fa-clock-o", :badge_type_id=>2, :default_badge_grouping_id=>2, :query=>nil, :trigger=>0, :auto_revoke=>false, :system=>true, :multiple_grant=>true}
 - Badge {:id=>28, :name=>"Popular Link", :badge_type_id=>3, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"        SELECT tl.user_id, post_id, current_timestamp granted_at\n          FROM topic_links tl\n          JOIN badge_posts p ON p.id = post_id\n         WHERE NOT tl.internal\n           AND tl.clicks >= 50\n      GROUP BY tl.user_id, tl.post_id\n", :default_badge_grouping_id=>3, :trigger=>0, :system=>true}
 - Badge {:id=>29, :name=>"Hot Link", :badge_type_id=>2, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"        SELECT tl.user_id, post_id, current_timestamp granted_at\n          FROM topic_links tl\n          JOIN badge_posts p ON p.id = post_id\n         WHERE NOT tl.internal\n           AND tl.clicks >= 300\n      GROUP BY tl.user_id, tl.post_id\n", :default_badge_grouping_id=>3, :trigger=>0, :system=>true}
 - Badge {:id=>30, :name=>"Famous Link", :badge_type_id=>1, :multiple_grant=>true, :target_posts=>true, :show_posts=>true, :query=>"        SELECT tl.user_id, post_id, current_timestamp granted_at\n          FROM topic_links tl\n          JOIN badge_posts p ON p.id = post_id\n         WHERE NOT tl.internal\n           AND tl.clicks >= 1000\n      GROUP BY tl.user_id, tl.post_id\n", :default_badge_grouping_id=>3, :trigger=>0, :system=>true}
 - Badge {:id=>36, :name=>"Appreciated", :default_icon=>"fa-heart", :badge_type_id=>3, :query=>"      SELECT p.user_id, current_timestamp AS granted_at\n      FROM posts AS p\n      WHERE p.like_count >= 1\n        AND (:backfill OR p.user_id IN (:user_ids))\n      GROUP BY p.user_id\n      HAVING count(*) > 20\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>37, :name=>"Respected", :default_icon=>"fa-heart", :badge_type_id=>2, :query=>"      SELECT p.user_id, current_timestamp AS granted_at\n      FROM posts AS p\n      WHERE p.like_count >= 2\n        AND (:backfill OR p.user_id IN (:user_ids))\n      GROUP BY p.user_id\n      HAVING count(*) > 100\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>31, :name=>"Admired", :default_icon=>"fa-heart", :badge_type_id=>1, :query=>"      SELECT p.user_id, current_timestamp AS granted_at\n      FROM posts AS p\n      WHERE p.like_count >= 5\n        AND (:backfill OR p.user_id IN (:user_ids))\n      GROUP BY p.user_id\n      HAVING count(*) > 300\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>38, :name=>"Thank You", :default_icon=>"fa-heart", :badge_type_id=>3, :query=>"      SELECT us.user_id, current_timestamp AS granted_at\n      FROM user_stats AS us\n      INNER JOIN posts AS p ON p.user_id = us.user_id\n      WHERE p.like_count > 0\n        AND us.likes_given >= 10\n        AND (:backfill OR us.user_id IN (:user_ids))\n      GROUP BY us.user_id, us.likes_given\n      HAVING COUNT(*) > 20\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>32, :name=>"Gives Back", :default_icon=>"fa-heart", :badge_type_id=>2, :query=>"      SELECT us.user_id, current_timestamp AS granted_at\n      FROM user_stats AS us\n      INNER JOIN posts AS p ON p.user_id = us.user_id\n      WHERE p.like_count > 0\n        AND us.likes_given >= 100\n        AND (:backfill OR us.user_id IN (:user_ids))\n      GROUP BY us.user_id, us.likes_given\n      HAVING COUNT(*) > 100\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>39, :name=>"Empathetic", :default_icon=>"fa-heart", :badge_type_id=>1, :query=>"      SELECT us.user_id, current_timestamp AS granted_at\n      FROM user_stats AS us\n      INNER JOIN posts AS p ON p.user_id = us.user_id\n      WHERE p.like_count > 0\n        AND us.likes_given >= 1000\n        AND (:backfill OR us.user_id IN (:user_ids))\n      GROUP BY us.user_id, us.likes_given\n      HAVING COUNT(*) > 500\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>33, :name=>"Out of Love", :default_icon=>"fa-heart", :badge_type_id=>3, :query=>"      SELECT gdl.user_id, current_timestamp AS granted_at\n      FROM given_daily_likes AS gdl\n      WHERE gdl.limit_reached\n        AND (:backfill OR gdl.user_id IN (:user_ids))\n      GROUP BY gdl.user_id\n      HAVING COUNT(*) >= 1\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>34, :name=>"Higher Love", :default_icon=>"fa-heart", :badge_type_id=>2, :query=>"      SELECT gdl.user_id, current_timestamp AS granted_at\n      FROM given_daily_likes AS gdl\n      WHERE gdl.limit_reached\n        AND (:backfill OR gdl.user_id IN (:user_ids))\n      GROUP BY gdl.user_id\n      HAVING COUNT(*) >= 5\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>35, :name=>"Crazy in Love", :default_icon=>"fa-heart", :badge_type_id=>1, :query=>"      SELECT gdl.user_id, current_timestamp AS granted_at\n      FROM given_daily_likes AS gdl\n      WHERE gdl.limit_reached\n        AND (:backfill OR gdl.user_id IN (:user_ids))\n      GROUP BY gdl.user_id\n      HAVING COUNT(*) >= 20\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>40, :name=>"First Mention", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :show_posts=>true, :query=>"  SELECT acting_user_id AS user_id, min(target_post_id) AS post_id, min(p.created_at) AS granted_at\n  FROM user_actions\n  JOIN posts p ON p.id = target_post_id\n  JOIN topics t ON t.id = topic_id\n  JOIN categories c on c.id = category_id\n  WHERE action_type = 7\n    AND NOT read_restricted\n    AND p.deleted_at IS  NULL\n    AND t.deleted_at IS  NULL\n    AND t.visible\n    AND t.archetype <> 'private_message'\n    AND (:backfill OR p.id IN (:post_ids))\n  GROUP BY acting_user_id\n", :default_badge_grouping_id=>1, :trigger=>2, :system=>true}
 - Badge {:id=>41, :name=>"First Emoji", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :show_posts=>true, :query=>nil, :default_badge_grouping_id=>1, :trigger=>0, :system=>true}
 - Badge {:id=>42, :name=>"First Onebox", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :show_posts=>true, :query=>nil, :default_badge_grouping_id=>1, :trigger=>0, :system=>true}
 - Badge {:id=>43, :name=>"First Reply By Email", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>true, :show_posts=>true, :query=>nil, :default_badge_grouping_id=>1, :trigger=>0, :system=>true}
 - Badge {:id=>44, :name=>"New User of the Month", :badge_type_id=>3, :multiple_grant=>false, :target_posts=>false, :show_posts=>false, :query=>nil, :default_badge_grouping_id=>1, :trigger=>0, :system=>true}
 - Badge {:id=>45, :name=>"Enthusiast", :default_icon=>"fa-eye", :badge_type_id=>3, :query=>"WITH consecutive_visits AS (\n  SELECT user_id\n       , visited_at\n       , visited_at - (DENSE_RANK() OVER (PARTITION BY user_id ORDER BY visited_at))::int s\n    FROM user_visits\n), visits AS (\n  SELECT user_id\n       , MIN(visited_at) \"start\"\n       , DENSE_RANK() OVER (PARTITION BY user_id ORDER BY s) \"rank\"\n    FROM consecutive_visits\nGROUP BY user_id, s\n  HAVING COUNT(*) >= 10\n)\nSELECT user_id\n     , \"start\" + interval '10 days' \"granted_at\"\n  FROM visits\n WHERE \"rank\" = 1\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>46, :name=>"Aficionado", :default_icon=>"fa-eye", :badge_type_id=>2, :query=>"WITH consecutive_visits AS (\n  SELECT user_id\n       , visited_at\n       , visited_at - (DENSE_RANK() OVER (PARTITION BY user_id ORDER BY visited_at))::int s\n    FROM user_visits\n), visits AS (\n  SELECT user_id\n       , MIN(visited_at) \"start\"\n       , DENSE_RANK() OVER (PARTITION BY user_id ORDER BY s) \"rank\"\n    FROM consecutive_visits\nGROUP BY user_id, s\n  HAVING COUNT(*) >= 100\n)\nSELECT user_id\n     , \"start\" + interval '100 days' \"granted_at\"\n  FROM visits\n WHERE \"rank\" = 1\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}
 - Badge {:id=>47, :name=>"Devotee", :default_icon=>"fa-eye", :badge_type_id=>1, :query=>"WITH consecutive_visits AS (\n  SELECT user_id\n       , visited_at\n       , visited_at - (DENSE_RANK() OVER (PARTITION BY user_id ORDER BY visited_at))::int s\n    FROM user_visits\n), visits AS (\n  SELECT user_id\n       , MIN(visited_at) \"start\"\n       , DENSE_RANK() OVER (PARTITION BY user_id ORDER BY s) \"rank\"\n    FROM consecutive_visits\nGROUP BY user_id, s\n  HAVING COUNT(*) >= 365\n)\nSELECT user_id\n     , \"start\" + interval '365 days' \"granted_at\"\n  FROM visits\n WHERE \"rank\" = 1\n", :default_badge_grouping_id=>2, :trigger=>0, :auto_revoke=>false, :system=>true}

== Seed from /var/www/discourse/db/fixtures/007_web_hook_event_types.rb
 - WebHookEventType {:id=>1, :name=>"topic"}
 - WebHookEventType {:id=>2, :name=>"post"}
 - WebHookEventType {:id=>3, :name=>"user"}
 - WebHookEventType {:id=>4, :name=>"group"}
 - WebHookEventType {:id=>5, :name=>"category"}
 - WebHookEventType {:id=>6, :name=>"tag"}
 - WebHookEventType {:id=>7, :name=>"flag"}
 - WebHookEventType {:id=>8, :name=>"queued_post"}

== Seed from /var/www/discourse/db/fixtures/009_users.rb
 - UserEmail {:id=>-1, :email=>"no_email", :primary=>true, :user_id=>-1}
 - User {:id=>-1, :name=>"system", :username=>"system", :username_lower=>"system", :password=>"fe67300df3742a8c19a1528c71c086ea", :active=>true, :admin=>true, :moderator=>true, :approved=>true, :trust_level=>4}

== Seed from /var/www/discourse/db/fixtures/010_uploads.rb
 - Upload {:id=>-1, :user_id=>-1, :original_filename=>"d-logo-sketch.png", :url=>"/images/d-logo-sketch.png", :filesize=>14461, :extension=>"png"}
 - Upload {:id=>-2, :user_id=>-1, :original_filename=>"d-logo-sketch-small.png", :url=>"/images/d-logo-sketch-small.png", :filesize=>6175, :extension=>"png"}
 - Upload {:id=>-3, :user_id=>-1, :original_filename=>"default-favicon.ico", :url=>"/images/default-favicon.ico", :filesize=>6518, :extension=>"ico"}
 - Upload {:id=>-4, :user_id=>-1, :original_filename=>"default-apple-touch-icon.png", :url=>"/images/default-apple-touch-icon.png", :filesize=>8166, :extension=>"png"}

== Seed from /var/www/discourse/db/fixtures/500_categories.rb

== Seed from /var/www/discourse/db/fixtures/600_themes.rb
> Seeding dark and light themes

== Seed from /var/www/discourse/db/fixtures/990_settings.rb

== Seed from /var/www/discourse/db/fixtures/990_topics.rb

== Seed from /var/www/discourse/plugins/discourse-narrative-bot/db/fixtures/001_discobot.rb
 - UserEmail {:id=>-2, :email=>"discobot_email", :primary=>true, :user_id=>-2}
 - User {:id=>-2, :name=>"discobot", :username=>"discobot", :username_lower=>"discobot", :password=>"88a30772b3c7cf4efc1a43ca47fbe3ae", :active=>true, :approved=>true, :trust_level=>4}

== Seed from /var/www/discourse/plugins/discourse-narrative-bot/db/fixtures/002_badges.rb
/var/www/discourse/bundle/ruby/2.6.0/gems/shoulda-matchers-2.8.0/lib/shoulda/matchers/active_model/validate_inclusion_of_matcher.rb:251: warning: BigDecimal.new is deprecated; use BigDecimal() method instead.

Randomized with seed 12259
[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m2019-03-22 19:09:42.326 UTC [1228] ERROR:  duplicate key value violates unique constraint "index_user_emails_on_user_id_and_primary"
2019-03-22 19:09:42.326 UTC [1228] DETAIL:  Key (user_id, "primary")=(1787, t) already exists.
2019-03-22 19:09:42.326 UTC [1228] STATEMENT:  INSERT INTO "user_emails" ("user_id", "email", "primary", "created_at", "updated_at") VALUES (1787, 'bwayne1767@wayne.com', TRUE, '2019-03-22 19:09:42.326226', '2019-03-22 19:09:42.326226') RETURNING "id"
[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m109:S 22 Mar 2019 19:09:50.330 * Before turning into a replica, using my master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
109:S 22 Mar 2019 19:09:50.330 * REPLICAOF 10.0.0.1:99999 enabled (user request from 'id=24 addr=127.0.0.1:55070 fd=9 name= age=151 idle=0 flags=N db=1 sub=0 psub=0 multi=-1 qbuf=42 qbuf-free=32726 obl=0 oll=0 omem=0 events=r cmd=slaveof')
109:M 22 Mar 2019 19:09:50.330 # Setting secondary replication ID to efc6fdba4eb8c1c29771a093771e97068f9eed8c, valid up to offset: 1. New replication ID is 78c06d04541c76be842ca0bc2fb9d268b4f38413
109:M 22 Mar 2019 19:09:50.330 * Discarding previously cached master state.
109:M 22 Mar 2019 19:09:50.330 * MASTER MODE enabled (user request from 'id=24 addr=127.0.0.1:55070 fd=9 name= age=151 idle=0 flags=N db=1 sub=0 psub=0 multi=-1 qbuf=34 qbuf-free=32734 obl=0 oll=0 omem=0 events=r cmd=slaveof')
[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m2019-03-22 19:13:40.359 UTC [1245] ERROR:  canceling statement due to statement timeout
2019-03-22 19:13:40.359 UTC [1245] STATEMENT:  SELECT pg_sleep(5)
[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m2019-03-22 19:14:25.582 UTC [1245] ERROR:  Discourse: email in table_with_readonly_column is readonly
2019-03-22 19:14:25.582 UTC [1245] CONTEXT:  PL/pgSQL function discourse_functions.raise_table_with_readonly_column_email_readonly() line 3 at RAISE
2019-03-22 19:14:25.582 UTC [1245] STATEMENT:  UPDATE table_with_readonly_column
	SET email = 'testing@email.com'
	WHERE topic_id = 1;

[32m.[0m[32m.[0m2019-03-22 19:14:25.610 UTC [1245] ERROR:  Discourse: email in table_with_readonly_column is readonly
2019-03-22 19:14:25.610 UTC [1245] CONTEXT:  PL/pgSQL function discourse_functions.raise_table_with_readonly_column_email_readonly() line 3 at RAISE
2019-03-22 19:14:25.610 UTC [1245] STATEMENT:  INSERT INTO table_with_readonly_column (topic_id, email)
	VALUES (2, 'something@email.com');

[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m109:S 22 Mar 2019 19:14:37.723 * Before turning into a replica, using my master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
109:S 22 Mar 2019 19:14:37.723 * REPLICAOF 127.0.0.1:99991 enabled (user request from 'id=24 addr=127.0.0.1:55070 fd=9 name= age=438 idle=0 flags=N db=1 sub=0 psub=0 multi=-1 qbuf=43 qbuf-free=32725 obl=0 oll=0 omem=0 events=r cmd=slaveof')
109:M 22 Mar 2019 19:14:37.741 # Setting secondary replication ID to 78c06d04541c76be842ca0bc2fb9d268b4f38413, valid up to offset: 1. New replication ID is c258b143f581f9852fe6768cd5157419480dd28a
109:M 22 Mar 2019 19:14:37.741 * Discarding previously cached master state.
109:M 22 Mar 2019 19:14:37.741 * MASTER MODE enabled (user request from 'id=24 addr=127.0.0.1:55070 fd=9 name= age=438 idle=0 flags=N db=1 sub=0 psub=0 multi=-1 qbuf=34 qbuf-free=32734 obl=0 oll=0 omem=0 events=r cmd=slaveof')
[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m2019-03-22 19:18:05.436 UTC [1462] ERROR:  Discourse: table_with_old_name is read only
2019-03-22 19:18:05.436 UTC [1462] CONTEXT:  PL/pgSQL function discourse_functions.raise_table_with_old_name_readonly() line 3 at RAISE
2019-03-22 19:18:05.436 UTC [1462] STATEMENT:  INSERT INTO table_with_old_name (topic_id) VALUES (2)

[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m

Top 10 slowest examples (161.26 seconds, 20.0% of total time):
  Jobs::PullHotlinkedImages#execute onebox all combinations
    60.33 seconds ./spec/jobs/pull_hotlinked_images_spec.rb:104
  Jobs::PullHotlinkedImages#execute onebox replaces image src
    60.18 seconds ./spec/jobs/pull_hotlinked_images_spec.rb:93
  users/omniauth_callbacks/complete.html.erb renders cas data
    27.39 seconds ./spec/views/omniauth_callbacks/complete.html.erb_spec.rb:25
  CommonMark passes spec
    3 seconds ./spec/integrity/common_mark_spec.rb:5
  Tag can delete tags on deleted topics
    2.36 seconds ./spec/models/tag_spec.rb:49
  Admin::ThemesController#import can import a theme from Git
    1.74 seconds ./spec/requests/admin/themes_controller_spec.rb:83
  Post rake tasks rebake_match rebakes matched posts
    1.64 seconds ./spec/tasks/posts_spec.rb:47
  SiteSettingsTask export creates a hash of all site settings
    1.57 seconds ./spec/services/site_settings_spec.rb:10
  Report user_flagging_ratio with data it works
    1.54 seconds ./spec/models/report_spec.rb:970
  SiteSettingsTask import won't update a setting that doesn't exist
    1.51 seconds ./spec/services/site_settings_spec.rb:32

Top 10 slowest example groups:
  Jobs::PullHotlinkedImages
    [1m15.12[0m [1mseconds[0m average (120.95 seconds / 8 examples) ./spec/jobs/pull_hotlinked_images_spec.rb:4
  users/omniauth_callbacks/complete.html.erb
    [1m13.7[0m [1mseconds[0m average (27.4 seconds / 2 examples) ./spec/views/omniauth_callbacks/complete.html.erb_spec.rb:6
  CommonMark
    [1m3[0m [1mseconds[0m average (3 seconds / 1 example) ./spec/integrity/common_mark_spec.rb:4
  SiteSettingsTask
    [1m1.52[0m [1mseconds[0m average (6.06 seconds / 4 examples) ./spec/services/site_settings_spec.rb:3
  Redis rake tasks
    [1m1.51[0m [1mseconds[0m average (1.51 seconds / 1 example) ./spec/tasks/redis_spec.rb:3
  Post rake tasks
    [1m1.47[0m [1mseconds[0m average (5.89 seconds / 4 examples) ./spec/tasks/posts_spec.rb:5
  StylesheetsController
    [1m0.54539[0m [1mseconds[0m average (1.09 seconds / 2 examples) ./spec/requests/stylesheets_controller_spec.rb:3
  UserSearch
    [1m0.48403[0m [1mseconds[0m average (1.45 seconds / 3 examples) ./spec/models/user_search_spec.rb:3
  QuotedPost
    [1m0.42368[0m [1mseconds[0m average (1.27 seconds / 3 examples) ./spec/models/quoted_post_spec.rb:3
  PostMover
    [1m0.41071[0m [1mseconds[0m average (16.43 seconds / 40 examples) ./spec/models/post_mover_spec.rb:3

Finished in 13 minutes 26 seconds (files took 9.85 seconds to load)
[32m10765 examples, 0 failures[0m

Randomized with seed 12259

LOAD_PLUGINS=1 /usr/local/bin/ruby -S rspec ./plugins/discourse-narrative-bot/spec/requests/discobot_welcome_post_spec.rb ./plugins/discourse-narrative-bot/spec/requests/discobot_certificate_spec.rb ./plugins/discourse-narrative-bot/spec/discourse_narrative_bot/advanced_user_narrative_spec.rb ./plugins/discourse-narrative-bot/spec/discourse_narrative_bot/store_spec.rb ./plugins/discourse-narrative-bot/spec/discourse_narrative_bot/new_user_narrative_spec.rb ./plugins/discourse-narrative-bot/spec/discourse_narrative_bot/track_selector_spec.rb ./plugins/discourse-narrative-bot/spec/lib/certificate_generator_spec.rb ./plugins/discourse-narrative-bot/spec/jobs/send_default_welcome_message_spec.rb ./plugins/discourse-narrative-bot/spec/jobs/onceoff/grant_badges_spec.rb ./plugins/discourse-narrative-bot/spec/jobs/onceoff/remap_old_bot_iamges_spec.rb ./plugins/discourse-narrative-bot/spec/user_spec.rb ./plugins/discourse-presence/spec/requests/presence_controller_spec.rb ./plugins/discourse-presence/spec/presence_manager_spec.rb ./plugins/discourse-details/spec/components/pretty_text_spec.rb ./plugins/poll/spec/requests/users_controller_spec.rb ./plugins/poll/spec/lib/polls_updater_spec.rb ./plugins/poll/spec/lib/new_post_manager_spec.rb ./plugins/poll/spec/lib/pretty_text_spec.rb ./plugins/poll/spec/lib/polls_validator_spec.rb ./plugins/poll/spec/jobs/regular/close_poll_spec.rb ./plugins/poll/spec/integration/poll_endpoints_spec.rb ./plugins/poll/spec/controllers/posts_controller_spec.rb ./plugins/poll/spec/controllers/polls_controller_spec.rb ./plugins/poll/spec/db/post_migrate/migrate_polls_data_spec.rb ./plugins/discourse-nginx-performance-report/spec/line_parser_spec.rb ./plugins/discourse-local-dates/spec/lib/pretty_text_spec.rb ./plugins/discourse-local-dates/spec/models/post_spec.rb ./plugins/discourse-local-dates/spec/integration/local_dates_spec.rb
/var/www/discourse/bundle/ruby/2.6.0/gems/shoulda-matchers-2.8.0/lib/shoulda/matchers/active_model/validate_inclusion_of_matcher.rb:251: warning: BigDecimal.new is deprecated; use BigDecimal() method instead.

Randomized with seed 6293
[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m

Finished in 1 minute 28.96 seconds (files took 2.5 seconds to load)
[32m270 examples, 0 failures[0m

Randomized with seed 6293

[2K[1G[1myarn install v1.15.2[22m
[2K[1G[2m$ node -e "if(process.env.npm_execpath.indexOf('yarn') === -1) throw new Error('NPM is not supported, please use Yarn instead. ')"[22m
[2K[1G[2m[1/4][22m Resolving packages...
[1G[0K[2K[1G[2K[1G[2m[2/4][22m Fetching packages...
[2K[1G[1G[] 0/363[1G[] 107/363[1G[] 215/363[1G[] 302/363[1G[] 362/363[2K[1G[2m[3/4][22m Linking dependencies...
[1G[] 363/363[2K[1G[2K[1G[1G[] 0/390[2K[1G[2K[1G[1G[] 0/120[1G[] 120/120[2K[1G[2K[1G[1G[] 0/715[1G[] 406/715[2K[1G[2m[4/4][22m Building fresh packages...
[1B[1G[] 715/715[2K[1G[2K[1GDone in 1.42s.
Warming up Rails server
Puma starting in single mode...
* Version 3.12.0 (ruby 2.6.2-p47), codename: Llamas in Pajamas
* Min threads: 0, max threads: 16
* Environment: development
* Listening on tcp://0.0.0.0:60099
Use Ctrl-C to stop
Rails server is warmed up
node /var/www/discourse/test/run-qunit.js http://localhost:60099/qunit?seed=304691216275098133962654566400469666965 900000
navigate to http://localhost:60099/qunit?seed=304691216275098133962654566400469666965
DEBUG: -------------------------------
DEBUG: Ember  : 3.7.0
DEBUG: jQuery : 3.3.1
DEBUG: -------------------------------
DEPRECATION: Getting the '@each' property on object  is deprecated [deprecation id: ember-metal.getting-each] See https://emberjs.com/deprecations/v3.x#toc_getting-the-each-property for more details.
        at logDeprecationStackTrace (ember:31330:33)
        at HANDLERS.(anonymous function) (ember:31409:21)
        at raiseOnDeprecation (ember:31354:21)
        at HANDLERS.(anonymous function) (ember:31409:21)
        at invoke (ember:31418:21)
        at deprecate (ember:31390:38)
        at Array.eval (ember:22679:44)
        at ComputedProperty.get (ember:13194:36)
        at Array.CPGETTER_FUNCTION (ember:11472:31)

Running: {"hidepassed":"1","seed":"304691216275098133962654566400469666965"}

...........................................DEPRECATION: You attempted to remove a function listener which did not exist on the instance, which means it was an inherited prototype listener, or you attempted to remove it before it was added. Prototype function listeners have been deprecated, and attempting to remove a non-existent function listener this will error in the future. [deprecation id: events.inherited-function-listeners] See https://emberjs.com/deprecations/v3.x#toc_events-inherited-function-listeners for more details.
        at logDeprecationStackTrace (ember:31330:33)
        at HANDLERS.(anonymous function) (ember:31409:21)
        at raiseOnDeprecation (ember:31354:21)
        at HANDLERS.(anonymous function) (ember:31409:21)
        at invoke (ember:31418:21)
        at deprecate (ember:31390:38)
        at Meta.pushListener (ember:10380:147)
        at Meta.removeFromListeners (ember:10326:18)
        at removeListener (ember:10848:15)
.F......................................................................................................DEPRECATION: You attempted to remove a function listener which did not exist on the instance, which means it was an inherited prototype listener, or you attempted to remove it before it was added. Prototype function listeners have been deprecated, and attempting to remove a non-existent function listener this will error in the future. [deprecation id: events.inherited-function-listeners] See https://emberjs.com/deprecations/v3.x#toc_events-inherited-function-listeners for more details.
        at logDeprecationStackTrace (ember:31330:33)
        at HANDLERS.(anonymous function) (ember:31409:21)
        at raiseOnDeprecation (ember:31354:21)
        at HANDLERS.(anonymous function) (ember:31409:21)
        at invoke (ember:31418:21)
        at deprecate (ember:31390:38)
        at Meta.pushListener (ember:10380:147)
        at Meta.removeFromListeners (ember:10326:18)
        at removeListener (ember:10848:15)
......................F.........................F.......................................................................................................................DEPRECATION: You attempted to remove a function listener which did not exist on the instance, which means it was an inherited prototype listener, or you attempted to remove it before it was added. Prototype function listeners have been deprecated, and attempting to remove a non-existent function listener this will error in the future. [deprecation id: events.inherited-function-listeners] See https://emberjs.com/deprecations/v3.x#toc_events-inherited-function-listeners for more details.
        at logDeprecationStackTrace (ember:31330:33)
        at HANDLERS.(anonymous function) (ember:31409:21)
        at raiseOnDeprecation (ember:31354:21)
        at HANDLERS.(anonymous function) (ember:31409:21)
        at invoke (ember:31418:21)
        at deprecate (ember:31390:38)
        at Meta.pushListener (ember:10380:147)
        at Meta.removeFromListeners (ember:10326:18)
        at removeListener (ember:10848:15)
..............................................................................................................................................................................................................................................................................................................................................................................................................................................F................................................DEPRECATION: You attempted to remove a function listener which did not exist on the instance, which means it was an inherited prototype listener, or you attempted to remove it before it was added. Prototype function listeners have been deprecated, and attempting to remove a non-existent function listener this will error in the future. [deprecation id: events.inherited-function-listeners] See https://emberjs.com/deprecations/v3.x#toc_events-inherited-function-listeners for more details.
        at logDeprecationStackTrace (ember:31330:33)
        at HANDLERS.(anonymous function) (ember:31409:21)
        at raiseOnDeprecation (ember:31354:21)
        at HANDLERS.(anonymous function) (ember:31409:21)
        at invoke (ember:31418:21)
        at deprecate (ember:31390:38)
        at Meta.pushListener (ember:10380:147)
        at Meta.removeFromListeners (ember:10326:18)
        at removeListener (ember:10848:15)
..........................................F.......................................................................................................F.......................................

Module Failed: Acceptance: User Card
  Test Failed: user card
    Assertion Failed: user card is invisible by default
      Expected: true, Actual: false

Module Failed: Acceptance: Modal
  Test Failed: modal
    Assertion Failed: there is no modal at first
      Expected: true, Actual: false

Module Failed: Acceptance: Group Card
  Test Failed: Tests the Composer controls
    Assertion Failed: clicking the toggle hides the preview
      Expected: true, Actual: false
  Test Failed: second factor
    Assertion Failed: it hides the username and password prompt
  Test Failed: group card
    Assertion Failed: user card is invisible by default
      Expected: true, Actual: false

Module Failed: Acceptance: Composer


Module Failed: Acceptance: Group Card - Mobile
  Test Failed: group card
    Assertion Failed: user card is invisible by default
      Expected: true, Actual: false

Module Failed: Acceptance: Signing In


Slowest tests
----------------------------------------------
Acceptance: Composer Actions::replying to post - reply_as_new_topic: 5268ms
Acceptance: Composer Actions::replying to post as TL4 user: 5225ms
Acceptance: Composer::Image resizing buttons: 4582ms
Acceptance: Composer - Edit conflict::Should send originalText when editing a reply: 4544ms
Acceptance: Composer::Create an enqueued Reply: 4215ms
Acceptance: Composer Actions::replying to post - reply_to_topic: 4167ms
Acceptance: Keyboard Shortcuts::go to first suggested topic: 3995ms
Acceptance: EmojiPicker::emoji picker lazy loads emojis: 3946ms
Acceptance: Composer Actions::replying to post - toggle_topic_bump: 3929ms
Acceptance: Topic::Reply as new topic: 3914ms
Acceptance: Emoji::skin toned emoji is cooked properly: 3733ms
Acceptance: Category hashtag::category hashtag is cooked properly: 3663ms
Acceptance: Composer Actions::interactions: 3538ms
Acceptance: Topic - Edit timer::Manually closing before the timer will clear the status text: 3402ms
Acceptance: Composer Actions::replying to post - toggle_whisper: 3300ms
Acceptance: Topic featured links::select below: 3183ms
Acceptance: Topic featured links::selecting posts: 3182ms
Acceptance: Composer Actions::replying to post: 3119ms
Acceptance: Search::search scope checkbox: 2814ms
Acceptance: Topic::Updating the topic title and category: 2772ms
Acceptance: EmojiPicker::emoji picker correctly orders recently used emojis: 2732ms
Acceptance: Composer::Edit the first post: 2712ms
Acceptance: Jump to::invalid date: 2706ms
Acceptance: Composer::Switching composer whisper state: 2692ms
Acceptance: Composer Actions::replying to post - reply_as_private_message: 2646ms
Acceptance: Composer::Checks for existing draft: 2414ms
Acceptance: Composer::Create a Topic: 2395ms
Acceptance: Topic - Edit timer::TL4 can't auto-delete: 2340ms
Acceptance: Composer::Composer can toggle layouts (open, fullscreen and draft): 2315ms
Acceptance: Topic featured links::Unpinning unlisted topic: 2294ms
Time: 290342ms, Total: 3109, Passed: 3103, Failed: 6
rake aborted!
Command failed with status (1): [node /var/www/discourse/test/run-qunit.js ...]
/var/www/discourse/lib/tasks/qunit.rake:89:in `block in <main>'
/var/www/discourse/bundle/ruby/2.6.0/gems/rake-12.3.2/exe/rake:27:in `<top (required)>'
/usr/local/bin/bundle:23:in `load'
/usr/local/bin/bundle:23:in `<main>'
Tasks: TOP => qunit:test
(See full trace by running task with --trace)
Terminating
109:signal-handler (1553282854) Received SIGTERM scheduling shutdown...
2019-03-22 19:27:34.572 UTC [129] LOG:  received smart shutdown request
2019-03-22 19:27:34.573 UTC [129] LOG:  worker process: logical replication launcher (PID 137) exited with exit code 1
2019-03-22 19:27:34.576 UTC [132] LOG:  shutting down
109:M 22 Mar 2019 19:27:34.592 # User requested shutdown...
109:M 22 Mar 2019 19:27:34.592 # Redis is now ready to exit, bye bye...
2019-03-22 19:27:34.592 UTC [129] LOG:  database system is shut down
